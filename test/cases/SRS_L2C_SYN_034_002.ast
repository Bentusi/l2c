TopLevel(
	main(fun1),
	program
	(
		type_block
		(
			type(arr,array(typename(s1),INT(2 ))),
			type(s1,construct(field(label1,int)))
		),
		node
		(
			function,
			fun1,
			params(var_decls(vars(Input1),typename(arr)),var_decls(vars(Input2),typename(arr))),
			returns(var_decls(vars(Output1),int)),
			body
			(
				localvars(var_decls(vars(_L1),int),var_decls(vars(_L2),typename(arr)),var_decls(vars(_L3),typename(arr)),var_decls(vars(_L4),bool),var_decls(vars(_L5),int),var_decls(vars(_L6),int)),
				=(lvalue(ID(_L1,int,())),if_expr((int),(()),ID(_L4,bool,()),list_expr(ID(_L5,int,())),list_expr(ID(_L6,int,()))))
,				=(lvalue(ID(_L2,array(construct(field(label1,int)),INT(2 )),())),ID(Input1,array(construct(field(label1,int)),INT(2 )),()))
,				=(lvalue(ID(_L3,array(construct(field(label1,int)),INT(2 )),())),ID(Input2,array(construct(field(label1,int)),INT(2 )),()))
,				=(lvalue(ID(_L4,bool,())),binop_eq(bool,(),ID(_L2,array(construct(field(label1,int)),INT(2 )),()),ID(_L3,array(construct(field(label1,int)),INT(2 )),())))
,				=(lvalue(ID(_L5,int,())),INT(1))
,				=(lvalue(ID(_L6,int,())),INT(0))
,				=(lvalue(ID(Output1,int,())),ID(_L1,int,()))
			)
		)

	)
)