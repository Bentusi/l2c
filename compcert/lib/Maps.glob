DIGEST 8051aa256d956bf090a56f4ed01e6f07
FMaps
R2123:2133 Coq.Classes.Equivalence <> <> lib
R2135:2142 Coq.Classes.EquivDec <> <> lib
R2160:2165 Coqlib <> <> lib
modtype 2385:2388 <> TREE
var 2402:2404 TREE elt
var 2424:2429 TREE elt_eq
R2445:2447 Maps TREE elt defax
R2451:2451 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2457:2461 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2468:2468 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2453:2455 Coq.Init.Logic <> :type_scope:x_'='_x not
R2452:2452 Maps <> a var
R2456:2456 Maps <> b var
R2463:2466 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2462:2462 Maps <> a var
R2467:2467 Maps <> b var
var 2482:2482 TREE t
var 2510:2514 TREE empty
R2535:2535 Maps TREE t defax
R2537:2537 Maps <> A var
var 2551:2553 TREE get
R2588:2593 Coq.Init.Datatypes <> option ind
R2595:2595 Maps <> A var
R2581:2581 Maps TREE t defax
R2583:2583 Maps <> A var
R2574:2576 Maps TREE elt defax
var 2609:2611 TREE set
R2651:2651 Maps TREE t defax
R2653:2653 Maps <> A var
R2644:2644 Maps TREE t defax
R2646:2646 Maps <> A var
R2639:2639 Maps <> A var
R2632:2634 Maps TREE elt defax
var 2667:2672 TREE remove
R2707:2707 Maps TREE t defax
R2709:2709 Maps <> A var
R2700:2700 Maps TREE t defax
R2702:2702 Maps <> A var
R2693:2695 Maps TREE elt defax
var 2843:2848 TREE gempty
R2876:2878 Maps TREE elt defax
R2897:2899 Coq.Init.Logic <> :type_scope:x_'='_x not
R2882:2884 Maps TREE get defax
R2889:2893 Maps TREE empty defax
R2895:2895 Maps <> A var
R2886:2886 Maps <> i var
R2900:2903 Coq.Init.Datatypes <> None constr
var 2919:2921 TREE gss
R2949:2951 Maps TREE elt defax
R2958:2958 Maps <> A var
R2965:2965 Maps TREE t defax
R2967:2967 Maps <> A var
R2988:2990 Coq.Init.Logic <> :type_scope:x_'='_x not
R2971:2973 Maps TREE get defax
R2978:2980 Maps TREE set defax
R2986:2986 Maps <> m var
R2984:2984 Maps <> x var
R2982:2982 Maps <> i var
R2975:2975 Maps <> i var
R2991:2994 Coq.Init.Datatypes <> Some constr
R2996:2996 Maps <> x var
var 3012:3014 TREE gso
R3044:3046 Maps TREE elt defax
R3053:3053 Maps <> A var
R3060:3060 Maps TREE t defax
R3062:3062 Maps <> A var
R3097:3099 Coq.Init.Logic <> :type_scope:x_'='_x not
R3080:3082 Maps TREE get defax
R3087:3089 Maps TREE set defax
R3095:3095 Maps <> m var
R3093:3093 Maps <> x var
R3091:3091 Maps <> j var
R3084:3084 Maps <> i var
R3100:3102 Maps TREE get defax
R3106:3106 Maps <> m var
R3104:3104 Maps <> i var
R3071:3074 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3070:3070 Maps <> i var
R3075:3075 Maps <> j var
var 3122:3127 TREE gsspec
R3157:3159 Maps TREE elt defax
R3166:3166 Maps <> A var
R3173:3173 Maps TREE t defax
R3175:3175 Maps <> A var
R3200:3202 Coq.Init.Logic <> :type_scope:x_'='_x not
R3183:3185 Maps TREE get defax
R3190:3192 Maps TREE set defax
R3198:3198 Maps <> m var
R3196:3196 Maps <> x var
R3194:3194 Maps <> j var
R3187:3187 Maps <> i var
R3206:3211 Maps TREE elt_eq defax
R3215:3215 Maps <> j var
R3213:3213 Maps <> i var
R3234:3236 Maps TREE get defax
R3240:3240 Maps <> m var
R3238:3238 Maps <> i var
R3222:3225 Coq.Init.Datatypes <> Some constr
R3227:3227 Maps <> x var
var 3256:3262 TREE gsident
R3290:3292 Maps TREE elt defax
R3299:3299 Maps TREE t defax
R3301:3301 Maps <> A var
R3308:3308 Maps <> A var
R3345:3347 Coq.Init.Logic <> :type_scope:x_'='_x not
R3336:3338 Maps TREE set defax
R3344:3344 Maps <> m var
R3342:3342 Maps <> v var
R3340:3340 Maps <> i var
R3348:3348 Maps <> m var
R3323:3325 Coq.Init.Logic <> :type_scope:x_'='_x not
R3316:3318 Maps TREE get defax
R3322:3322 Maps <> m var
R3320:3320 Maps <> i var
R3326:3329 Coq.Init.Datatypes <> Some constr
R3331:3331 Maps <> v var
var 3557:3559 TREE grs
R3587:3589 Maps TREE elt defax
R3596:3596 Maps TREE t defax
R3598:3598 Maps <> A var
R3620:3622 Coq.Init.Logic <> :type_scope:x_'='_x not
R3602:3604 Maps TREE get defax
R3609:3614 Maps TREE remove defax
R3618:3618 Maps <> m var
R3616:3616 Maps <> i var
R3606:3606 Maps <> i var
R3623:3626 Coq.Init.Datatypes <> None constr
var 3642:3644 TREE gro
R3674:3676 Maps TREE elt defax
R3683:3683 Maps TREE t defax
R3685:3685 Maps <> A var
R3721:3723 Coq.Init.Logic <> :type_scope:x_'='_x not
R3703:3705 Maps TREE get defax
R3710:3715 Maps TREE remove defax
R3719:3719 Maps <> m var
R3717:3717 Maps <> j var
R3707:3707 Maps <> i var
R3724:3726 Maps TREE get defax
R3730:3730 Maps <> m var
R3728:3728 Maps <> i var
R3694:3697 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R3693:3693 Maps <> i var
R3698:3698 Maps <> j var
var 3746:3751 TREE grspec
R3781:3783 Maps TREE elt defax
R3790:3790 Maps TREE t defax
R3792:3792 Maps <> A var
R3818:3820 Coq.Init.Logic <> :type_scope:x_'='_x not
R3800:3802 Maps TREE get defax
R3807:3812 Maps TREE remove defax
R3816:3816 Maps <> m var
R3814:3814 Maps <> j var
R3804:3804 Maps <> i var
R3824:3829 Maps TREE elt_eq defax
R3833:3833 Maps <> j var
R3831:3831 Maps <> i var
R3850:3852 Maps TREE get defax
R3856:3856 Maps <> m var
R3854:3854 Maps <> i var
R3840:3843 Coq.Init.Datatypes <> None constr
var 3916:3918 TREE beq
R3973:3976 Coq.Init.Datatypes <> bool ind
R3966:3966 Maps TREE t defax
R3968:3968 Maps <> A var
R3959:3959 Maps TREE t defax
R3961:3961 Maps <> A var
R3950:3953 Coq.Init.Datatypes <> bool ind
R3945:3945 Maps <> A var
R3940:3940 Maps <> A var
var 3992:4002 TREE beq_correct
R4042:4045 Coq.Init.Datatypes <> bool ind
R4037:4037 Maps <> A var
R4032:4032 Maps <> A var
R4056:4056 Maps TREE t defax
R4058:4058 Maps <> A var
R4086:4095 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4246:4246 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R4079:4081 Coq.Init.Logic <> :type_scope:x_'='_x not
R4066:4068 Maps TREE beq defax
R4077:4078 Maps <> t2 var
R4074:4075 Maps <> t1 var
R4070:4072 Maps <> eqA var
R4082:4085 Coq.Init.Datatypes <> true constr
R4107:4109 Maps TREE elt defax
R4134:4136 Maps TREE get defax
R4140:4141 Maps <> t2 var
R4138:4138 Maps <> x var
R4124:4126 Maps TREE get defax
R4130:4131 Maps <> t1 var
R4128:4128 Maps <> x var
R4155:4158 Coq.Init.Datatypes <> None constr
R4161:4164 Coq.Init.Datatypes <> None constr
R4169:4172 Coq.Init.Logic <> True ind
R4181:4184 Coq.Init.Datatypes <> Some constr
R4190:4193 Coq.Init.Datatypes <> Some constr
R4210:4212 Coq.Init.Logic <> :type_scope:x_'='_x not
R4201:4203 Maps <> eqA var
R4213:4216 Coq.Init.Datatypes <> true constr
R4233:4237 Coq.Init.Logic <> False ind
var 4313:4315 TREE map
R4368:4368 Maps TREE t defax
R4370:4370 Maps <> B var
R4361:4361 Maps TREE t defax
R4363:4363 Maps <> A var
R4355:4355 Maps <> B var
R4350:4350 Maps <> A var
R4343:4345 Maps TREE elt defax
var 4386:4389 TREE gmap
R4431:4431 Maps <> B var
R4426:4426 Maps <> A var
R4419:4421 Maps TREE elt defax
R4438:4440 Maps TREE elt defax
R4447:4447 Maps TREE t defax
R4449:4449 Maps <> A var
R4472:4474 Coq.Init.Logic <> :type_scope:x_'='_x not
R4457:4459 Maps TREE get defax
R4464:4466 Maps TREE map defax
R4470:4470 Maps <> m var
R4468:4468 Maps <> f var
R4461:4461 Maps <> i var
R4475:4484 Coqlib <> option_map def
R4493:4495 Maps TREE get defax
R4499:4499 Maps <> m var
R4497:4497 Maps <> i var
R4487:4487 Maps <> f var
R4489:4489 Maps <> i var
var 4593:4596 TREE map1
R4642:4642 Maps TREE t defax
R4644:4644 Maps <> B var
R4635:4635 Maps TREE t defax
R4637:4637 Maps <> A var
R4629:4629 Maps <> B var
R4624:4624 Maps <> A var
var 4660:4664 TREE gmap1
R4699:4699 Maps <> B var
R4694:4694 Maps <> A var
R4706:4708 Maps TREE elt defax
R4715:4715 Maps TREE t defax
R4717:4717 Maps <> A var
R4741:4743 Coq.Init.Logic <> :type_scope:x_'='_x not
R4725:4727 Maps TREE get defax
R4732:4735 Maps TREE map1 defax
R4739:4739 Maps <> m var
R4737:4737 Maps <> f var
R4729:4729 Maps <> i var
R4744:4753 Coqlib <> option_map def
R4758:4760 Maps TREE get defax
R4764:4764 Maps <> m var
R4762:4762 Maps <> i var
R4755:4755 Maps <> f var
var 4844:4850 TREE combine
R4931:4931 Maps TREE t defax
R4933:4933 Maps <> C var
R4924:4924 Maps TREE t defax
R4926:4926 Maps <> B var
R4917:4917 Maps TREE t defax
R4919:4919 Maps <> A var
R4904:4909 Coq.Init.Datatypes <> option ind
R4911:4911 Maps <> C var
R4892:4897 Coq.Init.Datatypes <> option ind
R4899:4899 Maps <> B var
R4880:4885 Coq.Init.Datatypes <> option ind
R4887:4887 Maps <> A var
var 4949:4956 TREE gcombine
R5012:5017 Coq.Init.Datatypes <> option ind
R5019:5019 Maps <> C var
R5000:5005 Coq.Init.Datatypes <> option ind
R5007:5007 Maps <> B var
R4988:4993 Coq.Init.Datatypes <> option ind
R4995:4995 Maps <> A var
R5065:5065 Maps TREE t defax
R5067:5067 Maps <> A var
R5075:5075 Maps TREE t defax
R5077:5077 Maps <> B var
R5084:5086 Maps TREE elt defax
R5117:5119 Coq.Init.Logic <> :type_scope:x_'='_x not
R5094:5096 Maps TREE get defax
R5101:5107 Maps TREE combine defax
R5114:5115 Maps <> m2 var
R5111:5112 Maps <> m1 var
R5109:5109 Maps <> f var
R5098:5098 Maps <> i var
R5120:5120 Maps <> f var
R5134:5136 Maps TREE get defax
R5140:5141 Maps <> m2 var
R5138:5138 Maps <> i var
R5123:5125 Maps TREE get defax
R5129:5130 Maps <> m1 var
R5127:5127 Maps <> i var
R5038:5040 Coq.Init.Logic <> :type_scope:x_'='_x not
R5027:5027 Maps <> f var
R5034:5037 Coq.Init.Datatypes <> None constr
R5029:5032 Coq.Init.Datatypes <> None constr
R5041:5044 Coq.Init.Datatypes <> None constr
var 5158:5171 TREE combine_commut
R5227:5232 Coq.Init.Datatypes <> option ind
R5234:5234 Maps <> B var
R5215:5220 Coq.Init.Datatypes <> option ind
R5222:5222 Maps <> A var
R5203:5208 Coq.Init.Datatypes <> option ind
R5210:5210 Maps <> A var
R5304:5304 Maps TREE t defax
R5306:5306 Maps <> A var
R5329:5331 Coq.Init.Logic <> :type_scope:x_'='_x not
R5314:5320 Maps TREE combine defax
R5327:5328 Maps <> m2 var
R5324:5325 Maps <> m1 var
R5322:5322 Maps <> f var
R5332:5338 Maps TREE combine defax
R5345:5346 Maps <> m1 var
R5342:5343 Maps <> m2 var
R5340:5340 Maps <> g var
R5256:5261 Coq.Init.Datatypes <> option ind
R5263:5263 Maps <> A var
R5272:5274 Coq.Init.Logic <> :type_scope:x_'='_x not
R5267:5267 Maps <> f var
R5271:5271 Maps <> j var
R5269:5269 Maps <> i var
R5275:5275 Maps <> g var
R5279:5279 Maps <> i var
R5277:5277 Maps <> j var
var 5406:5413 TREE elements
R5445:5448 Coq.Init.Datatypes <> list ind
R5454:5456 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R5451:5453 Maps TREE elt defax
R5457:5457 Maps <> A var
R5438:5438 Maps TREE t defax
R5440:5440 Maps <> A var
var 5474:5489 TREE elements_correct
R5517:5517 Maps TREE t defax
R5519:5519 Maps <> A var
R5526:5528 Maps TREE elt defax
R5535:5535 Maps <> A var
R5563:5564 Coq.Lists.List <> In def
R5574:5581 Maps TREE elements defax
R5583:5583 Maps <> m var
R5566:5566 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5568:5569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5571:5571 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5567:5567 Maps <> i var
R5570:5570 Maps <> v var
R5550:5552 Coq.Init.Logic <> :type_scope:x_'='_x not
R5543:5545 Maps TREE get defax
R5549:5549 Maps <> m var
R5547:5547 Maps <> i var
R5553:5556 Coq.Init.Datatypes <> Some constr
R5558:5558 Maps <> v var
var 5600:5616 TREE elements_complete
R5644:5644 Maps TREE t defax
R5646:5646 Maps <> A var
R5653:5655 Maps TREE elt defax
R5662:5662 Maps <> A var
R5703:5705 Coq.Init.Logic <> :type_scope:x_'='_x not
R5696:5698 Maps TREE get defax
R5702:5702 Maps <> m var
R5700:5700 Maps <> i var
R5706:5709 Coq.Init.Datatypes <> Some constr
R5711:5711 Maps <> v var
R5670:5671 Coq.Lists.List <> In def
R5681:5688 Maps TREE elements defax
R5690:5690 Maps <> m var
R5673:5673 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5675:5676 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5678:5678 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R5674:5674 Maps <> i var
R5677:5677 Maps <> v var
var 5727:5747 TREE elements_keys_norepet
R5775:5775 Maps TREE t defax
R5777:5777 Maps <> A var
R5786:5797 Coqlib <> list_norepet ind
R5800:5807 Coq.Lists.List <> map def
R5823:5830 Maps TREE elements defax
R5832:5832 Maps <> m var
R5811:5813 Coq.Init.Datatypes <> fst def
R5819:5819 Maps <> A var
R5815:5817 Maps TREE elt defax
var 5906:5909 TREE fold
R5972:5972 Maps <> B var
R5967:5967 Maps <> B var
R5960:5960 Maps TREE t defax
R5962:5962 Maps <> A var
R5954:5954 Maps <> B var
R5949:5949 Maps <> A var
R5942:5944 Maps TREE elt defax
R5937:5937 Maps <> B var
var 5988:5996 TREE fold_spec
R6043:6043 Maps <> B var
R6038:6038 Maps <> A var
R6031:6033 Maps TREE elt defax
R6026:6026 Maps <> B var
R6050:6050 Maps <> B var
R6057:6057 Maps TREE t defax
R6059:6059 Maps <> A var
R6077:6083 Coq.Init.Logic <> :type_scope:x_'='_x not
R6067:6070 Maps TREE fold defax
R6076:6076 Maps <> v var
R6074:6074 Maps <> m var
R6072:6072 Maps <> f var
R6084:6097 Coq.Lists.List <> fold_left def
R6145:6145 Maps <> v var
R6133:6140 Maps TREE elements defax
R6142:6142 Maps <> m var
R6111:6111 Maps <> f var
R6124:6126 Coq.Init.Datatypes <> snd def
R6128:6128 Maps <> p var
R6116:6118 Coq.Init.Datatypes <> fst def
R6120:6120 Maps <> p var
R6113:6113 Maps <> a var
var 6238:6242 TREE fold1
R6298:6298 Maps <> B var
R6293:6293 Maps <> B var
R6286:6286 Maps TREE t defax
R6288:6288 Maps <> A var
R6280:6280 Maps <> B var
R6275:6275 Maps <> A var
R6270:6270 Maps <> B var
var 6314:6323 TREE fold1_spec
R6363:6363 Maps <> B var
R6358:6358 Maps <> A var
R6353:6353 Maps <> B var
R6370:6370 Maps <> B var
R6377:6377 Maps TREE t defax
R6379:6379 Maps <> A var
R6398:6404 Coq.Init.Logic <> :type_scope:x_'='_x not
R6387:6391 Maps TREE fold1 defax
R6397:6397 Maps <> v var
R6395:6395 Maps <> m var
R6393:6393 Maps <> f var
R6405:6418 Coq.Lists.List <> fold_left def
R6458:6458 Maps <> v var
R6446:6453 Maps TREE elements defax
R6455:6455 Maps <> m var
R6432:6432 Maps <> f var
R6437:6439 Coq.Init.Datatypes <> snd def
R6441:6441 Maps <> p var
R6434:6434 Maps <> a var
R6465:6468 Maps TREE <> modtype
modtype 6526:6528 <> MAP
var 6542:6544 MAP elt
var 6564:6569 MAP elt_eq
R6585:6587 Maps MAP elt defax
R6591:6591 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6597:6601 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6608:6608 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R6593:6595 Coq.Init.Logic <> :type_scope:x_'='_x not
R6592:6592 Maps <> a var
R6596:6596 Maps <> b var
R6603:6606 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R6602:6602 Maps <> a var
R6607:6607 Maps <> b var
var 6622:6622 MAP t
var 6650:6653 MAP init
R6679:6679 Maps MAP t defax
R6681:6681 Maps <> A var
R6674:6674 Maps <> A var
var 6695:6697 MAP get
R6732:6732 Maps <> A var
R6725:6725 Maps MAP t defax
R6727:6727 Maps <> A var
R6718:6720 Maps MAP elt defax
var 6746:6748 MAP set
R6788:6788 Maps MAP t defax
R6790:6790 Maps <> A var
R6781:6781 Maps MAP t defax
R6783:6783 Maps <> A var
R6776:6776 Maps <> A var
R6769:6771 Maps MAP elt defax
var 6806:6807 MAP gi
R6835:6837 Maps MAP elt defax
R6844:6844 Maps <> A var
R6862:6864 Coq.Init.Logic <> :type_scope:x_'='_x not
R6848:6850 Maps MAP get defax
R6855:6858 Maps MAP init defax
R6860:6860 Maps <> x var
R6852:6852 Maps <> i var
R6865:6865 Maps <> x var
var 6881:6883 MAP gss
R6911:6913 Maps MAP elt defax
R6920:6920 Maps <> A var
R6927:6927 Maps MAP t defax
R6929:6929 Maps <> A var
R6950:6952 Coq.Init.Logic <> :type_scope:x_'='_x not
R6933:6935 Maps MAP get defax
R6940:6942 Maps MAP set defax
R6948:6948 Maps <> m var
R6946:6946 Maps <> x var
R6944:6944 Maps <> i var
R6937:6937 Maps <> i var
R6953:6953 Maps <> x var
var 6969:6971 MAP gso
R7001:7003 Maps MAP elt defax
R7010:7010 Maps <> A var
R7017:7017 Maps MAP t defax
R7019:7019 Maps <> A var
R7054:7056 Coq.Init.Logic <> :type_scope:x_'='_x not
R7037:7039 Maps MAP get defax
R7044:7046 Maps MAP set defax
R7052:7052 Maps <> m var
R7050:7050 Maps <> x var
R7048:7048 Maps <> j var
R7041:7041 Maps <> i var
R7057:7059 Maps MAP get defax
R7063:7063 Maps <> m var
R7061:7061 Maps <> i var
R7028:7031 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R7027:7027 Maps <> i var
R7032:7032 Maps <> j var
var 7079:7084 MAP gsspec
R7114:7116 Maps MAP elt defax
R7123:7123 Maps <> A var
R7130:7130 Maps MAP t defax
R7132:7132 Maps <> A var
R7157:7159 Coq.Init.Logic <> :type_scope:x_'='_x not
R7140:7142 Maps MAP get defax
R7147:7149 Maps MAP set defax
R7155:7155 Maps <> m var
R7153:7153 Maps <> x var
R7151:7151 Maps <> j var
R7144:7144 Maps <> i var
R7163:7168 Maps MAP elt_eq defax
R7172:7172 Maps <> j var
R7170:7170 Maps <> i var
R7186:7188 Maps MAP get defax
R7192:7192 Maps <> m var
R7190:7190 Maps <> i var
R7179:7179 Maps <> x var
var 7208:7214 MAP gsident
R7244:7246 Maps MAP elt defax
R7253:7253 Maps MAP t defax
R7255:7255 Maps <> A var
R7284:7286 Coq.Init.Logic <> :type_scope:x_'='_x not
R7259:7261 Maps MAP get defax
R7266:7268 Maps MAP set defax
R7282:7282 Maps <> m var
R7273:7275 Maps MAP get defax
R7279:7279 Maps <> m var
R7277:7277 Maps <> i var
R7270:7270 Maps <> i var
R7263:7263 Maps <> j var
R7287:7289 Maps MAP get defax
R7293:7293 Maps <> m var
R7291:7291 Maps <> j var
var 7307:7309 MAP map
R7351:7351 Maps MAP t defax
R7353:7353 Maps <> B var
R7344:7344 Maps MAP t defax
R7346:7346 Maps <> A var
R7338:7338 Maps <> B var
R7333:7333 Maps <> A var
var 7369:7372 MAP gmap
R7407:7407 Maps <> B var
R7402:7402 Maps <> A var
R7414:7416 Maps MAP elt defax
R7423:7423 Maps MAP t defax
R7425:7425 Maps <> A var
R7448:7450 Coq.Init.Logic <> :type_scope:x_'='_x not
R7433:7435 Maps MAP get defax
R7440:7442 Maps MAP map defax
R7446:7446 Maps <> m var
R7444:7444 Maps <> f var
R7437:7437 Maps <> i var
R7451:7451 Maps <> f var
R7453:7455 Maps MAP get defax
R7459:7459 Maps <> m var
R7457:7457 Maps <> i var
R7467:7469 Maps MAP <> modtype
R7547:7550 Maps TREE <> mod
mod 7538:7542 <> PTree
def 7566:7568 PTree elt
R7573:7580 Coq.Numbers.BinNums <> positive ind
def 7596:7601 PTree elt_eq
R7606:7608 Coqlib <> peq def
ind 7624:7627 PTree tree
constr 7656:7659 PTree Leaf
constr 7676:7679 PTree Node
R7663:7666 Maps <> tree ind
R7715:7718 Maps <> tree ind
R7705:7708 Maps <> tree ind
R7693:7698 Coq.Init.Datatypes <> option ind
R7683:7686 Maps <> tree ind
R7745:7748 Maps PTree Leaf constr
R7776:7779 Maps PTree Node constr
def 7795:7802 PTree tree_ind
R7821:7824 Maps PTree tree ind
def 7851:7851 PTree t
R7856:7859 Maps PTree tree ind
def 7876:7880 PTree empty
R7904:7904 Maps PTree t def
R7906:7906 Maps <> A var
R7897:7900 Maps PTree Leaf constr
def 7922:7924 PTree get
R7942:7949 Coq.Numbers.BinNums <> positive ind
R7957:7957 Maps PTree t def
R7959:7959 Maps <> A var
R7975:7980 Coq.Init.Datatypes <> option ind
R7982:7982 Maps <> A var
R7997:7997 Maps <> m var
R8010:8013 Maps PTree Leaf constr
R8018:8021 Coq.Init.Datatypes <> None constr
R8029:8032 Maps PTree Node constr
R8057:8057 Maps <> i var
R8074:8075 Coq.Numbers.BinNums <> xH constr
R8092:8093 Coq.Numbers.BinNums <> xO constr
R8101:8103 Maps <> get def
R8120:8121 Coq.Numbers.BinNums <> xI constr
R8129:8131 Maps <> get def
def 8171:8173 PTree set
R8191:8198 Coq.Numbers.BinNums <> positive ind
R8206:8206 Maps <> A var
R8214:8214 Maps PTree t def
R8216:8216 Maps <> A var
R8232:8232 Maps PTree t def
R8234:8234 Maps <> A var
R8249:8249 Maps <> m var
R8262:8265 Maps PTree Leaf constr
R8284:8284 Maps <> i var
R8301:8302 Coq.Numbers.BinNums <> xH constr
R8307:8310 Maps PTree Node constr
R8326:8329 Maps PTree Leaf constr
R8318:8321 Coq.Init.Datatypes <> Some constr
R8323:8323 Maps <> v var
R8312:8315 Maps PTree Leaf constr
R8341:8342 Coq.Numbers.BinNums <> xO constr
R8350:8353 Maps PTree Node constr
R8376:8379 Maps PTree Leaf constr
R8371:8374 Coq.Init.Datatypes <> None constr
R8356:8358 Maps <> set def
R8365:8368 Maps PTree Leaf constr
R8363:8363 Maps <> v var
R8391:8392 Coq.Numbers.BinNums <> xI constr
R8400:8403 Maps PTree Node constr
R8416:8418 Maps <> set def
R8425:8428 Maps PTree Leaf constr
R8423:8423 Maps <> v var
R8410:8413 Coq.Init.Datatypes <> None constr
R8405:8408 Maps PTree Leaf constr
R8449:8452 Maps PTree Node constr
R8477:8477 Maps <> i var
R8494:8495 Coq.Numbers.BinNums <> xH constr
R8500:8503 Maps PTree Node constr
R8508:8511 Coq.Init.Datatypes <> Some constr
R8513:8513 Maps <> v var
R8528:8529 Coq.Numbers.BinNums <> xO constr
R8537:8540 Maps PTree Node constr
R8543:8545 Maps <> set def
R8550:8550 Maps <> v var
R8569:8570 Coq.Numbers.BinNums <> xI constr
R8578:8581 Maps PTree Node constr
R8588:8590 Maps <> set def
R8595:8595 Maps <> v var
def 8633:8638 PTree remove
R8656:8663 Coq.Numbers.BinNums <> positive ind
R8671:8671 Maps PTree t def
R8673:8673 Maps <> A var
R8689:8689 Maps PTree t def
R8691:8691 Maps <> A var
R8706:8706 Maps <> i var
R8719:8720 Coq.Numbers.BinNums <> xH constr
R8739:8739 Maps <> m var
R8756:8759 Maps PTree Leaf constr
R8764:8767 Maps PTree Leaf constr
R8779:8782 Maps PTree Node constr
R8784:8787 Maps PTree Leaf constr
R8791:8794 Maps PTree Leaf constr
R8799:8802 Maps PTree Leaf constr
R8814:8817 Maps PTree Node constr
R8828:8831 Maps PTree Node constr
R8835:8838 Coq.Init.Datatypes <> None constr
R8860:8861 Coq.Numbers.BinNums <> xO constr
R8883:8883 Maps <> m var
R8900:8903 Maps PTree Leaf constr
R8908:8911 Maps PTree Leaf constr
R8923:8926 Maps PTree Node constr
R8930:8933 Coq.Init.Datatypes <> None constr
R8935:8938 Maps PTree Leaf constr
R8961:8966 Maps <> remove def
R8992:8995 Maps PTree Leaf constr
R9000:9003 Maps PTree Leaf constr
R9025:9028 Maps PTree Node constr
R9038:9041 Maps PTree Leaf constr
R9033:9036 Coq.Init.Datatypes <> None constr
R9069:9072 Maps PTree Node constr
R9083:9086 Maps PTree Node constr
R9089:9094 Maps <> remove def
R9124:9125 Coq.Numbers.BinNums <> xI constr
R9147:9147 Maps <> m var
R9164:9167 Maps PTree Leaf constr
R9172:9175 Maps PTree Leaf constr
R9187:9190 Maps PTree Node constr
R9192:9195 Maps PTree Leaf constr
R9197:9200 Coq.Init.Datatypes <> None constr
R9225:9230 Maps <> remove def
R9256:9259 Maps PTree Leaf constr
R9264:9267 Maps PTree Leaf constr
R9289:9292 Maps PTree Node constr
R9299:9302 Coq.Init.Datatypes <> None constr
R9294:9297 Maps PTree Leaf constr
R9333:9336 Maps PTree Node constr
R9347:9350 Maps PTree Node constr
R9357:9362 Maps <> remove def
prf 9402:9407 PTree gempty
R9435:9442 Coq.Numbers.BinNums <> positive ind
R9461:9463 Coq.Init.Logic <> :type_scope:x_'='_x not
R9446:9448 Maps PTree get def
R9453:9457 Maps PTree empty def
R9459:9459 Maps <> A var
R9450:9450 Maps <> i var
R9464:9467 Coq.Init.Datatypes <> None constr
prf 9527:9529 PTree gss
R9557:9564 Coq.Numbers.BinNums <> positive ind
R9571:9571 Maps <> A var
R9578:9578 Maps PTree t def
R9580:9580 Maps <> A var
R9601:9603 Coq.Init.Logic <> :type_scope:x_'='_x not
R9584:9586 Maps PTree get def
R9591:9593 Maps PTree set def
R9599:9599 Maps <> m var
R9597:9597 Maps <> x var
R9595:9595 Maps <> i var
R9588:9588 Maps <> i var
R9604:9607 Coq.Init.Datatypes <> Some constr
R9609:9609 Maps <> x var
prf 9681:9685 PTree gleaf
R9712:9719 Coq.Numbers.BinNums <> positive ind
R9741:9743 Coq.Init.Logic <> :type_scope:x_'='_x not
R9723:9725 Maps PTree get def
R9737:9737 Maps PTree t def
R9739:9739 Maps <> A var
R9730:9733 Maps PTree Leaf constr
R9727:9727 Maps <> i var
R9744:9747 Coq.Init.Datatypes <> None constr
R9767:9772 Maps PTree gempty thm
R9767:9772 Maps PTree gempty thm
prf 9791:9793 PTree gso
R9823:9830 Coq.Numbers.BinNums <> positive ind
R9837:9837 Maps <> A var
R9844:9844 Maps PTree t def
R9846:9846 Maps <> A var
R9881:9883 Coq.Init.Logic <> :type_scope:x_'='_x not
R9864:9866 Maps PTree get def
R9871:9873 Maps PTree set def
R9879:9879 Maps <> m var
R9877:9877 Maps <> x var
R9875:9875 Maps <> j var
R9868:9868 Maps <> i var
R9884:9886 Maps PTree get def
R9890:9890 Maps <> m var
R9888:9888 Maps <> i var
R9855:9858 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R9854:9854 Maps <> i var
R9859:9859 Maps <> j var
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
R9981:9985 Maps PTree gleaf thm
prf 10044:10049 PTree gsspec
R10079:10086 Coq.Numbers.BinNums <> positive ind
R10093:10093 Maps <> A var
R10100:10100 Maps PTree t def
R10102:10102 Maps <> A var
R10127:10129 Coq.Init.Logic <> :type_scope:x_'='_x not
R10110:10112 Maps PTree get def
R10117:10119 Maps PTree set def
R10125:10125 Maps <> m var
R10123:10123 Maps <> x var
R10121:10121 Maps <> j var
R10114:10114 Maps <> i var
R10133:10135 Coqlib <> peq def
R10139:10139 Maps <> j var
R10137:10137 Maps <> i var
R10158:10160 Maps PTree get def
R10164:10164 Maps <> m var
R10162:10162 Maps <> i var
R10146:10149 Coq.Init.Datatypes <> Some constr
R10151:10151 Maps <> x var
R10202:10204 Coqlib <> peq def
R10231:10233 Maps PTree gss thm
R10243:10245 Maps PTree gso thm
R10202:10204 Coqlib <> peq def
R10231:10233 Maps PTree gss thm
R10243:10245 Maps PTree gso thm
prf 10274:10280 PTree gsident
R10308:10315 Coq.Numbers.BinNums <> positive ind
R10322:10322 Maps PTree t def
R10324:10324 Maps <> A var
R10331:10331 Maps <> A var
R10368:10370 Coq.Init.Logic <> :type_scope:x_'='_x not
R10359:10361 Maps PTree set def
R10367:10367 Maps <> m var
R10365:10365 Maps <> v var
R10363:10363 Maps <> i var
R10371:10371 Maps <> m var
R10346:10348 Coq.Init.Logic <> :type_scope:x_'='_x not
R10339:10341 Maps PTree get def
R10345:10345 Maps <> m var
R10343:10343 Maps <> i var
R10349:10352 Coq.Init.Datatypes <> Some constr
R10354:10354 Maps <> v var
prf 10551:10554 PTree set2
R10582:10584 Maps PTree elt def
R10591:10591 Maps PTree t def
R10593:10593 Maps <> A var
R10604:10604 Maps <> A var
R10633:10635 Coq.Init.Logic <> :type_scope:x_'='_x not
R10612:10614 Maps PTree set def
R10622:10624 Maps PTree set def
R10631:10631 Maps <> m var
R10628:10629 Maps <> v1 var
R10626:10626 Maps <> i var
R10618:10619 Maps <> v2 var
R10616:10616 Maps <> i var
R10636:10638 Maps PTree set def
R10645:10645 Maps <> m var
R10642:10643 Maps <> v2 var
R10640:10640 Maps <> i var
prf 10742:10746 PTree rleaf
R10773:10780 Coq.Numbers.BinNums <> positive ind
R10805:10807 Coq.Init.Logic <> :type_scope:x_'='_x not
R10784:10789 Maps PTree remove def
R10801:10801 Maps PTree t def
R10803:10803 Maps <> A var
R10794:10797 Maps PTree Leaf constr
R10791:10791 Maps <> i var
R10808:10811 Maps PTree Leaf constr
prf 10864:10866 PTree grs
R10894:10901 Coq.Numbers.BinNums <> positive ind
R10908:10908 Maps PTree t def
R10910:10910 Maps <> A var
R10932:10934 Coq.Init.Logic <> :type_scope:x_'='_x not
R10914:10916 Maps PTree get def
R10921:10926 Maps PTree remove def
R10930:10930 Maps <> m var
R10928:10928 Maps <> i var
R10918:10918 Maps <> i var
R10935:10938 Coq.Init.Datatypes <> None constr
R11085:11089 Maps PTree rleaf thm
R11085:11089 Maps PTree rleaf thm
R11146:11148 Coq.Init.Logic <> :type_scope:x_'='_x not
R11114:11116 Maps PTree get def
R11121:11126 Maps PTree remove def
R11131:11134 Maps PTree Node constr
R11149:11152 Coq.Init.Datatypes <> None constr
R11146:11148 Coq.Init.Logic <> :type_scope:x_'='_x not
R11114:11116 Maps PTree get def
R11121:11126 Maps PTree remove def
R11131:11134 Maps PTree Node constr
R11149:11152 Coq.Init.Datatypes <> None constr
R11174:11179 Maps PTree remove def
R11184:11187 Maps PTree Node constr
R11174:11179 Maps PTree remove def
R11184:11187 Maps PTree Node constr
R11343:11347 Maps PTree rleaf thm
R11343:11347 Maps PTree rleaf thm
R11404:11406 Coq.Init.Logic <> :type_scope:x_'='_x not
R11372:11374 Maps PTree get def
R11379:11384 Maps PTree remove def
R11389:11392 Maps PTree Node constr
R11407:11410 Coq.Init.Datatypes <> None constr
R11404:11406 Coq.Init.Logic <> :type_scope:x_'='_x not
R11372:11374 Maps PTree get def
R11379:11384 Maps PTree remove def
R11389:11392 Maps PTree Node constr
R11407:11410 Coq.Init.Datatypes <> None constr
R11432:11437 Maps PTree remove def
R11442:11445 Maps PTree Node constr
R11432:11437 Maps PTree remove def
R11442:11445 Maps PTree Node constr
prf 11575:11577 PTree gro
R11607:11614 Coq.Numbers.BinNums <> positive ind
R11621:11621 Maps PTree t def
R11623:11623 Maps <> A var
R11659:11661 Coq.Init.Logic <> :type_scope:x_'='_x not
R11641:11643 Maps PTree get def
R11648:11653 Maps PTree remove def
R11657:11657 Maps <> m var
R11655:11655 Maps <> j var
R11645:11645 Maps <> i var
R11662:11664 Maps PTree get def
R11668:11668 Maps <> m var
R11666:11666 Maps <> i var
R11632:11635 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R11631:11631 Maps <> i var
R11636:11636 Maps <> j var
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11826:11830 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R12004:12008 Maps PTree gleaf thm
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11750:11754 Maps PTree rleaf thm
R11759:11760 Coq.Numbers.BinNums <> xI constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11788:11792 Maps PTree rleaf thm
R11797:11798 Coq.Numbers.BinNums <> xO constr
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11826:11830 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R11965:11969 Maps PTree rleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12004:12008 Maps PTree gleaf thm
R12067:12069 Coq.Init.Logic <> :type_scope:x_'='_x not
R12032:12034 Maps PTree get def
R12039:12044 Maps PTree remove def
R12049:12052 Maps PTree Node constr
R12070:12072 Maps PTree get def
R12077:12080 Maps PTree Node constr
R12117:12122 Maps PTree remove def
R12127:12130 Maps PTree Node constr
R12160:12164 Maps PTree gleaf thm
R12067:12069 Coq.Init.Logic <> :type_scope:x_'='_x not
R12032:12034 Maps PTree get def
R12039:12044 Maps PTree remove def
R12049:12052 Maps PTree Node constr
R12070:12072 Maps PTree get def
R12077:12080 Maps PTree Node constr
R12117:12122 Maps PTree remove def
R12127:12130 Maps PTree Node constr
R12160:12164 Maps PTree gleaf thm
R12160:12164 Maps PTree gleaf thm
R12227:12232 Maps PTree remove def
R12237:12240 Maps PTree Node constr
R12278:12282 Maps PTree gleaf thm
R12227:12232 Maps PTree remove def
R12237:12240 Maps PTree Node constr
R12278:12282 Maps PTree gleaf thm
R12278:12282 Maps PTree gleaf thm
R12319:12324 Maps PTree remove def
R12329:12332 Maps PTree Node constr
R12369:12373 Maps PTree gleaf thm
R12319:12324 Maps PTree remove def
R12329:12332 Maps PTree Node constr
R12369:12373 Maps PTree gleaf thm
R12369:12373 Maps PTree gleaf thm
R12441:12443 Coq.Init.Logic <> :type_scope:x_'='_x not
R12405:12407 Maps PTree get def
R12412:12417 Maps PTree remove def
R12422:12425 Maps PTree Node constr
R12444:12446 Maps PTree get def
R12451:12454 Maps PTree Node constr
R12492:12497 Maps PTree remove def
R12502:12505 Maps PTree Node constr
R12536:12540 Maps PTree gleaf thm
R12441:12443 Coq.Init.Logic <> :type_scope:x_'='_x not
R12405:12407 Maps PTree get def
R12412:12417 Maps PTree remove def
R12422:12425 Maps PTree Node constr
R12444:12446 Maps PTree get def
R12451:12454 Maps PTree Node constr
R12492:12497 Maps PTree remove def
R12502:12505 Maps PTree Node constr
R12536:12540 Maps PTree gleaf thm
R12536:12540 Maps PTree gleaf thm
R12603:12608 Maps PTree remove def
R12613:12616 Maps PTree Node constr
R12653:12657 Maps PTree gleaf thm
R12603:12608 Maps PTree remove def
R12613:12616 Maps PTree Node constr
R12653:12657 Maps PTree gleaf thm
R12653:12657 Maps PTree gleaf thm
R12694:12699 Maps PTree remove def
R12704:12707 Maps PTree Node constr
R12745:12749 Maps PTree gleaf thm
R12694:12699 Maps PTree remove def
R12704:12707 Maps PTree Node constr
R12745:12749 Maps PTree gleaf thm
R12745:12749 Maps PTree gleaf thm
prf 12789:12794 PTree grspec
R12824:12826 Maps PTree elt def
R12833:12833 Maps PTree t def
R12835:12835 Maps <> A var
R12861:12863 Coq.Init.Logic <> :type_scope:x_'='_x not
R12843:12845 Maps PTree get def
R12850:12855 Maps PTree remove def
R12859:12859 Maps <> m var
R12857:12857 Maps <> j var
R12847:12847 Maps <> i var
R12867:12872 Maps PTree elt_eq def
R12876:12876 Maps <> j var
R12874:12874 Maps <> i var
R12893:12895 Maps PTree get def
R12899:12899 Maps <> m var
R12897:12897 Maps <> i var
R12883:12886 Coq.Init.Datatypes <> None constr
R12933:12938 Maps PTree elt_eq def
R12933:12938 Maps PTree elt_eq def
R12961:12963 Maps PTree grs thm
R12961:12963 Maps PTree grs thm
R12972:12974 Maps PTree gro thm
R12972:12974 Maps PTree gro thm
sec 13001:13016 PTree BOOLEAN_EQUALITY
var 13033:13033 PTree.BOOLEAN_EQUALITY A
var 13055:13058 PTree.BOOLEAN_EQUALITY beqA
R13071:13074 Coq.Init.Datatypes <> bool ind
R13066:13066 Maps <> PTree.BOOLEAN_EQUALITY.A var
R13061:13061 Maps <> PTree.BOOLEAN_EQUALITY.A var
def 13091:13096 PTree bempty
R13102:13102 Maps PTree t def
R13104:13104 Maps <> PTree.BOOLEAN_EQUALITY.A var
R13109:13112 Coq.Init.Datatypes <> bool ind
R13129:13129 Maps <> m var
R13144:13147 Maps PTree Leaf constr
R13152:13155 Coq.Init.Datatypes <> true constr
R13165:13168 Maps PTree Node constr
R13172:13175 Coq.Init.Datatypes <> None constr
R13190:13193 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13182:13187 Maps <> bempty def
R13194:13199 Maps <> bempty def
R13211:13214 Maps PTree Node constr
R13219:13222 Coq.Init.Datatypes <> Some constr
R13232:13236 Coq.Init.Datatypes <> false constr
def 13263:13265 PTree beq
R13275:13275 Maps PTree t def
R13277:13277 Maps <> PTree.BOOLEAN_EQUALITY.A var
R13294:13297 Coq.Init.Datatypes <> bool ind
R13318:13319 Maps <> m2 var
R13314:13315 Maps <> m1 var
R13334:13337 Maps PTree Leaf constr
R13345:13350 Maps PTree bempty def
R13352:13353 Maps <> m2 var
R13366:13369 Maps PTree Leaf constr
R13374:13379 Maps PTree bempty def
R13381:13382 Maps <> m1 var
R13392:13395 Maps PTree Node constr
R13407:13410 Maps PTree Node constr
R13588:13591 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13565:13578 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R13464:13467 Coq.Init.Datatypes <> None constr
R13470:13473 Coq.Init.Datatypes <> None constr
R13478:13481 Coq.Init.Datatypes <> true constr
R13495:13498 Coq.Init.Datatypes <> Some constr
R13504:13507 Coq.Init.Datatypes <> Some constr
R13515:13518 Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R13546:13550 Coq.Init.Datatypes <> false constr
R13579:13581 Maps <> beq def
R13592:13594 Maps <> beq def
prf 13624:13637 PTree bempty_correct
R13671:13676 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13701:13701 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R13664:13666 Coq.Init.Logic <> :type_scope:x_'='_x not
R13656:13661 Maps PTree bempty def
R13663:13663 Maps <> m var
R13667:13670 Coq.Init.Datatypes <> true constr
R13694:13696 Coq.Init.Logic <> :type_scope:x_'='_x not
R13687:13689 Maps PTree get def
R13693:13693 Maps <> m var
R13691:13691 Maps <> x var
R13697:13700 Coq.Init.Datatypes <> None constr
R13768:13772 Maps PTree gleaf thm
R13768:13772 Maps PTree gleaf thm
R13852:13853 Coq.Numbers.BinNums <> xH constr
R13852:13853 Coq.Numbers.BinNums <> xH constr
R13892:13900 Coq.Init.Datatypes <> andb_prop thm
R13892:13900 Coq.Init.Datatypes <> andb_prop thm
R13993:14007 Coq.Init.Datatypes <> andb_true_intro thm
R13993:14007 Coq.Init.Datatypes <> andb_true_intro thm
R14054:14055 Coq.Numbers.BinNums <> xO constr
R14054:14055 Coq.Numbers.BinNums <> xO constr
R14098:14099 Coq.Numbers.BinNums <> xI constr
R14098:14099 Coq.Numbers.BinNums <> xI constr
prf 14126:14136 PTree beq_correct
R14181:14192 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14355:14355 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R14174:14176 Coq.Init.Logic <> :type_scope:x_'='_x not
R14165:14167 Maps PTree beq def
R14172:14173 Maps <> m2 var
R14169:14170 Maps <> m1 var
R14177:14180 Coq.Init.Datatypes <> true constr
R14204:14206 Maps PTree elt def
R14233:14235 Maps PTree get def
R14239:14240 Maps <> m2 var
R14237:14237 Maps <> x var
R14223:14225 Maps PTree get def
R14229:14230 Maps <> m1 var
R14227:14227 Maps <> x var
R14256:14259 Coq.Init.Datatypes <> None constr
R14262:14265 Coq.Init.Datatypes <> None constr
R14270:14273 Coq.Init.Logic <> True ind
R14284:14287 Coq.Init.Datatypes <> Some constr
R14293:14296 Coq.Init.Datatypes <> Some constr
R14314:14316 Coq.Init.Logic <> :type_scope:x_'='_x not
R14304:14307 Maps <> PTree.BOOLEAN_EQUALITY.beqA var
R14317:14320 Coq.Init.Datatypes <> true constr
R14339:14343 Coq.Init.Logic <> False ind
R14418:14431 Maps PTree bempty_correct thm
R14418:14431 Maps PTree bempty_correct thm
R14463:14467 Maps PTree gleaf thm
R14463:14467 Maps PTree gleaf thm
R14519:14523 Maps PTree gleaf thm
R14519:14523 Maps PTree gleaf thm
R14536:14538 Maps PTree get def
R14536:14538 Maps PTree get def
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R14589:14591 Maps PTree beq def
R14602:14615 Maps PTree bempty_correct thm
R14602:14615 Maps PTree bempty_correct thm
R14660:14664 Maps PTree gleaf thm
R14660:14664 Maps PTree gleaf thm
R14707:14711 Maps PTree gleaf thm
R14707:14711 Maps PTree gleaf thm
R14724:14726 Maps PTree get def
R14731:14734 Maps PTree Node constr
R14724:14726 Maps PTree get def
R14731:14734 Maps PTree Node constr
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R14808:14816 Coq.Init.Datatypes <> andb_prop thm
R14808:14816 Coq.Init.Datatypes <> andb_prop thm
R14836:14844 Coq.Init.Datatypes <> andb_prop thm
R14836:14844 Coq.Init.Datatypes <> andb_prop thm
R15030:15044 Coq.Init.Datatypes <> andb_true_intro thm
R15030:15044 Coq.Init.Datatypes <> andb_true_intro thm
R15060:15074 Coq.Init.Datatypes <> andb_true_intro thm
R15060:15074 Coq.Init.Datatypes <> andb_true_intro thm
R15108:15109 Coq.Numbers.BinNums <> xH constr
R15108:15109 Coq.Numbers.BinNums <> xH constr
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R15195:15196 Coq.Numbers.BinNums <> xO constr
R15195:15196 Coq.Numbers.BinNums <> xO constr
R15245:15246 Coq.Numbers.BinNums <> xI constr
R15245:15246 Coq.Numbers.BinNums <> xI constr
R15269:15284 Maps PTree.BOOLEAN_EQUALITY <> sec
def 15299:15309 PTree prev_append
R15317:15324 Coq.Numbers.BinNums <> positive ind
R15340:15347 Coq.Numbers.BinNums <> positive ind
R15362:15362 Maps <> i var
R15377:15378 Coq.Numbers.BinNums <> xH constr
R15383:15383 Maps <> j var
R15393:15394 Coq.Numbers.BinNums <> xI constr
R15402:15412 Maps <> prev_append def
R15418:15419 Coq.Numbers.BinNums <> xI constr
R15421:15421 Maps <> j var
R15432:15433 Coq.Numbers.BinNums <> xO constr
R15441:15451 Maps <> prev_append def
R15457:15458 Coq.Numbers.BinNums <> xO constr
R15460:15460 Maps <> j var
def 15486:15489 PTree prev
R15495:15502 Coq.Numbers.BinNums <> positive ind
R15507:15514 Coq.Numbers.BinNums <> positive ind
R15523:15533 Maps PTree prev_append def
R15537:15538 Coq.Numbers.BinNums <> xH constr
R15535:15535 Maps <> i var
prf 15550:15565 PTree prev_append_prev
R15598:15600 Coq.Init.Logic <> :type_scope:x_'='_x not
R15576:15579 Maps PTree prev def
R15582:15592 Maps PTree prev_append def
R15596:15596 Maps <> j var
R15594:15594 Maps <> i var
R15601:15611 Maps PTree prev_append def
R15615:15615 Maps <> i var
R15613:15613 Maps <> j var
R15648:15651 Maps PTree prev def
prf 15813:15827 PTree prev_involutive
R15850:15852 Coq.Init.Logic <> :type_scope:x_'='_x not
R15837:15840 Maps PTree prev def
R15843:15846 Maps PTree prev def
R15848:15848 Maps <> i var
R15853:15853 Maps <> i var
R15865:15880 Maps PTree prev_append_prev thm
R15884:15885 Coq.Numbers.BinNums <> xH constr
prf 15898:15912 PTree prev_append_inj
R15966:15968 Coq.Init.Logic <> :type_scope:x_'='_x not
R15965:15965 Maps <> j var
R15969:15970 Maps <> j' var
R15942:15944 Coq.Init.Logic <> :type_scope:x_'='_x not
R15927:15937 Maps PTree prev_append def
R15941:15941 Maps <> j var
R15939:15939 Maps <> i var
R15945:15955 Maps PTree prev_append def
R15959:15960 Maps <> j' var
R15957:15957 Maps <> i var
def 16113:16116 PTree xmap
R16153:16153 Maps <> B var
R16148:16148 Maps <> A var
R16136:16143 Coq.Numbers.BinNums <> positive ind
R16161:16161 Maps PTree t def
R16163:16163 Maps <> A var
R16171:16178 Coq.Numbers.BinNums <> positive ind
R16207:16207 Maps PTree t def
R16209:16209 Maps <> B var
R16226:16226 Maps <> m var
R16241:16244 Maps PTree Leaf constr
R16249:16252 Maps PTree Leaf constr
R16262:16265 Maps PTree Node constr
R16276:16279 Maps PTree Node constr
R16418:16421 Maps <> xmap def
R16428:16429 Coq.Numbers.BinNums <> xI constr
R16431:16431 Maps <> i var
R16423:16423 Maps <> f var
R16340:16343 Coq.Init.Datatypes <> None constr
R16348:16351 Coq.Init.Datatypes <> None constr
R16355:16358 Coq.Init.Datatypes <> Some constr
R16365:16368 Coq.Init.Datatypes <> Some constr
R16371:16371 Maps <> f var
R16374:16377 Maps PTree prev def
R16379:16379 Maps <> i var
R16282:16285 Maps <> xmap def
R16292:16293 Coq.Numbers.BinNums <> xO constr
R16295:16295 Maps <> i var
R16287:16287 Maps <> f var
def 16460:16462 PTree map
R16499:16499 Maps <> B var
R16494:16494 Maps <> A var
R16482:16489 Coq.Numbers.BinNums <> positive ind
R16507:16510 Maps PTree xmap def
R16516:16517 Coq.Numbers.BinNums <> xH constr
R16514:16514 Maps <> m var
R16512:16512 Maps <> f var
prf 16531:16535 PTree xgmap
R16584:16584 Maps <> B var
R16579:16579 Maps <> A var
R16567:16574 Coq.Numbers.BinNums <> positive ind
R16594:16601 Coq.Numbers.BinNums <> positive ind
R16608:16608 Maps PTree t def
R16610:16610 Maps <> A var
R16638:16640 Coq.Init.Logic <> :type_scope:x_'='_x not
R16620:16622 Maps PTree get def
R16627:16630 Maps PTree xmap def
R16636:16636 Maps <> j var
R16634:16634 Maps <> m var
R16632:16632 Maps <> f var
R16624:16624 Maps <> i var
R16641:16650 Coqlib <> option_map def
R16682:16684 Maps PTree get def
R16688:16688 Maps <> m var
R16686:16686 Maps <> i var
R16653:16653 Maps <> f var
R16656:16659 Maps PTree prev def
R16662:16672 Maps PTree prev_append def
R16676:16676 Maps <> j var
R16674:16674 Maps <> i var
prf 16775:16778 PTree gmap
R16825:16825 Maps <> B var
R16820:16820 Maps <> A var
R16808:16815 Coq.Numbers.BinNums <> positive ind
R16832:16839 Coq.Numbers.BinNums <> positive ind
R16846:16846 Maps PTree t def
R16848:16848 Maps <> A var
R16871:16873 Coq.Init.Logic <> :type_scope:x_'='_x not
R16856:16858 Maps PTree get def
R16863:16865 Maps PTree map def
R16869:16869 Maps <> m var
R16867:16867 Maps <> f var
R16860:16860 Maps <> i var
R16874:16883 Coqlib <> option_map def
R16892:16894 Maps PTree get def
R16898:16898 Maps <> m var
R16896:16896 Maps <> i var
R16886:16886 Maps <> f var
R16888:16888 Maps <> i var
R16944:16946 Maps PTree map def
R16961:16965 Maps PTree xgmap thm
R16961:16965 Maps PTree xgmap thm
R16991:17005 Maps PTree prev_involutive thm
R16991:17005 Maps PTree prev_involutive thm
def 17030:17033 PTree map1
R17056:17056 Maps <> B var
R17051:17051 Maps <> A var
R17063:17063 Maps PTree t def
R17065:17065 Maps <> A var
R17081:17081 Maps PTree t def
R17083:17083 Maps <> B var
R17098:17098 Maps <> m var
R17111:17114 Maps PTree Leaf constr
R17119:17122 Maps PTree Leaf constr
R17130:17133 Maps PTree Node constr
R17144:17147 Maps PTree Node constr
R17178:17181 Maps <> map1 def
R17183:17183 Maps <> f var
R17161:17170 Coqlib <> option_map def
R17172:17172 Maps <> f var
R17150:17153 Maps <> map1 def
R17155:17155 Maps <> f var
prf 17208:17212 PTree gmap1
R17247:17247 Maps <> B var
R17242:17242 Maps <> A var
R17254:17256 Maps PTree elt def
R17263:17263 Maps PTree t def
R17265:17265 Maps <> A var
R17289:17291 Coq.Init.Logic <> :type_scope:x_'='_x not
R17273:17275 Maps PTree get def
R17280:17283 Maps PTree map1 def
R17287:17287 Maps <> m var
R17285:17285 Maps <> f var
R17277:17277 Maps <> i var
R17292:17301 Coqlib <> option_map def
R17306:17308 Maps PTree get def
R17312:17312 Maps <> m var
R17310:17310 Maps <> i var
R17303:17303 Maps <> f var
def 17396:17400 PTree Node'
R17416:17416 Maps PTree t def
R17418:17418 Maps <> A var
R17425:17430 Coq.Init.Datatypes <> option ind
R17432:17432 Maps <> A var
R17439:17439 Maps PTree t def
R17441:17441 Maps <> A var
R17445:17445 Maps PTree t def
R17447:17447 Maps <> A var
R17468:17468 Maps <> r var
R17465:17465 Maps <> x var
R17462:17462 Maps <> l var
R17481:17484 Maps PTree Leaf constr
R17487:17490 Coq.Init.Datatypes <> None constr
R17493:17496 Maps PTree Leaf constr
R17501:17504 Maps PTree Leaf constr
R17523:17526 Maps PTree Node constr
R17532:17532 Maps <> r var
R17530:17530 Maps <> x var
R17528:17528 Maps <> l var
prf 17552:17557 PTree gnode'
R17587:17587 Maps PTree t def
R17589:17589 Maps <> A var
R17596:17601 Coq.Init.Datatypes <> option ind
R17603:17603 Maps <> A var
R17610:17617 Coq.Numbers.BinNums <> positive ind
R17644:17646 Coq.Init.Logic <> :type_scope:x_'='_x not
R17625:17627 Maps PTree get def
R17632:17636 Maps PTree Node' def
R17642:17642 Maps <> r var
R17640:17640 Maps <> x var
R17638:17638 Maps <> l var
R17629:17629 Maps <> i var
R17647:17649 Maps PTree get def
R17654:17657 Maps PTree Node constr
R17663:17663 Maps <> r var
R17661:17661 Maps <> x var
R17659:17659 Maps <> l var
R17651:17651 Maps <> i var
R17695:17699 Maps PTree Node' def
R17786:17790 Maps PTree gleaf thm
R17786:17790 Maps PTree gleaf thm
R17786:17790 Maps PTree gleaf thm
def 17818:17824 PTree filter1
R17848:17851 Coq.Init.Datatypes <> bool ind
R17843:17843 Maps <> A var
R17858:17858 Maps PTree t def
R17860:17860 Maps <> A var
R17876:17876 Maps PTree t def
R17878:17878 Maps <> A var
R17893:17893 Maps <> m var
R17906:17909 Maps PTree Leaf constr
R17914:17917 Maps PTree Leaf constr
R17925:17928 Maps PTree Node constr
R17970:17973 Coq.Init.Datatypes <> None constr
R17978:17981 Coq.Init.Datatypes <> None constr
R17985:17988 Coq.Init.Datatypes <> Some constr
R17998:18001 Maps <> pred var
R18017:18020 Coq.Init.Datatypes <> None constr
R18037:18041 Maps PTree Node' def
R18064:18070 Maps <> filter1 def
R18072:18075 Maps <> pred var
R18060:18061 Maps <> o' var
R18044:18050 Maps <> filter1 def
R18052:18055 Maps <> pred var
prf 18100:18107 PTree gfilter1
R18143:18146 Coq.Init.Datatypes <> bool ind
R18138:18138 Maps <> A var
R18153:18155 Maps PTree elt def
R18162:18162 Maps PTree t def
R18164:18164 Maps <> A var
R18194:18200 Coq.Init.Logic <> :type_scope:x_'='_x not
R18172:18174 Maps PTree get def
R18179:18185 Maps PTree filter1 def
R18192:18192 Maps <> m var
R18187:18190 Maps <> pred var
R18176:18176 Maps <> i var
R18207:18209 Maps PTree get def
R18213:18213 Maps <> m var
R18211:18211 Maps <> i var
R18220:18223 Coq.Init.Datatypes <> None constr
R18228:18231 Coq.Init.Datatypes <> None constr
R18235:18238 Coq.Init.Datatypes <> Some constr
R18248:18251 Maps <> pred var
R18272:18275 Coq.Init.Datatypes <> None constr
R18260:18263 Coq.Init.Datatypes <> Some constr
R18364:18368 Maps PTree gleaf thm
R18364:18368 Maps PTree gleaf thm
R18389:18394 Maps PTree gnode' thm
R18389:18394 Maps PTree gnode' thm
sec 18459:18465 PTree COMBINE
var 18481:18481 PTree.COMBINE A
var 18483:18483 PTree.COMBINE B
var 18485:18485 PTree.COMBINE C
var 18505:18505 PTree.COMBINE f
R18532:18537 Coq.Init.Datatypes <> option ind
R18539:18539 Maps <> PTree.COMBINE.C var
R18520:18525 Coq.Init.Datatypes <> option ind
R18527:18527 Maps <> PTree.COMBINE.B var
R18508:18513 Coq.Init.Datatypes <> option ind
R18515:18515 Maps <> PTree.COMBINE.A var
var 18555:18565 PTree.COMBINE f_none_none
R18579:18581 Coq.Init.Logic <> :type_scope:x_'='_x not
R18568:18568 Maps <> PTree.COMBINE.f var
R18575:18578 Coq.Init.Datatypes <> None constr
R18570:18573 Coq.Init.Datatypes <> None constr
R18582:18585 Coq.Init.Datatypes <> None constr
def 18600:18609 PTree xcombine_l
R18616:18616 Maps PTree t def
R18618:18618 Maps <> PTree.COMBINE.A var
R18634:18634 Maps PTree t def
R18636:18636 Maps <> PTree.COMBINE.C var
R18653:18653 Maps <> m var
R18668:18671 Maps PTree Leaf constr
R18676:18679 Maps PTree Leaf constr
R18689:18692 Maps PTree Node constr
R18703:18707 Maps PTree Node' def
R18736:18745 Maps <> xcombine_l def
R18725:18725 Maps <> PTree.COMBINE.f var
R18729:18732 Coq.Init.Datatypes <> None constr
R18710:18719 Maps <> xcombine_l def
prf 18770:18780 PTree xgcombine_l
R18805:18805 Maps PTree t def
R18807:18807 Maps <> PTree.COMBINE.A var
R18815:18822 Coq.Numbers.BinNums <> positive ind
R18856:18858 Coq.Init.Logic <> :type_scope:x_'='_x not
R18836:18838 Maps PTree get def
R18843:18852 Maps PTree xcombine_l def
R18854:18854 Maps <> m var
R18840:18840 Maps <> i var
R18859:18859 Maps <> PTree.COMBINE.f var
R18871:18874 Coq.Init.Datatypes <> None constr
R18862:18864 Maps PTree get def
R18868:18868 Maps <> m var
R18866:18866 Maps <> i var
R18943:18947 Maps PTree gleaf thm
R18943:18947 Maps PTree gleaf thm
R18943:18947 Maps PTree gleaf thm
R18943:18947 Maps PTree gleaf thm
R18970:18975 Maps PTree gnode' thm
R18970:18975 Maps PTree gnode' thm
def 19024:19033 PTree xcombine_r
R19040:19040 Maps PTree t def
R19042:19042 Maps <> PTree.COMBINE.B var
R19058:19058 Maps PTree t def
R19060:19060 Maps <> PTree.COMBINE.C var
R19077:19077 Maps <> m var
R19092:19095 Maps PTree Leaf constr
R19100:19103 Maps PTree Leaf constr
R19113:19116 Maps PTree Node constr
R19127:19131 Maps PTree Node' def
R19160:19169 Maps <> xcombine_r def
R19149:19149 Maps <> PTree.COMBINE.f var
R19151:19154 Coq.Init.Datatypes <> None constr
R19134:19143 Maps <> xcombine_r def
prf 19194:19204 PTree xgcombine_r
R19229:19229 Maps PTree t def
R19231:19231 Maps <> PTree.COMBINE.B var
R19239:19246 Coq.Numbers.BinNums <> positive ind
R19280:19282 Coq.Init.Logic <> :type_scope:x_'='_x not
R19260:19262 Maps PTree get def
R19267:19276 Maps PTree xcombine_r def
R19278:19278 Maps <> m var
R19264:19264 Maps <> i var
R19283:19283 Maps <> PTree.COMBINE.f var
R19291:19293 Maps PTree get def
R19297:19297 Maps <> m var
R19295:19295 Maps <> i var
R19285:19288 Coq.Init.Datatypes <> None constr
R19367:19371 Maps PTree gleaf thm
R19367:19371 Maps PTree gleaf thm
R19367:19371 Maps PTree gleaf thm
R19367:19371 Maps PTree gleaf thm
R19394:19399 Maps PTree gnode' thm
R19394:19399 Maps PTree gnode' thm
def 19448:19454 PTree combine
R19461:19461 Maps PTree t def
R19463:19463 Maps <> PTree.COMBINE.A var
R19471:19471 Maps PTree t def
R19473:19473 Maps <> PTree.COMBINE.B var
R19490:19490 Maps PTree t def
R19492:19492 Maps <> PTree.COMBINE.C var
R19507:19508 Maps <> m1 var
R19521:19524 Maps PTree Leaf constr
R19529:19538 Maps PTree xcombine_r def
R19540:19541 Maps <> m2 var
R19549:19552 Maps PTree Node constr
R19580:19581 Maps <> m2 var
R19598:19601 Maps PTree Leaf constr
R19606:19615 Maps PTree xcombine_l def
R19617:19618 Maps <> m1 var
R19630:19633 Maps PTree Node constr
R19647:19651 Maps PTree Node' def
R19680:19686 Maps <> combine def
R19670:19670 Maps <> PTree.COMBINE.f var
R19654:19660 Maps <> combine def
prf 19727:19734 PTree gcombine
R19755:19755 Maps PTree t def
R19757:19757 Maps <> PTree.COMBINE.A var
R19765:19765 Maps PTree t def
R19767:19767 Maps <> PTree.COMBINE.B var
R19774:19781 Coq.Numbers.BinNums <> positive ind
R19812:19814 Coq.Init.Logic <> :type_scope:x_'='_x not
R19791:19793 Maps PTree get def
R19798:19804 Maps PTree combine def
R19809:19810 Maps <> m2 var
R19806:19807 Maps <> m1 var
R19795:19795 Maps <> i var
R19815:19815 Maps <> PTree.COMBINE.f var
R19829:19831 Maps PTree get def
R19835:19836 Maps <> m2 var
R19833:19833 Maps <> i var
R19818:19820 Maps PTree get def
R19824:19825 Maps <> m1 var
R19822:19822 Maps <> i var
R19894:19898 Maps PTree gleaf thm
R19894:19898 Maps PTree gleaf thm
R19907:19917 Maps PTree xgcombine_r thm
R19907:19917 Maps PTree xgcombine_r thm
R19956:19960 Maps PTree gleaf thm
R19956:19960 Maps PTree gleaf thm
R19974:19984 Maps PTree xgcombine_l thm
R19974:19984 Maps PTree xgcombine_l thm
R20013:20018 Maps PTree gnode' thm
R20013:20018 Maps PTree gnode' thm
R20013:20018 Maps PTree gnode' thm
R20060:20066 Maps PTree.COMBINE <> sec
prf 20078:20088 PTree xcombine_lr
R20146:20151 Coq.Init.Datatypes <> option ind
R20153:20153 Maps <> B var
R20134:20139 Coq.Init.Datatypes <> option ind
R20141:20141 Maps <> A var
R20122:20127 Coq.Init.Datatypes <> option ind
R20129:20129 Maps <> A var
R20161:20161 Maps PTree t def
R20163:20163 Maps <> A var
R20233:20235 Coq.Init.Logic <> :type_scope:x_'='_x not
R20219:20228 Maps PTree xcombine_l def
R20232:20232 Maps <> m var
R20230:20230 Maps <> f var
R20236:20245 Maps PTree xcombine_r def
R20249:20249 Maps <> m var
R20247:20247 Maps <> g var
R20186:20191 Coq.Init.Datatypes <> option ind
R20193:20193 Maps <> A var
R20202:20204 Coq.Init.Logic <> :type_scope:x_'='_x not
R20197:20197 Maps <> f var
R20201:20201 Maps <> j var
R20199:20199 Maps <> i var
R20205:20205 Maps <> g var
R20209:20209 Maps <> i var
R20207:20207 Maps <> j var
prf 20398:20411 PTree combine_commut
R20467:20472 Coq.Init.Datatypes <> option ind
R20474:20474 Maps <> B var
R20455:20460 Coq.Init.Datatypes <> option ind
R20462:20462 Maps <> A var
R20443:20448 Coq.Init.Datatypes <> option ind
R20450:20450 Maps <> A var
R20544:20544 Maps PTree t def
R20546:20546 Maps <> A var
R20569:20571 Coq.Init.Logic <> :type_scope:x_'='_x not
R20554:20560 Maps PTree combine def
R20567:20568 Maps <> m2 var
R20564:20565 Maps <> m1 var
R20562:20562 Maps <> f var
R20572:20578 Maps PTree combine def
R20585:20586 Maps <> m1 var
R20582:20583 Maps <> m2 var
R20580:20580 Maps <> g var
R20496:20501 Coq.Init.Datatypes <> option ind
R20503:20503 Maps <> A var
R20512:20514 Coq.Init.Logic <> :type_scope:x_'='_x not
R20507:20507 Maps <> f var
R20511:20511 Maps <> j var
R20509:20509 Maps <> i var
R20515:20515 Maps <> g var
R20519:20519 Maps <> i var
R20517:20517 Maps <> j var
R20652:20657 Coq.Init.Datatypes <> option ind
R20668:20670 Coq.Init.Logic <> :type_scope:x_'='_x not
R20667:20667 Maps <> j var
R20665:20665 Maps <> i var
R20675:20675 Maps <> i var
R20673:20673 Maps <> j var
R20652:20657 Coq.Init.Datatypes <> option ind
R20668:20670 Coq.Init.Logic <> :type_scope:x_'='_x not
R20667:20667 Maps <> j var
R20665:20665 Maps <> i var
R20675:20675 Maps <> i var
R20673:20673 Maps <> j var
R20790:20800 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20790:20800 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
R20830:20840 Maps PTree xcombine_lr thm
def 20935:20943 PTree xelements
R20961:20961 Maps PTree t def
R20963:20963 Maps <> A var
R20971:20978 Coq.Numbers.BinNums <> positive ind
R21009:21012 Coq.Init.Datatypes <> list ind
R21023:21025 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21015:21022 Coq.Numbers.BinNums <> positive ind
R21026:21026 Maps <> A var
R21066:21069 Coq.Init.Datatypes <> list ind
R21080:21082 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R21072:21079 Coq.Numbers.BinNums <> positive ind
R21083:21083 Maps <> A var
R21101:21101 Maps <> m var
R21116:21119 Maps PTree Leaf constr
R21124:21124 Maps <> k var
R21134:21137 Maps PTree Node constr
R21141:21144 Coq.Init.Datatypes <> None constr
R21161:21169 Maps <> xelements def
R21181:21189 Maps <> xelements def
R21200:21200 Maps <> k var
R21194:21195 Coq.Numbers.BinNums <> xI constr
R21197:21197 Maps <> i var
R21174:21175 Coq.Numbers.BinNums <> xO constr
R21177:21177 Maps <> i var
R21211:21214 Maps PTree Node constr
R21219:21222 Coq.Init.Datatypes <> Some constr
R21242:21250 Maps <> xelements def
R21285:21288 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R21274:21274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21281:21282 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21284:21284 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21275:21278 Maps PTree prev def
R21280:21280 Maps <> i var
R21289:21297 Maps <> xelements def
R21308:21308 Maps <> k var
R21302:21303 Coq.Numbers.BinNums <> xI constr
R21305:21305 Maps <> i var
R21255:21256 Coq.Numbers.BinNums <> xO constr
R21258:21258 Maps <> i var
def 21337:21344 PTree elements
R21361:21361 Maps PTree t def
R21363:21363 Maps <> A var
R21369:21377 Maps PTree xelements def
R21384:21386 Coq.Init.Datatypes <> nil constr
R21381:21382 Coq.Numbers.BinNums <> xH constr
R21379:21379 Maps <> m var
prf 21400:21413 PTree xelements_incl
R21443:21443 Maps PTree t def
R21445:21445 Maps <> A var
R21453:21460 Coq.Numbers.BinNums <> positive ind
R21484:21485 Coq.Lists.List <> In def
R21490:21498 Maps PTree xelements def
R21504:21504 Maps <> k var
R21502:21502 Maps <> i var
R21500:21500 Maps <> m var
R21487:21487 Maps <> x var
R21474:21475 Coq.Lists.List <> In def
R21479:21479 Maps <> k var
R21477:21477 Maps <> x var
prf 21653:21669 PTree xelements_correct
R21699:21699 Maps PTree t def
R21701:21701 Maps <> A var
R21711:21718 Coq.Numbers.BinNums <> positive ind
R21725:21725 Maps <> A var
R21757:21758 Coq.Lists.List <> In def
R21789:21797 Maps PTree xelements def
R21803:21803 Maps <> k var
R21801:21801 Maps <> j var
R21799:21799 Maps <> m var
R21760:21760 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21783:21784 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21786:21786 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R21761:21764 Maps PTree prev def
R21767:21777 Maps PTree prev_append def
R21781:21781 Maps <> j var
R21779:21779 Maps <> i var
R21785:21785 Maps <> v var
R21744:21746 Coq.Init.Logic <> :type_scope:x_'='_x not
R21737:21739 Maps PTree get def
R21743:21743 Maps <> m var
R21741:21741 Maps <> i var
R21747:21750 Coq.Init.Datatypes <> Some constr
R21752:21752 Maps <> v var
R21861:21865 Maps PTree gleaf thm
R21861:21865 Maps PTree gleaf thm
R21954:21967 Maps PTree xelements_incl thm
R21954:21967 Maps PTree xelements_incl thm
R22018:22031 Maps PTree xelements_incl thm
R22018:22031 Maps PTree xelements_incl thm
R22067:22080 Maps PTree xelements_incl thm
R22067:22080 Maps PTree xelements_incl thm
prf 22140:22155 PTree elements_correct
R22183:22183 Maps PTree t def
R22185:22185 Maps <> A var
R22192:22199 Coq.Numbers.BinNums <> positive ind
R22206:22206 Maps <> A var
R22234:22235 Coq.Lists.List <> In def
R22245:22252 Maps PTree elements def
R22254:22254 Maps <> m var
R22237:22237 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22239:22240 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22242:22242 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22238:22238 Maps <> i var
R22241:22241 Maps <> v var
R22221:22223 Coq.Init.Logic <> :type_scope:x_'='_x not
R22214:22216 Maps PTree get def
R22220:22220 Maps <> m var
R22218:22218 Maps <> i var
R22224:22227 Coq.Init.Datatypes <> Some constr
R22229:22229 Maps <> v var
R22306:22322 Maps PTree xelements_correct thm
R22331:22333 Coq.Init.Datatypes <> nil constr
R22328:22329 Coq.Numbers.BinNums <> xH constr
R22306:22322 Maps PTree xelements_correct thm
R22331:22333 Coq.Init.Datatypes <> nil constr
R22328:22329 Coq.Numbers.BinNums <> xH constr
R22347:22362 Maps PTree prev_append_prev thm
R22347:22362 Maps PTree prev_append_prev thm
R22371:22372 Coq.Init.Datatypes <> id def
R22371:22372 Coq.Init.Datatypes <> id def
prf 22391:22402 PTree in_xelements
R22430:22430 Maps PTree t def
R22432:22432 Maps <> A var
R22441:22448 Coq.Numbers.BinNums <> positive ind
R22455:22455 Maps <> A var
R22500:22500 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22557:22561 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R22501:22507 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22509:22510 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R22537:22540 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R22512:22514 Coq.Init.Logic <> :type_scope:x_'='_x not
R22511:22511 Maps <> k var
R22515:22518 Maps PTree prev def
R22521:22531 Maps PTree prev_append def
R22535:22535 Maps <> i var
R22533:22533 Maps <> j var
R22548:22550 Coq.Init.Logic <> :type_scope:x_'='_x not
R22541:22543 Maps PTree get def
R22547:22547 Maps <> m var
R22545:22545 Maps <> j var
R22551:22554 Coq.Init.Datatypes <> Some constr
R22556:22556 Maps <> v var
R22562:22563 Coq.Lists.List <> In def
R22572:22572 Maps <> l var
R22565:22565 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22567:22568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22570:22570 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22566:22566 Maps <> k var
R22569:22569 Maps <> v var
R22465:22466 Coq.Lists.List <> In def
R22476:22484 Maps PTree xelements def
R22490:22490 Maps <> l var
R22488:22488 Maps <> i var
R22486:22486 Maps <> m var
R22468:22468 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22470:22471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22473:22473 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R22469:22469 Maps <> k var
R22472:22472 Maps <> v var
R22778:22779 Coq.Numbers.BinNums <> xO constr
R22778:22779 Coq.Numbers.BinNums <> xO constr
R22843:22844 Coq.Numbers.BinNums <> xH constr
R22843:22844 Coq.Numbers.BinNums <> xH constr
R22968:22969 Coq.Numbers.BinNums <> xI constr
R22968:22969 Coq.Numbers.BinNums <> xI constr
R23120:23121 Coq.Numbers.BinNums <> xO constr
R23120:23121 Coq.Numbers.BinNums <> xO constr
R23247:23248 Coq.Numbers.BinNums <> xI constr
R23247:23248 Coq.Numbers.BinNums <> xI constr
prf 23327:23344 PTree xelements_complete
R23374:23374 Maps PTree t def
R23376:23376 Maps <> A var
R23386:23393 Coq.Numbers.BinNums <> positive ind
R23400:23400 Maps <> A var
R23473:23476 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R23464:23466 Coq.Init.Logic <> :type_scope:x_'='_x not
R23457:23459 Maps PTree get def
R23463:23463 Maps <> m var
R23461:23461 Maps <> i var
R23467:23470 Coq.Init.Datatypes <> Some constr
R23472:23472 Maps <> v var
R23477:23478 Coq.Lists.List <> In def
R23501:23501 Maps <> k var
R23480:23480 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23496:23497 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23499:23499 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23481:23491 Maps PTree prev_append def
R23495:23495 Maps <> i var
R23493:23493 Maps <> j var
R23498:23498 Maps <> v var
R23412:23413 Coq.Lists.List <> In def
R23437:23445 Maps PTree xelements def
R23451:23451 Maps <> k var
R23449:23449 Maps <> j var
R23447:23447 Maps <> m var
R23415:23415 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23431:23432 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23434:23434 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23416:23426 Maps PTree prev_append def
R23430:23430 Maps <> i var
R23428:23428 Maps <> j var
R23433:23433 Maps <> v var
R23555:23566 Maps PTree in_xelements thm
R23555:23566 Maps PTree in_xelements thm
R23623:23638 Maps PTree prev_append_prev thm
R23623:23638 Maps PTree prev_append_prev thm
R23653:23667 Maps PTree prev_append_inj thm
R23653:23667 Maps PTree prev_append_inj thm
prf 23739:23755 PTree elements_complete
R23783:23783 Maps PTree t def
R23785:23785 Maps <> A var
R23792:23799 Coq.Numbers.BinNums <> positive ind
R23806:23806 Maps <> A var
R23847:23849 Coq.Init.Logic <> :type_scope:x_'='_x not
R23840:23842 Maps PTree get def
R23846:23846 Maps <> m var
R23844:23844 Maps <> i var
R23850:23853 Coq.Init.Datatypes <> Some constr
R23855:23855 Maps <> v var
R23814:23815 Coq.Lists.List <> In def
R23825:23832 Maps PTree elements def
R23834:23834 Maps <> m var
R23817:23817 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23819:23820 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23822:23822 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R23818:23818 Maps <> i var
R23821:23821 Maps <> v var
R23878:23885 Maps PTree elements def
R23925:23935 Maps PTree prev_append def
R23925:23935 Maps PTree prev_append def
R23962:23979 Maps PTree xelements_complete thm
R23962:23979 Maps PTree xelements_complete thm
def 24035:24039 PTree xkeys
R24055:24055 Maps PTree t def
R24057:24057 Maps <> A var
R24064:24071 Coq.Numbers.BinNums <> positive ind
R24078:24081 Coq.Init.Datatypes <> list ind
R24092:24094 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R24084:24091 Coq.Numbers.BinNums <> positive ind
R24095:24095 Maps <> A var
R24106:24113 Coq.Lists.List <> map def
R24134:24142 Maps PTree xelements def
R24148:24148 Maps <> l var
R24146:24146 Maps <> i var
R24144:24144 Maps <> m var
R24117:24119 Coq.Init.Datatypes <> fst def
R24130:24130 Maps <> A var
R24121:24128 Coq.Numbers.BinNums <> positive ind
prf 24161:24168 PTree in_xkeys
R24196:24196 Maps PTree t def
R24198:24198 Maps <> A var
R24207:24214 Coq.Numbers.BinNums <> positive ind
R24250:24250 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24287:24291 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R24251:24257 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24259:24260 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R24262:24264 Coq.Init.Logic <> :type_scope:x_'='_x not
R24261:24261 Maps <> k var
R24265:24268 Maps PTree prev def
R24271:24281 Maps PTree prev_append def
R24285:24285 Maps <> i var
R24283:24283 Maps <> j var
R24292:24293 Coq.Lists.List <> In def
R24298:24305 Coq.Lists.List <> map def
R24311:24311 Maps <> l var
R24307:24309 Coq.Init.Datatypes <> fst def
R24295:24295 Maps <> k var
R24224:24225 Coq.Lists.List <> In def
R24230:24234 Maps PTree xkeys def
R24240:24240 Maps <> l var
R24238:24238 Maps <> i var
R24236:24236 Maps <> m var
R24227:24227 Maps <> k var
R24335:24339 Maps PTree xkeys def
R24361:24375 Coqlib <> list_in_map_inv thm
R24361:24375 Coqlib <> list_in_map_inv thm
R24436:24446 Maps PTree prev_append def
R24436:24446 Maps PTree prev_append def
R24465:24476 Maps PTree in_xelements thm
R24465:24476 Maps PTree in_xelements thm
R24605:24610 Coq.Lists.List <> in_map thm
R24605:24610 Coq.Lists.List <> in_map thm
prf 24638:24659 PTree xelements_keys_norepet
R24687:24687 Maps PTree t def
R24689:24689 Maps <> A var
R24696:24703 Coq.Numbers.BinNums <> positive ind
R24837:24848 Coqlib <> list_norepet ind
R24851:24855 Maps PTree xkeys def
R24861:24861 Maps <> l var
R24859:24859 Maps <> i var
R24857:24857 Maps <> m var
R24800:24811 Coqlib <> list_norepet ind
R24814:24821 Coq.Lists.List <> map def
R24827:24827 Maps <> l var
R24823:24825 Coq.Init.Datatypes <> fst def
R24746:24746 Coq.Init.Logic <> :type_scope:'~'_x not
R24747:24748 Coq.Lists.List <> In def
R24776:24783 Coq.Lists.List <> map def
R24789:24789 Maps <> l var
R24785:24787 Coq.Init.Datatypes <> fst def
R24751:24754 Maps PTree prev def
R24757:24767 Maps PTree prev_append def
R24771:24771 Maps <> i var
R24769:24769 Maps <> k var
R24733:24735 Coq.Init.Logic <> :type_scope:x_'='_x not
R24726:24728 Maps PTree get def
R24732:24732 Maps <> m var
R24730:24730 Maps <> k var
R24736:24739 Coq.Init.Datatypes <> Some constr
R24741:24741 Maps <> v var
R24885:24889 Maps PTree xkeys def
R25076:25091 Maps PTree prev_append_prev thm
R25076:25091 Maps PTree prev_append_prev thm
R25119:25133 Maps PTree prev_append_inj thm
R25119:25133 Maps PTree prev_append_inj thm
R25166:25173 Maps PTree in_xkeys thm
R25166:25173 Maps PTree in_xkeys thm
R25227:25242 Maps PTree prev_append_prev thm
R25227:25242 Maps PTree prev_append_prev thm
R25227:25242 Maps PTree prev_append_prev thm
R25227:25242 Maps PTree prev_append_prev thm
R25270:25284 Maps PTree prev_append_inj thm
R25270:25284 Maps PTree prev_append_inj thm
R25320:25321 Coq.Numbers.BinNums <> xO constr
R25320:25321 Coq.Numbers.BinNums <> xO constr
R25391:25398 Maps PTree in_xkeys thm
R25391:25398 Maps PTree in_xkeys thm
R25452:25467 Maps PTree prev_append_prev thm
R25452:25467 Maps PTree prev_append_prev thm
R25452:25467 Maps PTree prev_append_prev thm
R25495:25509 Maps PTree prev_append_inj thm
R25495:25509 Maps PTree prev_append_inj thm
R25544:25545 Coq.Numbers.BinNums <> xH constr
R25544:25545 Coq.Numbers.BinNums <> xH constr
R25611:25612 Coq.Numbers.BinNums <> xI constr
R25611:25612 Coq.Numbers.BinNums <> xI constr
R25666:25673 Maps PTree in_xkeys thm
R25666:25673 Maps PTree in_xkeys thm
R25727:25742 Maps PTree prev_append_prev thm
R25727:25742 Maps PTree prev_append_prev thm
R25727:25742 Maps PTree prev_append_prev thm
R25727:25742 Maps PTree prev_append_prev thm
R25770:25784 Maps PTree prev_append_inj thm
R25770:25784 Maps PTree prev_append_inj thm
R25821:25822 Coq.Numbers.BinNums <> xO constr
R25821:25822 Coq.Numbers.BinNums <> xO constr
R25886:25887 Coq.Numbers.BinNums <> xI constr
R25886:25887 Coq.Numbers.BinNums <> xI constr
prf 25912:25932 PTree elements_keys_norepet
R25960:25960 Maps PTree t def
R25962:25962 Maps <> A var
R25971:25982 Coqlib <> list_norepet ind
R25985:25992 Coq.Lists.List <> map def
R26008:26015 Maps PTree elements def
R26017:26017 Maps <> m var
R25996:25998 Coq.Init.Datatypes <> fst def
R26004:26004 Maps <> A var
R26000:26002 Maps PTree elt def
R26051:26062 Coqlib <> list_norepet ind
R26065:26069 Maps PTree xkeys def
R26075:26077 Coq.Init.Datatypes <> nil constr
R26051:26062 Coqlib <> list_norepet ind
R26065:26069 Maps PTree xkeys def
R26075:26077 Coq.Init.Datatypes <> nil constr
R26088:26109 Maps PTree xelements_keys_norepet thm
R26088:26109 Maps PTree xelements_keys_norepet thm
prf 26176:26190 PTree xelements_empty
R26218:26218 Maps PTree t def
R26220:26220 Maps <> A var
R26273:26275 Coq.Init.Logic <> :type_scope:x_'='_x not
R26258:26266 Maps PTree xelements def
R26272:26272 Maps <> l var
R26270:26270 Maps <> i var
R26268:26268 Maps <> m var
R26276:26276 Maps <> l var
R26246:26248 Coq.Init.Logic <> :type_scope:x_'='_x not
R26239:26241 Maps PTree get def
R26245:26245 Maps <> m var
R26243:26243 Maps <> i var
R26249:26252 Coq.Init.Datatypes <> None constr
R26361:26362 Coq.Numbers.BinNums <> xH constr
R26361:26362 Coq.Numbers.BinNums <> xH constr
R26439:26440 Coq.Numbers.BinNums <> xI constr
R26439:26440 Coq.Numbers.BinNums <> xI constr
R26470:26471 Coq.Numbers.BinNums <> xO constr
R26470:26471 Coq.Numbers.BinNums <> xO constr
prf 26497:26520 PTree elements_canonical_order
R26555:26555 Maps <> B var
R26550:26550 Maps <> A var
R26570:26570 Maps PTree t def
R26572:26572 Maps <> A var
R26579:26579 Maps PTree t def
R26581:26581 Maps <> B var
R26743:26754 Coqlib <> list_forall2 ind
R26842:26849 Maps PTree elements def
R26851:26851 Maps <> n var
R26829:26836 Maps PTree elements def
R26838:26838 Maps <> m var
R26795:26798 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26785:26787 Coq.Init.Logic <> :type_scope:x_'='_x not
R26778:26780 Coq.Init.Datatypes <> fst def
R26782:26784 Maps <> i_x var
R26788:26790 Coq.Init.Datatypes <> fst def
R26792:26794 Maps <> i_y var
R26799:26799 Maps <> R var
R26812:26814 Coq.Init.Datatypes <> snd def
R26816:26818 Maps <> i_y var
R26802:26804 Coq.Init.Datatypes <> snd def
R26806:26808 Maps <> i_x var
R26699:26705 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26707:26708 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26725:26728 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26716:26718 Coq.Init.Logic <> :type_scope:x_'='_x not
R26709:26711 Maps PTree get def
R26715:26715 Maps <> m var
R26713:26713 Maps <> i var
R26719:26722 Coq.Init.Datatypes <> Some constr
R26724:26724 Maps <> x var
R26729:26729 Maps <> R var
R26733:26733 Maps <> y var
R26731:26731 Maps <> x var
R26686:26688 Coq.Init.Logic <> :type_scope:x_'='_x not
R26679:26681 Maps PTree get def
R26685:26685 Maps <> n var
R26683:26683 Maps <> i var
R26689:26692 Coq.Init.Datatypes <> Some constr
R26694:26694 Maps <> y var
R26622:26628 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26630:26631 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26648:26651 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26639:26641 Coq.Init.Logic <> :type_scope:x_'='_x not
R26632:26634 Maps PTree get def
R26638:26638 Maps <> n var
R26636:26636 Maps <> i var
R26642:26645 Coq.Init.Datatypes <> Some constr
R26647:26647 Maps <> y var
R26652:26652 Maps <> R var
R26656:26656 Maps <> y var
R26654:26654 Maps <> x var
R26609:26611 Coq.Init.Logic <> :type_scope:x_'='_x not
R26602:26604 Maps PTree get def
R26608:26608 Maps <> m var
R26606:26606 Maps <> i var
R26612:26615 Coq.Init.Datatypes <> Some constr
R26617:26617 Maps <> x var
R27172:27183 Coqlib <> list_forall2 ind
R27277:27285 Maps PTree xelements def
R27291:27292 Maps <> l2 var
R27289:27289 Maps <> j var
R27287:27287 Maps <> n var
R27258:27266 Maps PTree xelements def
R27272:27273 Maps <> l1 var
R27270:27270 Maps <> j var
R27268:27268 Maps <> m var
R27224:27227 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27214:27216 Coq.Init.Logic <> :type_scope:x_'='_x not
R27207:27209 Coq.Init.Datatypes <> fst def
R27211:27213 Maps <> i_x var
R27217:27219 Coq.Init.Datatypes <> fst def
R27221:27223 Maps <> i_y var
R27241:27243 Coq.Init.Datatypes <> snd def
R27245:27247 Maps <> i_y var
R27231:27233 Coq.Init.Datatypes <> snd def
R27235:27237 Maps <> i_x var
R27074:27085 Coqlib <> list_forall2 ind
R27162:27163 Maps <> l2 var
R27159:27160 Maps <> l1 var
R27126:27129 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27116:27118 Coq.Init.Logic <> :type_scope:x_'='_x not
R27109:27111 Coq.Init.Datatypes <> fst def
R27113:27115 Maps <> i_x var
R27119:27121 Coq.Init.Datatypes <> fst def
R27123:27125 Maps <> i_y var
R27143:27145 Coq.Init.Datatypes <> snd def
R27147:27149 Maps <> i_y var
R27133:27135 Coq.Init.Datatypes <> snd def
R27137:27139 Maps <> i_x var
R27030:27036 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27038:27039 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27056:27059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27047:27049 Coq.Init.Logic <> :type_scope:x_'='_x not
R27040:27042 Maps PTree get def
R27046:27046 Maps <> m var
R27044:27044 Maps <> i var
R27050:27053 Coq.Init.Datatypes <> Some constr
R27055:27055 Maps <> x var
R27064:27064 Maps <> y var
R27062:27062 Maps <> x var
R27017:27019 Coq.Init.Logic <> :type_scope:x_'='_x not
R27010:27012 Maps PTree get def
R27016:27016 Maps <> n var
R27014:27014 Maps <> i var
R27020:27023 Coq.Init.Datatypes <> Some constr
R27025:27025 Maps <> y var
R26953:26959 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26961:26962 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26979:26982 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26970:26972 Coq.Init.Logic <> :type_scope:x_'='_x not
R26963:26965 Maps PTree get def
R26969:26969 Maps <> n var
R26967:26967 Maps <> i var
R26973:26976 Coq.Init.Datatypes <> Some constr
R26978:26978 Maps <> y var
R26987:26987 Maps <> y var
R26985:26985 Maps <> x var
R26940:26942 Coq.Init.Logic <> :type_scope:x_'='_x not
R26933:26935 Maps PTree get def
R26939:26939 Maps <> m var
R26937:26937 Maps <> i var
R26943:26946 Coq.Init.Datatypes <> Some constr
R26948:26948 Maps <> x var
R27172:27183 Coqlib <> list_forall2 ind
R27277:27285 Maps PTree xelements def
R27291:27292 Maps <> l2 var
R27289:27289 Maps <> j var
R27287:27287 Maps <> n var
R27258:27266 Maps PTree xelements def
R27272:27273 Maps <> l1 var
R27270:27270 Maps <> j var
R27268:27268 Maps <> m var
R27224:27227 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27214:27216 Coq.Init.Logic <> :type_scope:x_'='_x not
R27207:27209 Coq.Init.Datatypes <> fst def
R27211:27213 Maps <> i_x var
R27217:27219 Coq.Init.Datatypes <> fst def
R27221:27223 Maps <> i_y var
R27241:27243 Coq.Init.Datatypes <> snd def
R27245:27247 Maps <> i_y var
R27231:27233 Coq.Init.Datatypes <> snd def
R27235:27237 Maps <> i_x var
R27074:27085 Coqlib <> list_forall2 ind
R27162:27163 Maps <> l2 var
R27159:27160 Maps <> l1 var
R27126:27129 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27116:27118 Coq.Init.Logic <> :type_scope:x_'='_x not
R27109:27111 Coq.Init.Datatypes <> fst def
R27113:27115 Maps <> i_x var
R27119:27121 Coq.Init.Datatypes <> fst def
R27123:27125 Maps <> i_y var
R27143:27145 Coq.Init.Datatypes <> snd def
R27147:27149 Maps <> i_y var
R27133:27135 Coq.Init.Datatypes <> snd def
R27137:27139 Maps <> i_x var
R27030:27036 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27038:27039 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R27056:27059 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R27047:27049 Coq.Init.Logic <> :type_scope:x_'='_x not
R27040:27042 Maps PTree get def
R27046:27046 Maps <> m var
R27044:27044 Maps <> i var
R27050:27053 Coq.Init.Datatypes <> Some constr
R27055:27055 Maps <> x var
R27064:27064 Maps <> y var
R27062:27062 Maps <> x var
R27017:27019 Coq.Init.Logic <> :type_scope:x_'='_x not
R27010:27012 Maps PTree get def
R27016:27016 Maps <> n var
R27014:27014 Maps <> i var
R27020:27023 Coq.Init.Datatypes <> Some constr
R27025:27025 Maps <> y var
R26953:26959 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26961:26962 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R26979:26982 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R26970:26972 Coq.Init.Logic <> :type_scope:x_'='_x not
R26963:26965 Maps PTree get def
R26969:26969 Maps <> n var
R26967:26967 Maps <> i var
R26973:26976 Coq.Init.Datatypes <> Some constr
R26978:26978 Maps <> y var
R26987:26987 Maps <> y var
R26985:26985 Maps <> x var
R26940:26942 Coq.Init.Logic <> :type_scope:x_'='_x not
R26933:26935 Maps PTree get def
R26939:26939 Maps <> m var
R26937:26937 Maps <> i var
R26943:26946 Coq.Init.Datatypes <> Some constr
R26948:26948 Maps <> x var
R27345:27359 Maps PTree xelements_empty thm
R27345:27359 Maps PTree xelements_empty thm
R27391:27393 Maps PTree get def
R27391:27393 Maps PTree get def
R27463:27467 Maps PTree gleaf thm
R27463:27467 Maps PTree gleaf thm
R27531:27532 Coq.Numbers.BinNums <> xH constr
R27531:27532 Coq.Numbers.BinNums <> xH constr
R27596:27597 Coq.Numbers.BinNums <> xH constr
R27596:27597 Coq.Numbers.BinNums <> xH constr
R27699:27700 Coq.Numbers.BinNums <> xO constr
R27699:27700 Coq.Numbers.BinNums <> xO constr
R27737:27738 Coq.Numbers.BinNums <> xO constr
R27737:27738 Coq.Numbers.BinNums <> xO constr
R27821:27822 Coq.Numbers.BinNums <> xI constr
R27821:27822 Coq.Numbers.BinNums <> xI constr
R27859:27860 Coq.Numbers.BinNums <> xI constr
R27859:27860 Coq.Numbers.BinNums <> xI constr
R27917:27931 Maps PTree xelements_empty thm
R27917:27931 Maps PTree xelements_empty thm
R27917:27931 Maps PTree xelements_empty thm
R27917:27931 Maps PTree xelements_empty thm
R27962:27964 Maps PTree get def
R27962:27964 Maps PTree get def
R27997:27998 Coq.Numbers.BinNums <> xI constr
R27997:27998 Coq.Numbers.BinNums <> xI constr
R28024:28028 Maps PTree gleaf thm
R28024:28028 Maps PTree gleaf thm
R28083:28085 Maps PTree get def
R28083:28085 Maps PTree get def
R28118:28119 Coq.Numbers.BinNums <> xO constr
R28118:28119 Coq.Numbers.BinNums <> xO constr
R28145:28149 Maps PTree gleaf thm
R28145:28149 Maps PTree gleaf thm
R28215:28216 Coq.Numbers.BinNums <> xH constr
R28215:28216 Coq.Numbers.BinNums <> xH constr
R28314:28315 Coq.Numbers.BinNums <> xO constr
R28314:28315 Coq.Numbers.BinNums <> xO constr
R28352:28353 Coq.Numbers.BinNums <> xO constr
R28352:28353 Coq.Numbers.BinNums <> xO constr
R28405:28406 Coq.Numbers.BinNums <> xI constr
R28405:28406 Coq.Numbers.BinNums <> xI constr
R28443:28444 Coq.Numbers.BinNums <> xI constr
R28443:28444 Coq.Numbers.BinNums <> xI constr
prf 28531:28550 PTree elements_extensional
R28580:28580 Maps PTree t def
R28582:28582 Maps <> A var
R28637:28639 Coq.Init.Logic <> :type_scope:x_'='_x not
R28627:28634 Maps PTree elements def
R28636:28636 Maps <> m var
R28640:28647 Maps PTree elements def
R28649:28649 Maps <> n var
R28608:28610 Coq.Init.Logic <> :type_scope:x_'='_x not
R28601:28603 Maps PTree get def
R28607:28607 Maps <> m var
R28605:28605 Maps <> i var
R28611:28613 Maps PTree get def
R28617:28617 Maps <> n var
R28615:28615 Maps <> i var
R28687:28710 Maps PTree elements_canonical_order thm
R28730:28732 Coq.Init.Logic <> :type_scope:x_'='_x not
R28729:28729 Maps <> x var
R28733:28733 Maps <> y var
R28687:28710 Maps PTree elements_canonical_order thm
R28730:28732 Coq.Init.Logic <> :type_scope:x_'='_x not
R28729:28729 Maps <> x var
R28733:28733 Maps <> y var
def 28967:28971 PTree xfold
R29011:29011 Maps <> B var
R29006:29006 Maps <> A var
R28994:29001 Coq.Numbers.BinNums <> positive ind
R28989:28989 Maps <> B var
R29035:29042 Coq.Numbers.BinNums <> positive ind
R29049:29049 Maps PTree t def
R29051:29051 Maps <> A var
R29058:29058 Maps <> B var
R29074:29074 Maps <> B var
R29089:29089 Maps <> m var
R29102:29105 Maps PTree Leaf constr
R29110:29110 Maps <> v var
R29118:29121 Maps PTree Node constr
R29125:29128 Coq.Init.Datatypes <> None constr
R29153:29157 Maps <> xfold def
R29170:29170 Maps <> v var
R29162:29163 Coq.Numbers.BinNums <> xO constr
R29165:29165 Maps <> i var
R29159:29159 Maps <> f var
R29183:29187 Maps <> xfold def
R29200:29201 Maps <> v1 var
R29192:29193 Coq.Numbers.BinNums <> xI constr
R29195:29195 Maps <> i var
R29189:29189 Maps <> f var
R29209:29212 Maps PTree Node constr
R29217:29220 Coq.Init.Datatypes <> Some constr
R29248:29252 Maps <> xfold def
R29265:29265 Maps <> v var
R29257:29258 Coq.Numbers.BinNums <> xO constr
R29260:29260 Maps <> i var
R29254:29254 Maps <> f var
R29288:29288 Maps <> f var
R29294:29297 Maps PTree prev def
R29299:29299 Maps <> i var
R29290:29291 Maps <> v1 var
R29315:29319 Maps <> xfold def
R29332:29333 Maps <> v2 var
R29324:29325 Coq.Numbers.BinNums <> xI constr
R29327:29327 Maps <> i var
R29321:29321 Maps <> f var
def 29358:29361 PTree fold
R29402:29402 Maps <> B var
R29397:29397 Maps <> A var
R29385:29392 Coq.Numbers.BinNums <> positive ind
R29380:29380 Maps <> B var
R29409:29409 Maps PTree t def
R29411:29411 Maps <> A var
R29418:29418 Maps <> B var
R29428:29432 Maps PTree xfold def
R29441:29441 Maps <> v var
R29439:29439 Maps <> m var
R29436:29437 Coq.Numbers.BinNums <> xH constr
R29434:29434 Maps <> f var
prf 29453:29467 PTree xfold_xelements
R29519:29519 Maps <> B var
R29514:29514 Maps <> A var
R29502:29509 Coq.Numbers.BinNums <> positive ind
R29497:29497 Maps <> B var
R29600:29606 Coq.Init.Logic <> :type_scope:x_'='_x not
R29535:29548 Coq.Lists.List <> fold_left def
R29586:29590 Maps PTree xfold def
R29598:29598 Maps <> v var
R29596:29596 Maps <> m var
R29594:29594 Maps <> i var
R29592:29592 Maps <> f var
R29583:29583 Maps <> l var
R29562:29562 Maps <> f var
R29575:29577 Coq.Init.Datatypes <> snd def
R29579:29579 Maps <> p var
R29567:29569 Coq.Init.Datatypes <> fst def
R29571:29571 Maps <> p var
R29564:29564 Maps <> a var
R29607:29620 Coq.Lists.List <> fold_left def
R29673:29673 Maps <> v var
R29656:29664 Maps PTree xelements def
R29670:29670 Maps <> l var
R29668:29668 Maps <> i var
R29666:29666 Maps <> m var
R29634:29634 Maps <> f var
R29647:29649 Coq.Init.Datatypes <> snd def
R29651:29651 Maps <> p var
R29639:29641 Coq.Init.Datatypes <> fst def
R29643:29643 Maps <> p var
R29636:29636 Maps <> a var
prf 29864:29872 PTree fold_spec
R29924:29924 Maps <> B var
R29919:29919 Maps <> A var
R29907:29914 Coq.Numbers.BinNums <> positive ind
R29902:29902 Maps <> B var
R29931:29931 Maps <> B var
R29938:29938 Maps PTree t def
R29940:29940 Maps <> A var
R29958:29964 Coq.Init.Logic <> :type_scope:x_'='_x not
R29948:29951 Maps PTree fold def
R29957:29957 Maps <> v var
R29955:29955 Maps <> m var
R29953:29953 Maps <> f var
R29965:29978 Coq.Lists.List <> fold_left def
R30026:30026 Maps <> v var
R30014:30021 Maps PTree elements def
R30023:30023 Maps <> m var
R29992:29992 Maps <> f var
R30005:30007 Coq.Init.Datatypes <> snd def
R30009:30009 Maps <> p var
R29997:29999 Coq.Init.Datatypes <> fst def
R30001:30001 Maps <> p var
R29994:29994 Maps <> a var
R30057:30060 Maps PTree fold def
R30063:30070 Maps PTree elements def
R30084:30098 Maps PTree xfold_xelements thm
R30084:30098 Maps PTree xfold_xelements thm
def 30127:30131 PTree fold1
R30159:30159 Maps <> B var
R30154:30154 Maps <> A var
R30149:30149 Maps <> B var
R30166:30166 Maps PTree t def
R30168:30168 Maps <> A var
R30175:30175 Maps <> B var
R30191:30191 Maps <> B var
R30206:30206 Maps <> m var
R30219:30222 Maps PTree Leaf constr
R30227:30227 Maps <> v var
R30235:30238 Maps PTree Node constr
R30242:30245 Coq.Init.Datatypes <> None constr
R30270:30274 Maps <> fold1 def
R30280:30280 Maps <> v var
R30276:30276 Maps <> f var
R30293:30297 Maps <> fold1 def
R30303:30304 Maps <> v1 var
R30299:30299 Maps <> f var
R30312:30315 Maps PTree Node constr
R30320:30323 Coq.Init.Datatypes <> Some constr
R30351:30355 Maps <> fold1 def
R30361:30361 Maps <> v var
R30357:30357 Maps <> f var
R30384:30384 Maps <> f var
R30386:30387 Maps <> v1 var
R30402:30406 Maps <> fold1 def
R30412:30413 Maps <> v2 var
R30408:30408 Maps <> f var
prf 30433:30447 PTree fold1_xelements
R30487:30487 Maps <> B var
R30482:30482 Maps <> A var
R30477:30477 Maps <> B var
R30558:30564 Coq.Init.Logic <> :type_scope:x_'='_x not
R30503:30516 Coq.Lists.List <> fold_left def
R30546:30550 Maps PTree fold1 def
R30556:30556 Maps <> v var
R30554:30554 Maps <> m var
R30552:30552 Maps <> f var
R30543:30543 Maps <> l var
R30530:30530 Maps <> f var
R30535:30537 Coq.Init.Datatypes <> snd def
R30539:30539 Maps <> p var
R30532:30532 Maps <> a var
R30565:30578 Coq.Lists.List <> fold_left def
R30623:30623 Maps <> v var
R30606:30614 Maps PTree xelements def
R30620:30620 Maps <> l var
R30618:30618 Maps <> i var
R30616:30616 Maps <> m var
R30592:30592 Maps <> f var
R30597:30599 Coq.Init.Datatypes <> snd def
R30601:30601 Maps <> p var
R30594:30594 Maps <> a var
prf 30814:30823 PTree fold1_spec
R30863:30863 Maps <> B var
R30858:30858 Maps <> A var
R30853:30853 Maps <> B var
R30870:30870 Maps <> B var
R30877:30877 Maps PTree t def
R30879:30879 Maps <> A var
R30898:30904 Coq.Init.Logic <> :type_scope:x_'='_x not
R30887:30891 Maps PTree fold1 def
R30897:30897 Maps <> v var
R30895:30895 Maps <> m var
R30893:30893 Maps <> f var
R30905:30918 Coq.Lists.List <> fold_left def
R30958:30958 Maps <> v var
R30946:30953 Maps PTree elements def
R30955:30955 Maps <> m var
R30932:30932 Maps <> f var
R30937:30939 Coq.Init.Datatypes <> snd def
R30941:30941 Maps <> p var
R30934:30934 Maps <> a var
R31016:31018 Coq.Init.Datatypes <> nil constr
R31029:31031 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R31021:31028 Coq.Numbers.BinNums <> positive ind
R30988:31002 Maps PTree fold1_xelements thm
R31016:31018 Coq.Init.Datatypes <> nil constr
R31029:31031 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R31021:31028 Coq.Numbers.BinNums <> positive ind
R30988:31002 Maps PTree fold1_xelements thm
R31050:31054 Maps PTree <> mod
R31130:31132 Maps MAP <> mod
mod 31122:31125 <> PMap
def 31148:31150 PMap elt
R31155:31162 Coq.Numbers.BinNums <> positive ind
def 31178:31183 PMap elt_eq
R31188:31190 Coqlib <> peq def
def 31207:31207 PMap t
R31232:31234 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R31231:31231 Maps <> A var
R31235:31241 Maps PTree t def
R31243:31243 Maps <> A var
def 31266:31269 PMap init
R31287:31287 Maps <> A var
R31297:31297 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31299:31300 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31314:31314 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31298:31298 Maps <> x var
R31301:31311 Maps PTree empty def
R31313:31313 Maps <> A var
def 31331:31333 PMap get
R31351:31358 Coq.Numbers.BinNums <> positive ind
R31366:31366 Maps PMap t def
R31368:31368 Maps <> A var
R31384:31392 Maps PTree get def
R31397:31399 Coq.Init.Datatypes <> snd def
R31401:31401 Maps <> m var
R31394:31394 Maps <> i var
R31415:31418 Coq.Init.Datatypes <> Some constr
R31433:31436 Coq.Init.Datatypes <> None constr
R31441:31443 Coq.Init.Datatypes <> fst def
R31445:31445 Maps <> m var
def 31470:31472 PMap set
R31490:31497 Coq.Numbers.BinNums <> positive ind
R31505:31505 Maps <> A var
R31513:31513 Maps PMap t def
R31515:31515 Maps <> A var
R31525:31525 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31531:31532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31554:31554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R31526:31528 Coq.Init.Datatypes <> fst def
R31530:31530 Maps <> m var
R31533:31541 Maps PTree set def
R31548:31550 Coq.Init.Datatypes <> snd def
R31552:31552 Maps <> m var
R31545:31545 Maps <> x var
R31543:31543 Maps <> i var
prf 31568:31569 PMap gi
R31597:31604 Coq.Numbers.BinNums <> positive ind
R31611:31611 Maps <> A var
R31629:31631 Coq.Init.Logic <> :type_scope:x_'='_x not
R31615:31617 Maps PMap get def
R31622:31625 Maps PMap init def
R31627:31627 Maps <> x var
R31619:31619 Maps <> i var
R31632:31632 Maps <> x var
R31663:31666 Maps PMap init def
R31676:31678 Maps PMap get def
R31696:31707 Maps PTree gempty thm
R31696:31707 Maps PTree gempty thm
prf 31734:31736 PMap gss
R31764:31771 Coq.Numbers.BinNums <> positive ind
R31778:31778 Maps <> A var
R31785:31785 Maps PMap t def
R31787:31787 Maps <> A var
R31808:31810 Coq.Init.Logic <> :type_scope:x_'='_x not
R31791:31793 Maps PMap get def
R31798:31800 Maps PMap set def
R31806:31806 Maps <> m var
R31804:31804 Maps <> x var
R31802:31802 Maps <> i var
R31795:31795 Maps <> i var
R31811:31811 Maps <> x var
R31842:31844 Maps PMap get def
R31854:31856 Maps PMap set def
R31874:31882 Maps PTree gss thm
R31874:31882 Maps PTree gss thm
prf 31909:31911 PMap gso
R31941:31948 Coq.Numbers.BinNums <> positive ind
R31955:31955 Maps <> A var
R31962:31962 Maps PMap t def
R31964:31964 Maps <> A var
R31999:32001 Coq.Init.Logic <> :type_scope:x_'='_x not
R31982:31984 Maps PMap get def
R31989:31991 Maps PMap set def
R31997:31997 Maps <> m var
R31995:31995 Maps <> x var
R31993:31993 Maps <> j var
R31986:31986 Maps <> i var
R32002:32004 Maps PMap get def
R32008:32008 Maps <> m var
R32006:32006 Maps <> i var
R31973:31976 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R31972:31972 Maps <> i var
R31977:31977 Maps <> j var
R32039:32041 Maps PMap get def
R32051:32053 Maps PMap set def
R32071:32079 Maps PTree gso thm
R32071:32079 Maps PTree gso thm
prf 32106:32111 PMap gsspec
R32141:32148 Coq.Numbers.BinNums <> positive ind
R32155:32155 Maps <> A var
R32162:32162 Maps PMap t def
R32164:32164 Maps <> A var
R32189:32191 Coq.Init.Logic <> :type_scope:x_'='_x not
R32172:32174 Maps PMap get def
R32179:32181 Maps PMap set def
R32187:32187 Maps <> m var
R32185:32185 Maps <> x var
R32183:32183 Maps <> j var
R32176:32176 Maps <> i var
R32195:32197 Coqlib <> peq def
R32201:32201 Maps <> j var
R32199:32199 Maps <> i var
R32215:32217 Maps PMap get def
R32221:32221 Maps <> m var
R32219:32219 Maps <> i var
R32208:32208 Maps <> x var
R32255:32257 Coqlib <> peq def
R32255:32257 Coqlib <> peq def
R32287:32289 Maps PMap gss thm
R32287:32289 Maps PMap gss thm
R32309:32311 Maps PMap gso thm
R32309:32311 Maps PMap gso thm
prf 32338:32344 PMap gsident
R32374:32381 Coq.Numbers.BinNums <> positive ind
R32388:32388 Maps PMap t def
R32390:32390 Maps <> A var
R32423:32425 Coq.Init.Logic <> :type_scope:x_'='_x not
R32398:32400 Maps PMap get def
R32405:32407 Maps PMap set def
R32421:32421 Maps <> m var
R32412:32414 Maps PMap get def
R32418:32418 Maps <> m var
R32416:32416 Maps <> i var
R32409:32409 Maps <> i var
R32402:32402 Maps <> j var
R32426:32428 Maps PMap get def
R32432:32432 Maps <> m var
R32430:32430 Maps <> j var
R32466:32468 Coqlib <> peq def
R32466:32468 Coqlib <> peq def
R32500:32502 Maps PMap gss thm
R32500:32502 Maps PMap gss thm
R32524:32526 Maps PMap gso thm
R32524:32526 Maps PMap gso thm
def 32556:32558 PMap map
R32583:32583 Maps <> B var
R32578:32578 Maps <> A var
R32591:32591 Maps PMap t def
R32593:32593 Maps <> A var
R32598:32598 Maps PMap t def
R32600:32600 Maps <> B var
R32609:32609 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32619:32620 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32641:32641 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R32610:32610 Maps <> f var
R32613:32615 Coq.Init.Datatypes <> fst def
R32617:32617 Maps <> m var
R32621:32630 Maps PTree map1 def
R32635:32637 Coq.Init.Datatypes <> snd def
R32639:32639 Maps <> m var
R32632:32632 Maps <> f var
prf 32655:32658 PMap gmap
R32693:32693 Maps <> B var
R32688:32688 Maps <> A var
R32700:32707 Coq.Numbers.BinNums <> positive ind
R32714:32714 Maps PMap t def
R32716:32716 Maps <> A var
R32739:32741 Coq.Init.Logic <> :type_scope:x_'='_x not
R32724:32726 Maps PMap get def
R32731:32733 Maps PMap map def
R32737:32737 Maps <> m var
R32735:32735 Maps <> f var
R32728:32728 Maps <> i var
R32742:32742 Maps <> f var
R32744:32746 Maps PMap get def
R32750:32750 Maps <> m var
R32748:32748 Maps <> i var
R32782:32784 Maps PMap map def
R32794:32796 Maps PMap get def
R32814:32824 Maps PTree gmap1 thm
R32814:32824 Maps PTree gmap1 thm
R32838:32847 Coqlib <> option_map def
R32860:32868 Maps PTree get def
R32873:32875 Coq.Init.Datatypes <> snd def
R32860:32868 Maps PTree get def
R32873:32875 Coq.Init.Datatypes <> snd def
prf 32906:32909 PMap set2
R32937:32939 Maps PMap elt def
R32948:32948 Maps <> A var
R32955:32955 Maps PMap t def
R32957:32957 Maps <> A var
R32984:32986 Coq.Init.Logic <> :type_scope:x_'='_x not
R32965:32967 Maps PMap set def
R32974:32976 Maps PMap set def
R32982:32982 Maps <> m var
R32980:32980 Maps <> x var
R32978:32978 Maps <> i var
R32971:32971 Maps <> y var
R32969:32969 Maps <> i var
R32987:32989 Maps PMap set def
R32995:32995 Maps <> m var
R32993:32993 Maps <> y var
R32991:32991 Maps <> i var
R33026:33028 Maps PMap set def
R33051:33060 Maps PTree set2 thm
R33051:33060 Maps PTree set2 thm
R33075:33078 Maps PMap <> mod
modtype 33178:33189 <> INDEXED_TYPE
var 33203:33203 INDEXED_TYPE t
var 33223:33227 INDEXED_TYPE index
R33235:33242 Coq.Numbers.BinNums <> positive ind
R33230:33230 Maps INDEXED_TYPE t defax
var 33258:33266 INDEXED_TYPE index_inj
R33282:33282 Maps INDEXED_TYPE t defax
R33308:33310 Coq.Init.Logic <> :type_scope:x_'='_x not
R33307:33307 Maps <> x var
R33311:33311 Maps <> y var
R33293:33295 Coq.Init.Logic <> :type_scope:x_'='_x not
R33286:33290 Maps INDEXED_TYPE index defax
R33292:33292 Maps <> x var
R33296:33300 Maps INDEXED_TYPE index defax
R33302:33302 Maps <> y var
var 33325:33326 INDEXED_TYPE eq
R33342:33342 Maps INDEXED_TYPE t defax
R33346:33346 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R33352:33356 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R33363:33363 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R33348:33350 Coq.Init.Logic <> :type_scope:x_'='_x not
R33347:33347 Maps <> x var
R33351:33351 Maps <> y var
R33358:33361 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R33357:33357 Maps <> x var
R33362:33362 Maps <> y var
R33370:33381 Maps INDEXED_TYPE <> modtype
R33400:33411 Maps INDEXED_TYPE <> mod
mod 33392:33395 <> IMap
def 33429:33431 IMap elt
R33436:33438 Maps X t defax
def 33454:33459 IMap elt_eq
R33464:33467 Maps X eq defax
def 33483:33483 IMap t
R33503:33508 Maps PMap t def
def 33524:33527 IMap init
R33543:33543 Maps <> A var
R33549:33557 Maps PMap init def
R33559:33559 Maps <> x var
def 33575:33577 IMap get
R33593:33595 Maps X t defax
R33602:33602 Maps IMap t def
R33604:33604 Maps <> A var
R33610:33617 Maps PMap get def
R33631:33631 Maps <> m var
R33620:33626 Maps X index defax
R33628:33628 Maps <> i var
def 33647:33649 IMap set
R33665:33667 Maps X t defax
R33674:33674 Maps <> A var
R33681:33681 Maps IMap t def
R33683:33683 Maps <> A var
R33689:33696 Maps PMap set def
R33712:33712 Maps <> m var
R33710:33710 Maps <> v var
R33699:33705 Maps X index defax
R33707:33707 Maps <> i var
def 33728:33730 IMap map
R33753:33753 Maps <> B var
R33748:33748 Maps <> A var
R33760:33760 Maps IMap t def
R33762:33762 Maps <> A var
R33767:33767 Maps IMap t def
R33769:33769 Maps <> B var
R33774:33781 Maps PMap map def
R33785:33785 Maps <> m var
R33783:33783 Maps <> f var
prf 33797:33798 IMap gi
R33826:33826 Maps <> A var
R33833:33835 Maps X t defax
R33853:33855 Coq.Init.Logic <> :type_scope:x_'='_x not
R33839:33841 Maps IMap get def
R33846:33849 Maps IMap init def
R33851:33851 Maps <> x var
R33843:33843 Maps <> i var
R33856:33856 Maps <> x var
R33887:33889 Maps IMap get def
R33892:33895 Maps IMap init def
R33904:33910 Maps PMap gi thm
R33904:33910 Maps PMap gi thm
prf 33930:33932 IMap gss
R33960:33962 Maps X t defax
R33969:33969 Maps <> A var
R33976:33976 Maps IMap t def
R33978:33978 Maps <> A var
R33999:34001 Coq.Init.Logic <> :type_scope:x_'='_x not
R33982:33984 Maps IMap get def
R33989:33991 Maps IMap set def
R33997:33997 Maps <> m var
R33995:33995 Maps <> x var
R33993:33993 Maps <> i var
R33986:33986 Maps <> i var
R34002:34002 Maps <> x var
R34033:34035 Maps IMap get def
R34038:34040 Maps IMap set def
R34049:34056 Maps PMap gss thm
R34049:34056 Maps PMap gss thm
prf 34075:34077 IMap gso
R34107:34109 Maps X t defax
R34116:34116 Maps <> A var
R34123:34123 Maps IMap t def
R34125:34125 Maps <> A var
R34160:34162 Coq.Init.Logic <> :type_scope:x_'='_x not
R34143:34145 Maps IMap get def
R34150:34152 Maps IMap set def
R34158:34158 Maps <> m var
R34156:34156 Maps <> x var
R34154:34154 Maps <> j var
R34147:34147 Maps <> i var
R34163:34165 Maps IMap get def
R34169:34169 Maps <> m var
R34167:34167 Maps <> i var
R34134:34137 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R34133:34133 Maps <> i var
R34138:34138 Maps <> j var
R34200:34202 Maps IMap get def
R34205:34207 Maps IMap set def
R34216:34223 Maps PMap gso thm
R34216:34223 Maps PMap gso thm
R34258:34268 Maps X index_inj prfax
R34258:34268 Maps X index_inj prfax
prf 34294:34299 IMap gsspec
R34329:34331 Maps X t defax
R34338:34338 Maps <> A var
R34345:34345 Maps IMap t def
R34347:34347 Maps <> A var
R34372:34374 Coq.Init.Logic <> :type_scope:x_'='_x not
R34355:34357 Maps IMap get def
R34362:34364 Maps IMap set def
R34370:34370 Maps <> m var
R34368:34368 Maps <> x var
R34366:34366 Maps <> j var
R34359:34359 Maps <> i var
R34378:34381 Maps X eq defax
R34385:34385 Maps <> j var
R34383:34383 Maps <> i var
R34399:34401 Maps IMap get def
R34405:34405 Maps <> m var
R34403:34403 Maps <> i var
R34392:34392 Maps <> x var
R34436:34438 Maps IMap get def
R34441:34443 Maps IMap set def
R34459:34469 Maps PMap gsspec thm
R34459:34469 Maps PMap gsspec thm
R34482:34485 Maps X eq defax
R34482:34485 Maps X eq defax
R34521:34528 Coqlib <> peq_true thm
R34521:34528 Coqlib <> peq_true thm
R34556:34564 Coqlib <> peq_false thm
R34556:34564 Coqlib <> peq_false thm
R34611:34621 Maps X index_inj prfax
R34611:34621 Maps X index_inj prfax
prf 34646:34649 IMap gmap
R34684:34684 Maps <> B var
R34679:34679 Maps <> A var
R34691:34693 Maps X t defax
R34700:34700 Maps IMap t def
R34702:34702 Maps <> A var
R34725:34727 Coq.Init.Logic <> :type_scope:x_'='_x not
R34710:34712 Maps IMap get def
R34717:34719 Maps IMap map def
R34723:34723 Maps <> m var
R34721:34721 Maps <> f var
R34714:34714 Maps <> i var
R34728:34728 Maps <> f var
R34730:34732 Maps IMap get def
R34736:34736 Maps <> m var
R34734:34734 Maps <> i var
R34768:34770 Maps IMap map def
R34773:34775 Maps IMap get def
R34784:34792 Maps PMap gmap thm
R34784:34792 Maps PMap gmap thm
prf 34812:34815 IMap set2
R34843:34845 Maps IMap elt def
R34854:34854 Maps <> A var
R34861:34861 Maps IMap t def
R34863:34863 Maps <> A var
R34890:34892 Coq.Init.Logic <> :type_scope:x_'='_x not
R34871:34873 Maps IMap set def
R34880:34882 Maps IMap set def
R34888:34888 Maps <> m var
R34886:34886 Maps <> x var
R34884:34884 Maps <> i var
R34877:34877 Maps <> y var
R34875:34875 Maps <> i var
R34893:34895 Maps IMap set def
R34901:34901 Maps <> m var
R34899:34899 Maps <> y var
R34897:34897 Maps <> i var
R34932:34934 Maps IMap set def
R34943:34951 Maps PMap set2 thm
R34943:34951 Maps PMap set2 thm
R34966:34969 Maps IMap <> mod
mod 34980:34987 <> ZIndexed
def 35003:35003 ZIndexed t
R35008:35008 Coq.Numbers.BinNums <> Z ind
def 35024:35028 ZIndexed index
R35034:35034 Coq.Numbers.BinNums <> Z ind
R35038:35045 Coq.Numbers.BinNums <> positive ind
R35060:35060 Maps <> z var
R35073:35074 Coq.Numbers.BinNums <> Z0 constr
R35079:35080 Coq.Numbers.BinNums <> xH constr
R35088:35091 Coq.Numbers.BinNums <> Zpos constr
R35098:35099 Coq.Numbers.BinNums <> xO constr
R35109:35112 Coq.Numbers.BinNums <> Zneg constr
R35119:35120 Coq.Numbers.BinNums <> xI constr
prf 35141:35149 ZIndexed index_inj
R35165:35165 Coq.Numbers.BinNums <> Z ind
R35191:35193 Coq.Init.Logic <> :type_scope:x_'='_x not
R35190:35190 Maps <> x var
R35194:35194 Maps <> y var
R35176:35178 Coq.Init.Logic <> :type_scope:x_'='_x not
R35169:35173 Maps ZIndexed index def
R35175:35175 Maps <> x var
R35179:35183 Maps ZIndexed index def
R35185:35185 Maps <> y var
R35217:35221 Maps ZIndexed index def
def 35347:35348 ZIndexed eq
R35353:35355 Coqlib <> zeq def
R35362:35369 Maps ZIndexed <> mod
R35388:35391 Maps IMap <> modtype
R35393:35400 Maps ZIndexed <> modtype
mod 35380:35383 <> ZMap
mod 35412:35419 <> NIndexed
def 35435:35435 NIndexed t
R35440:35440 Coq.Numbers.BinNums <> N ind
def 35456:35460 NIndexed index
R35466:35466 Coq.Numbers.BinNums <> N ind
R35470:35477 Coq.Numbers.BinNums <> positive ind
R35492:35492 Maps <> n var
R35505:35506 Coq.Numbers.BinNums <> N0 constr
R35511:35512 Coq.Numbers.BinNums <> xH constr
R35520:35523 Coq.Numbers.BinNums <> Npos constr
R35530:35531 Coq.Numbers.BinNums <> xO constr
prf 35552:35560 NIndexed index_inj
R35576:35576 Coq.Numbers.BinNums <> N ind
R35602:35604 Coq.Init.Logic <> :type_scope:x_'='_x not
R35601:35601 Maps <> x var
R35605:35605 Maps <> y var
R35587:35589 Coq.Init.Logic <> :type_scope:x_'='_x not
R35580:35584 Maps NIndexed index def
R35586:35586 Maps <> x var
R35590:35594 Maps NIndexed index def
R35596:35596 Maps <> y var
R35628:35632 Maps NIndexed index def
prf 35737:35738 NIndexed eq
R35754:35754 Coq.Numbers.BinNums <> N ind
R35758:35758 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R35764:35768 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R35775:35775 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R35760:35762 Coq.Init.Logic <> :type_scope:x_'='_x not
R35759:35759 Maps <> x var
R35763:35763 Maps <> y var
R35770:35773 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R35769:35769 Maps <> x var
R35774:35774 Maps <> y var
R35814:35816 Coqlib <> peq def
R35814:35816 Coqlib <> peq def
R35830:35837 Maps NIndexed <> mod
R35856:35859 Maps IMap <> modtype
R35861:35868 Maps NIndexed <> modtype
mod 35848:35851 <> NMap
modtype 35959:35971 <> EQUALITY_TYPE
var 35985:35985 EQUALITY_TYPE t
var 36005:36006 EQUALITY_TYPE eq
R36022:36022 Maps EQUALITY_TYPE t defax
R36026:36026 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36032:36036 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36043:36043 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R36028:36030 Coq.Init.Logic <> :type_scope:x_'='_x not
R36027:36027 Maps <> x var
R36031:36031 Maps <> y var
R36038:36041 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36037:36037 Maps <> x var
R36042:36042 Maps <> y var
R36050:36062 Maps EQUALITY_TYPE <> modtype
R36081:36093 Maps EQUALITY_TYPE <> mod
R36099:36101 Maps MAP <> mod
mod 36073:36076 <> EMap
def 36118:36120 EMap elt
R36125:36127 Maps X t defax
def 36143:36148 EMap elt_eq
R36153:36156 Maps X eq defax
def 36172:36172 EMap t
R36194:36194 Maps <> A var
R36187:36189 Maps X t defax
def 36210:36213 EMap init
R36229:36229 Maps <> A var
R36243:36245 Maps X t defax
R36251:36251 Maps <> v var
def 36267:36269 EMap get
R36285:36287 Maps X t defax
R36294:36294 Maps EMap t def
R36296:36296 Maps <> A var
R36302:36302 Maps <> m var
R36304:36304 Maps <> x var
def 36320:36322 EMap set
R36338:36340 Maps X t defax
R36347:36347 Maps <> A var
R36354:36354 Maps EMap t def
R36356:36356 Maps <> A var
R36374:36376 Maps X t defax
R36385:36388 Maps X eq defax
R36392:36392 Maps <> x var
R36390:36390 Maps <> y var
R36406:36406 Maps <> m var
R36408:36408 Maps <> y var
R36399:36399 Maps <> v var
prf 36419:36420 EMap gi
R36448:36450 Maps EMap elt def
R36457:36457 Maps <> A var
R36469:36471 Coq.Init.Logic <> :type_scope:x_'='_x not
R36461:36464 Maps EMap init def
R36468:36468 Maps <> i var
R36466:36466 Maps <> x var
R36472:36472 Maps <> x var
prf 36524:36526 EMap gss
R36554:36556 Maps EMap elt def
R36563:36563 Maps <> A var
R36570:36570 Maps EMap t def
R36572:36572 Maps <> A var
R36589:36591 Coq.Init.Logic <> :type_scope:x_'='_x not
R36577:36579 Maps EMap set def
R36585:36585 Maps <> m var
R36583:36583 Maps <> x var
R36581:36581 Maps <> i var
R36588:36588 Maps <> i var
R36592:36592 Maps <> x var
R36623:36625 Maps EMap set def
R36634:36637 Maps X eq defax
R36634:36637 Maps X eq defax
R0:-1 Maps <> y var
prf 36691:36693 EMap gso
R36723:36725 Maps EMap elt def
R36732:36732 Maps <> A var
R36739:36739 Maps EMap t def
R36741:36741 Maps <> A var
R36772:36774 Coq.Init.Logic <> :type_scope:x_'='_x not
R36760:36762 Maps EMap set def
R36768:36768 Maps <> m var
R36766:36766 Maps <> x var
R36764:36764 Maps <> j var
R36771:36771 Maps <> i var
R36775:36775 Maps <> m var
R36777:36777 Maps <> i var
R36750:36753 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R36749:36749 Maps <> i var
R36754:36754 Maps <> j var
R36808:36810 Maps EMap set def
R36819:36822 Maps X eq defax
R36819:36822 Maps X eq defax
prf 36881:36886 EMap gsspec
R36916:36918 Maps EMap elt def
R36925:36925 Maps <> A var
R36932:36932 Maps EMap t def
R36934:36934 Maps <> A var
R36959:36961 Coq.Init.Logic <> :type_scope:x_'='_x not
R36942:36944 Maps EMap get def
R36949:36951 Maps EMap set def
R36957:36957 Maps <> m var
R36955:36955 Maps <> x var
R36953:36953 Maps <> j var
R36946:36946 Maps <> i var
R36965:36970 Maps EMap elt_eq def
R36974:36974 Maps <> j var
R36972:36972 Maps <> i var
R36988:36990 Maps EMap get def
R36994:36994 Maps <> m var
R36992:36992 Maps <> i var
R36981:36981 Maps <> x var
R37025:37027 Maps EMap get def
R37030:37032 Maps EMap set def
R37035:37040 Maps EMap elt_eq def
prf 37071:37077 EMap gsident
R37107:37109 Maps EMap elt def
R37116:37116 Maps EMap t def
R37118:37118 Maps <> A var
R37147:37149 Coq.Init.Logic <> :type_scope:x_'='_x not
R37122:37124 Maps EMap get def
R37129:37131 Maps EMap set def
R37145:37145 Maps <> m var
R37136:37138 Maps EMap get def
R37142:37142 Maps <> m var
R37140:37140 Maps <> i var
R37133:37133 Maps <> i var
R37126:37126 Maps <> j var
R37150:37152 Maps EMap get def
R37156:37156 Maps <> m var
R37154:37154 Maps <> j var
R37187:37189 Maps EMap get def
R37192:37194 Maps EMap set def
R37203:37206 Maps X eq defax
R37203:37206 Maps X eq defax
def 37270:37272 EMap map
R37295:37295 Maps <> B var
R37290:37290 Maps <> A var
R37302:37302 Maps EMap t def
R37304:37304 Maps <> A var
R37322:37324 Maps X t defax
R37330:37330 Maps <> f var
R37332:37332 Maps <> m var
R37334:37334 Maps <> x var
prf 37346:37349 EMap gmap
R37384:37384 Maps <> B var
R37379:37379 Maps <> A var
R37391:37393 Maps EMap elt def
R37400:37400 Maps EMap t def
R37402:37402 Maps <> A var
R37425:37427 Coq.Init.Logic <> :type_scope:x_'='_x not
R37410:37412 Maps EMap get def
R37417:37419 Maps EMap map def
R37423:37423 Maps <> m var
R37421:37421 Maps <> f var
R37414:37414 Maps <> i var
R37428:37428 Maps <> f var
R37430:37432 Maps EMap get def
R37436:37436 Maps <> m var
R37434:37434 Maps <> i var
R37468:37470 Maps EMap get def
R37473:37475 Maps EMap map def
R37502:37505 Maps EMap <> mod
R37578:37581 Maps TREE <> mod
mod 37559:37573 <> Tree_Properties
sec 37638:37650 Tree_Properties TREE_FOLD_IND
var 37664:37664 Tree_Properties.TREE_FOLD_IND V
var 37666:37666 Tree_Properties.TREE_FOLD_IND A
var 37684:37684 Tree_Properties.TREE_FOLD_IND f
R37706:37706 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R37701:37701 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R37692:37696 Maps T elt defax
R37687:37687 Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 37718:37718 Tree_Properties.TREE_FOLD_IND P
R37730:37730 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R37721:37723 Maps T t defax
R37725:37725 Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 37750:37753 Tree_Properties.TREE_FOLD_IND init
R37756:37756 Maps <> Tree_Properties.TREE_FOLD_IND.A var
var 37768:37774 Tree_Properties.TREE_FOLD_IND m_final
R37777:37779 Maps T t defax
R37781:37781 Maps <> Tree_Properties.TREE_FOLD_IND.V var
var 37796:37803 Tree_Properties.TREE_FOLD_IND P_compat
R37874:37874 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R37879:37879 Maps <> a var
R37876:37877 Maps <> m' var
R37865:37865 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R37869:37869 Maps <> a var
R37867:37867 Maps <> m var
R37845:37847 Coq.Init.Logic <> :type_scope:x_'='_x not
R37836:37840 Maps T get defax
R37844:37844 Maps <> m var
R37842:37842 Maps <> x var
R37848:37852 Maps T get defax
R37856:37857 Maps <> m' var
R37854:37854 Maps <> x var
var 37894:37899 Tree_Properties.TREE_FOLD_IND H_base
R37905:37905 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R37919:37922 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R37908:37914 Maps T empty defax
var 37937:37941 Tree_Properties.TREE_FOLD_IND H_rec
R38021:38021 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R38038:38038 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R38044:38044 Maps <> v var
R38042:38042 Maps <> k var
R38040:38040 Maps <> a var
R38024:38028 Maps T set defax
R38034:38034 Maps <> m var
R38032:38032 Maps <> v var
R38030:38030 Maps <> k var
R38012:38012 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R38016:38016 Maps <> a var
R38014:38014 Maps <> m var
R37999:38001 Coq.Init.Logic <> :type_scope:x_'='_x not
R37984:37988 Maps T get defax
R37992:37998 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R37990:37990 Maps <> k var
R38002:38005 Coq.Init.Datatypes <> Some constr
R38007:38007 Maps <> v var
R37973:37975 Coq.Init.Logic <> :type_scope:x_'='_x not
R37964:37968 Maps T get defax
R37972:37972 Maps <> m var
R37970:37970 Maps <> k var
R37976:37979 Coq.Init.Datatypes <> None constr
var 38053:38054 Tree_Properties.TREE_FOLD_IND f'
R38060:38060 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R38073:38075 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R38068:38072 Maps T elt defax
R38076:38076 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R38082:38082 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R38095:38097 Coq.Init.Datatypes <> snd def
R38099:38099 Maps <> p var
R38087:38089 Coq.Init.Datatypes <> fst def
R38091:38091 Maps <> p var
R38084:38084 Maps <> a var
var 38108:38109 Tree_Properties.TREE_FOLD_IND P'
R38115:38118 Coq.Init.Datatypes <> list ind
R38126:38128 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R38121:38125 Maps T elt defax
R38129:38129 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R38137:38137 Maps <> Tree_Properties.TREE_FOLD_IND.A var
R38193:38193 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R38197:38197 Maps <> a var
R38195:38195 Maps <> m var
R38162:38171 Coqlib <> list_equiv def
R38176:38185 Maps T elements defax
R38187:38187 Maps <> m var
R38173:38173 Maps <> l var
prf 38208:38214 Tree_Properties H_base'
R38219:38220 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R38226:38229 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R38222:38224 Coq.Init.Datatypes <> nil constr
R38275:38281 Maps T empty defax
R38260:38267 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R38275:38281 Maps T empty defax
R38260:38267 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R38311:38318 Maps T gempty prfax
R38311:38318 Maps T gempty prfax
R38340:38344 Maps T get defax
R38340:38344 Maps T get defax
R38376:38377 Coq.Lists.List <> In def
R38386:38388 Coq.Init.Datatypes <> nil constr
R38379:38379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38381:38382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38384:38384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38376:38377 Coq.Lists.List <> In def
R38386:38388 Coq.Init.Datatypes <> nil constr
R38379:38379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38381:38382 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38384:38384 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38403:38403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38405:38406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38408:38408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38403:38403 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38405:38406 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38408:38408 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38418:38435 Maps T elements_correct prfax
R38418:38435 Maps T elements_correct prfax
prf 38474:38479 Tree_Properties H_rec'
R38589:38590 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R38614:38614 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R38620:38620 Maps <> v var
R38618:38618 Maps <> k var
R38616:38616 Maps <> a var
R38594:38597 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R38593:38593 Maps <> l var
R38604:38607 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R38598:38598 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38600:38601 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38603:38603 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38599:38599 Maps <> k var
R38602:38602 Maps <> v var
R38608:38610 Coq.Init.Datatypes <> nil constr
R38577:38578 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R38582:38582 Maps <> a var
R38580:38580 Maps <> l var
R38541:38542 Coq.Lists.List <> In def
R38552:38561 Maps T elements defax
R38563:38569 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R38544:38544 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38546:38547 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38549:38549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38545:38545 Maps <> k var
R38548:38548 Maps <> v var
R38502:38502 Coq.Init.Logic <> :type_scope:'~'_x not
R38503:38504 Coq.Lists.List <> In def
R38509:38516 Coq.Lists.List <> map def
R38533:38533 Maps <> l var
R38520:38522 Coq.Init.Datatypes <> fst def
R38530:38530 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R38524:38528 Maps T elt defax
R38506:38506 Maps <> k var
R38640:38641 Maps Tree_Properties P' vardef
R38667:38674 Maps T remove defax
R38667:38674 Maps T remove defax
R38706:38710 Maps T set defax
R38691:38698 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R38706:38710 Maps T set defax
R38691:38698 Maps <> Tree_Properties.TREE_FOLD_IND.P_compat var
R38752:38759 Maps T gsspec prfax
R38752:38759 Maps T gsspec prfax
R38772:38779 Maps T elt_eq defax
R38772:38779 Maps T elt_eq defax
R38807:38825 Maps T elements_complete prfax
R38807:38825 Maps T elements_complete prfax
R38843:38843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38845:38846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38848:38848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38843:38843 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38845:38846 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38848:38848 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R38862:38870 Coq.Lists.List <> in_or_app thm
R38862:38870 Coq.Lists.List <> in_or_app thm
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R38912:38916 Maps T gro prfax
R38912:38916 Maps T gro prfax
R38933:38937 Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R38933:38937 Maps <> Tree_Properties.TREE_FOLD_IND.H_rec var
R38957:38961 Maps T grs prfax
R38957:38961 Maps T grs prfax
R38970:38988 Maps T elements_complete prfax
R38970:38988 Maps T elements_complete prfax
R39058:39075 Maps T elements_correct prfax
R39058:39075 Maps T elements_correct prfax
R39097:39101 Maps T gro prfax
R39097:39101 Maps T gro prfax
R39110:39128 Maps T elements_complete prfax
R39110:39128 Maps T elements_complete prfax
R39149:39149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39152:39153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39156:39156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39149:39149 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39152:39153 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39156:39156 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39166:39174 Coq.Lists.List <> in_or_app thm
R39166:39174 Coq.Lists.List <> in_or_app thm
R39231:39233 Coq.Init.Datatypes <> fst def
R39235:39235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39237:39238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39241:39241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39231:39233 Coq.Init.Datatypes <> fst def
R39235:39235 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39237:39238 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39241:39241 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39251:39256 Coq.Lists.List <> in_map thm
R39251:39256 Coq.Lists.List <> in_map thm
R39286:39288 Coq.Init.Logic <> :type_scope:x_'='_x not
R39275:39279 Maps T get defax
R39289:39292 Coq.Init.Datatypes <> Some constr
R39286:39288 Coq.Init.Logic <> :type_scope:x_'='_x not
R39275:39279 Maps T get defax
R39289:39292 Coq.Init.Datatypes <> Some constr
R39305:39323 Maps T elements_complete prfax
R39305:39323 Maps T elements_complete prfax
R39359:39366 Maps T grspec prfax
R39359:39366 Maps T grspec prfax
R39385:39392 Maps T elt_eq defax
R39385:39392 Maps T elt_eq defax
R39423:39424 Coq.Lists.List <> In def
R39436:39445 Maps T elements defax
R39426:39426 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39429:39430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39433:39433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39423:39424 Coq.Lists.List <> In def
R39436:39445 Maps T elements defax
R39426:39426 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39429:39430 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39433:39433 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39458:39475 Maps T elements_correct prfax
R39458:39475 Maps T elements_correct prfax
R39501:39501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39504:39505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39508:39508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39501:39501 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39504:39505 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39508:39508 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39528:39536 Coq.Lists.List <> in_app_or thm
R39528:39536 Coq.Lists.List <> in_app_or thm
R0:-1 Maps <> y var
prf 39605:39616 Tree_Properties fold_rec_aux
R39822:39823 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R39837:39850 Coq.Lists.List <> fold_left def
R39858:39858 Maps <> a var
R39855:39856 Maps <> l1 var
R39852:39853 Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R39828:39831 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R39826:39827 Maps <> l2 var
R39832:39833 Maps <> l1 var
R39811:39812 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R39817:39817 Maps <> a var
R39814:39815 Maps <> l2 var
R39764:39775 Coqlib <> list_norepet ind
R39778:39785 Coq.Lists.List <> map def
R39802:39803 Maps <> l1 var
R39789:39791 Coq.Init.Datatypes <> fst def
R39799:39799 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R39793:39797 Maps T elt defax
R39687:39699 Coqlib <> list_disjoint def
R39731:39738 Coq.Lists.List <> map def
R39755:39756 Maps <> l2 var
R39742:39744 Coq.Init.Datatypes <> fst def
R39752:39752 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R39746:39750 Maps T elt defax
R39702:39709 Coq.Lists.List <> map def
R39726:39727 Maps <> l1 var
R39713:39715 Coq.Init.Datatypes <> fst def
R39723:39723 Maps <> Tree_Properties.TREE_FOLD_IND.V var
R39717:39721 Maps T elt defax
R39639:39648 Coqlib <> list_equiv def
R39662:39671 Maps T elements defax
R39673:39679 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R39653:39656 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R39651:39652 Maps <> l2 var
R39657:39658 Maps <> l1 var
R39913:39928 Coq.Lists.List <> app_nil_end thm
R39913:39928 Coq.Lists.List <> app_nil_end thm
R40011:40011 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40025:40029 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40018:40021 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40012:40012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40014:40015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40017:40017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40022:40024 Coq.Init.Datatypes <> nil constr
R39997:40000 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39991:39991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39993:39994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39996:39996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39997:40000 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R39991:39991 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39993:39994 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R39996:39996 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40011:40011 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40025:40029 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40018:40021 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R40012:40012 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40014:40015 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40017:40017 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40022:40024 Coq.Init.Datatypes <> nil constr
R40046:40057 Coq.Lists.List <> app_ass syndef
R40046:40057 Coq.Lists.List <> app_ass syndef
R40082:40088 Coq.Lists.List <> app_ass syndef
R40082:40088 Coq.Lists.List <> app_ass syndef
R40120:40126 Coq.Lists.List <> map_app thm
R40120:40126 Coq.Lists.List <> map_app thm
R40145:40153 Coq.Lists.List <> in_app_or thm
R40145:40153 Coq.Lists.List <> in_app_or thm
R0:-1 Maps <> y var
R40249:40250 Maps Tree_Properties f' vardef
R40266:40271 Maps Tree_Properties H_rec' thm
R40266:40271 Maps Tree_Properties H_rec' thm
R40287:40305 Coqlib <> list_disjoint_notin thm
R40287:40305 Coqlib <> list_disjoint_notin thm
R40343:40343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40345:40346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40348:40348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40343:40343 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40345:40346 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40348:40348 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R40358:40366 Coq.Lists.List <> in_or_app thm
R40358:40366 Coq.Lists.List <> in_or_app thm
prf 40396:40403 Tree_Properties fold_rec
R40408:40408 Maps <> Tree_Properties.TREE_FOLD_IND.P var
R40419:40424 Maps T fold defax
R40436:40439 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R40428:40434 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40426:40426 Maps <> Tree_Properties.TREE_FOLD_IND.f var
R40410:40416 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40468:40478 Maps T fold_spec prfax
R40468:40478 Maps T fold_spec prfax
R40486:40487 Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R40486:40487 Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R40500:40501 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R40532:40545 Coq.Lists.List <> fold_left def
R40571:40574 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R40551:40560 Maps T elements defax
R40562:40568 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40547:40548 Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R40507:40510 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40504:40506 Coq.Init.Datatypes <> nil constr
R40511:40520 Maps T elements defax
R40522:40528 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40500:40501 Maps <> Tree_Properties.TREE_FOLD_IND.P' var
R40532:40545 Coq.Lists.List <> fold_left def
R40571:40574 Maps <> Tree_Properties.TREE_FOLD_IND.init var
R40551:40560 Maps T elements defax
R40562:40568 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40547:40548 Maps <> Tree_Properties.TREE_FOLD_IND.f' var
R40507:40510 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R40504:40506 Coq.Init.Datatypes <> nil constr
R40511:40520 Maps T elements defax
R40522:40528 Maps <> Tree_Properties.TREE_FOLD_IND.m_final var
R40589:40600 Maps Tree_Properties fold_rec_aux thm
R40589:40600 Maps Tree_Properties fold_rec_aux thm
R0:-1 Maps <> y var
R40677:40699 Maps T elements_keys_norepet prfax
R40677:40699 Maps T elements_keys_norepet prfax
R40713:40719 Maps Tree_Properties H_base' thm
R40713:40719 Maps Tree_Properties H_base' thm
R0:-1 Maps <> y var
R40786:40798 Maps Tree_Properties.TREE_FOLD_IND <> sec
sec 40851:40857 Tree_Properties MEASURE
var 40870:40870 Tree_Properties.MEASURE V
def 40891:40898 Tree_Properties cardinal
R40904:40906 Maps T t defax
R40908:40908 Maps <> Tree_Properties.MEASURE.V var
R40913:40915 Coq.Init.Datatypes <> nat ind
R40920:40930 Coq.Lists.List <> length syndef
R40933:40942 Maps T elements defax
R40944:40944 Maps <> x var
prf 40956:40971 Tree_Properties list_incl_length
R40998:41001 Coq.Init.Datatypes <> list ind
R41003:41003 Maps <> A var
R41040:41043 Coq.Init.Datatypes <> list ind
R41045:41045 Maps <> A var
R41083:41086 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R41069:41079 Coq.Lists.List <> length syndef
R41081:41082 Maps <> l1 var
R41087:41097 Coq.Lists.List <> length syndef
R41099:41100 Maps <> l2 var
R41049:41057 Coq.Lists.List <> incl def
R41062:41063 Maps <> l2 var
R41059:41060 Maps <> l1 var
R41007:41018 Coqlib <> list_norepet ind
R41020:41021 Maps <> l1 var
R41165:41177 Coq.Lists.List <> in_split thm
R41165:41177 Coq.Lists.List <> in_split thm
R41255:41258 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R41246:41251 Coq.Init.Datatypes <> length def
R41259:41264 Coq.Init.Datatypes <> length def
R41269:41272 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41255:41258 Coq.Init.Peano <> :nat_scope:x_'<='_x not
R41246:41251 Coq.Init.Datatypes <> length def
R41259:41264 Coq.Init.Datatypes <> length def
R41269:41272 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41381:41390 Coq.Lists.List <> in_app_iff thm
R41381:41390 Coq.Lists.List <> in_app_iff thm
R41381:41390 Coq.Lists.List <> in_app_iff thm
R41381:41390 Coq.Lists.List <> in_app_iff thm
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R41450:41459 Coq.Lists.List <> app_length thm
R41450:41459 Coq.Lists.List <> app_length thm
R41450:41459 Coq.Lists.List <> app_length thm
prf 41495:41510 Tree_Properties list_length_incl
R41537:41540 Coq.Init.Datatypes <> list ind
R41542:41542 Maps <> A var
R41632:41640 Coq.Lists.List <> incl def
R41645:41646 Maps <> l1 var
R41642:41643 Maps <> l2 var
R41611:41613 Coq.Init.Logic <> :type_scope:x_'='_x not
R41597:41607 Coq.Lists.List <> length syndef
R41609:41610 Maps <> l1 var
R41614:41624 Coq.Lists.List <> length syndef
R41626:41627 Maps <> l2 var
R41578:41586 Coq.Lists.List <> incl def
R41591:41592 Maps <> l2 var
R41588:41589 Maps <> l1 var
R41546:41557 Coqlib <> list_norepet ind
R41559:41560 Maps <> l1 var
R41756:41768 Coq.Lists.List <> in_split thm
R41756:41768 Coq.Lists.List <> in_split thm
R41837:41840 Coq.Lists.List <> incl def
R41845:41848 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41837:41840 Coq.Lists.List <> incl def
R41845:41848 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R41956:41965 Coq.Lists.List <> in_app_iff thm
R41956:41965 Coq.Lists.List <> in_app_iff thm
R41956:41965 Coq.Lists.List <> in_app_iff thm
R41956:41965 Coq.Lists.List <> in_app_iff thm
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R42027:42036 Coq.Lists.List <> app_length thm
R42027:42036 Coq.Lists.List <> app_length thm
R42027:42036 Coq.Lists.List <> app_length thm
R42095:42104 Coq.Lists.List <> in_app_iff thm
R42095:42104 Coq.Lists.List <> in_app_iff thm
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
prf 42151:42173 Tree_Properties list_strict_incl_length
R42203:42206 Coq.Init.Datatypes <> list ind
R42208:42208 Maps <> A var
R42215:42215 Maps <> A var
R42299:42301 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R42285:42295 Coq.Lists.List <> length syndef
R42297:42298 Maps <> l1 var
R42302:42312 Coq.Lists.List <> length syndef
R42314:42315 Maps <> l2 var
R42271:42272 Coq.Lists.List <> In def
R42276:42277 Maps <> l2 var
R42274:42274 Maps <> x var
R42259:42259 Coq.Init.Logic <> :type_scope:'~'_x not
R42260:42261 Coq.Lists.List <> In def
R42265:42266 Maps <> l1 var
R42263:42263 Maps <> x var
R42240:42248 Coq.Lists.List <> incl def
R42253:42254 Maps <> l2 var
R42250:42251 Maps <> l1 var
R42221:42232 Coqlib <> list_norepet ind
R42234:42235 Maps <> l1 var
R42348:42363 Maps Tree_Properties list_incl_length thm
R42413:42416 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R42401:42403 Coq.Init.Logic <> :type_scope:x_'='_x not
R42392:42397 Coq.Init.Datatypes <> length def
R42404:42409 Coq.Init.Datatypes <> length def
R42426:42428 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R42417:42422 Coq.Init.Datatypes <> length def
R42429:42434 Coq.Init.Datatypes <> length def
R42413:42416 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R42401:42403 Coq.Init.Logic <> :type_scope:x_'='_x not
R42392:42397 Coq.Init.Datatypes <> length def
R42404:42409 Coq.Init.Datatypes <> length def
R42426:42428 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R42417:42422 Coq.Init.Datatypes <> length def
R42429:42434 Coq.Init.Datatypes <> length def
R42491:42506 Maps Tree_Properties list_length_incl thm
R42491:42506 Maps Tree_Properties list_length_incl thm
prf 42530:42545 Tree_Properties list_norepet_map
R42578:42578 Maps <> B var
R42573:42573 Maps <> A var
R42585:42588 Coq.Init.Datatypes <> list ind
R42590:42590 Maps <> A var
R42627:42638 Coqlib <> list_norepet ind
R42640:42640 Maps <> l var
R42596:42607 Coqlib <> list_norepet ind
R42610:42617 Coq.Lists.List <> map def
R42621:42621 Maps <> l var
R42619:42619 Maps <> f var
R42751:42761 Coq.Lists.List <> in_map thm
R42751:42761 Coq.Lists.List <> in_map thm
prf 42784:42798 Tree_Properties cardinal_remove
R42863:42865 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R42840:42847 Maps Tree_Properties cardinal def
R42850:42857 Maps T remove defax
R42861:42861 Maps <> m var
R42859:42859 Maps <> x var
R42866:42873 Maps Tree_Properties cardinal def
R42875:42875 Maps <> m var
R42826:42828 Coq.Init.Logic <> :type_scope:x_'='_x not
R42817:42821 Maps T get defax
R42825:42825 Maps <> m var
R42823:42823 Maps <> x var
R42829:42832 Coq.Init.Datatypes <> Some constr
R42834:42834 Maps <> y var
R42899:42906 Maps Tree_Properties cardinal def
R42958:42958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42960:42961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42963:42963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42923:42945 Maps Tree_Properties list_strict_incl_length thm
R42958:42958 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42960:42961 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42963:42963 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R42923:42945 Maps Tree_Properties list_strict_incl_length thm
R43004:43006 Coq.Init.Datatypes <> fst def
R43014:43014 Maps <> Tree_Properties.MEASURE.V var
R43008:43012 Maps T elt defax
R42975:42990 Maps Tree_Properties list_norepet_map thm
R43004:43006 Coq.Init.Datatypes <> fst def
R43014:43014 Maps <> Tree_Properties.MEASURE.V var
R43008:43012 Maps T elt defax
R42975:42990 Maps Tree_Properties list_norepet_map thm
R43024:43046 Maps T elements_keys_norepet prfax
R43024:43046 Maps T elements_keys_norepet prfax
R43095:43113 Maps T elements_complete prfax
R43134:43141 Maps T grspec prfax
R43134:43141 Maps T grspec prfax
R43154:43161 Maps T elt_eq defax
R43154:43161 Maps T elt_eq defax
R43204:43221 Maps T elements_correct prfax
R43204:43221 Maps T elements_correct prfax
R43253:43271 Maps T elements_complete prfax
R43289:43296 Maps T grspec prfax
R43289:43296 Maps T grspec prfax
R43307:43317 Coqlib <> dec_eq_true thm
R43307:43317 Coqlib <> dec_eq_true thm
R43340:43357 Maps T elements_correct prfax
R43340:43357 Maps T elements_correct prfax
R43376:43382 Maps Tree_Properties.MEASURE <> sec
sec 43420:43432 Tree_Properties FORALL_EXISTS
var 43445:43445 Tree_Properties.FORALL_EXISTS A
def 43466:43472 Tree_Properties for_all
R43478:43480 Maps T t defax
R43482:43482 Maps <> Tree_Properties.FORALL_EXISTS.A var
R43503:43506 Coq.Init.Datatypes <> bool ind
R43498:43498 Maps <> Tree_Properties.FORALL_EXISTS.A var
R43489:43493 Maps T elt defax
R43511:43514 Coq.Init.Datatypes <> bool ind
R43521:43526 Maps T fold defax
R43556:43559 Coq.Init.Datatypes <> true constr
R43554:43554 Maps <> m var
R43543:43546 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R43542:43542 Maps <> b var
R43547:43547 Maps <> f var
R43551:43551 Maps <> a var
R43549:43549 Maps <> x var
prf 43569:43583 Tree_Properties for_all_correct
R43620:43625 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R43672:43672 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R43613:43615 Coq.Init.Logic <> :type_scope:x_'='_x not
R43602:43608 Maps Tree_Properties for_all def
R43612:43612 Maps <> f var
R43610:43610 Maps <> m var
R43616:43619 Coq.Init.Datatypes <> true constr
R43665:43667 Coq.Init.Logic <> :type_scope:x_'='_x not
R43660:43660 Maps <> f var
R43664:43664 Maps <> a var
R43662:43662 Maps <> x var
R43668:43671 Coq.Init.Datatypes <> true constr
R43647:43649 Coq.Init.Logic <> :type_scope:x_'='_x not
R43638:43642 Maps T get defax
R43646:43646 Maps <> m var
R43644:43644 Maps <> x var
R43650:43653 Coq.Init.Datatypes <> Some constr
R43655:43655 Maps <> a var
R43706:43712 Maps Tree_Properties for_all def
R43721:43728 Maps Tree_Properties fold_rec thm
R43721:43728 Maps Tree_Properties fold_rec thm
R43884:43891 Maps T gempty prfax
R43884:43891 Maps T gempty prfax
R43970:43978 Coq.Init.Datatypes <> andb_prop thm
R43970:43978 Coq.Init.Datatypes <> andb_prop thm
R43997:44004 Maps T gsspec prfax
R43997:44004 Maps T gsspec prfax
R44023:44030 Maps T elt_eq defax
R44023:44030 Maps T elt_eq defax
R44081:44095 Coq.Init.Datatypes <> andb_true_intro thm
R44081:44095 Coq.Init.Datatypes <> andb_true_intro thm
R44146:44150 Maps T gso prfax
R44146:44150 Maps T gso prfax
R44190:44194 Maps T gss prfax
R44190:44194 Maps T gss prfax
def 44214:44220 Tree_Properties exists_
R44226:44228 Maps T t defax
R44230:44230 Maps <> Tree_Properties.FORALL_EXISTS.A var
R44251:44254 Coq.Init.Datatypes <> bool ind
R44246:44246 Maps <> Tree_Properties.FORALL_EXISTS.A var
R44237:44241 Maps T elt defax
R44259:44262 Coq.Init.Datatypes <> bool ind
R44269:44274 Maps T fold defax
R44304:44308 Coq.Init.Datatypes <> false constr
R44302:44302 Maps <> m var
R44291:44294 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R44290:44290 Maps <> b var
R44295:44295 Maps <> f var
R44299:44299 Maps <> a var
R44297:44297 Maps <> x var
prf 44318:44331 Tree_Properties exists_correct
R44368:44373 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44420:44420 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R44361:44363 Coq.Init.Logic <> :type_scope:x_'='_x not
R44350:44356 Maps Tree_Properties exists_ def
R44360:44360 Maps <> f var
R44358:44358 Maps <> m var
R44364:44367 Coq.Init.Datatypes <> true constr
R44374:44380 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44384:44385 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R44404:44407 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R44395:44397 Coq.Init.Logic <> :type_scope:x_'='_x not
R44386:44390 Maps T get defax
R44394:44394 Maps <> m var
R44392:44392 Maps <> x var
R44398:44401 Coq.Init.Datatypes <> Some constr
R44403:44403 Maps <> a var
R44413:44415 Coq.Init.Logic <> :type_scope:x_'='_x not
R44408:44408 Maps <> f var
R44412:44412 Maps <> a var
R44410:44410 Maps <> x var
R44416:44419 Coq.Init.Datatypes <> true constr
R44454:44460 Maps Tree_Properties exists_ def
R44469:44476 Maps Tree_Properties fold_rec thm
R44469:44476 Maps Tree_Properties fold_rec thm
R44691:44698 Maps T gempty prfax
R44691:44698 Maps T gempty prfax
R44770:44782 Coq.Bool.Bool <> orb_true_elim thm
R44770:44782 Coq.Bool.Bool <> orb_true_elim thm
R44890:44894 Maps T gso prfax
R44890:44894 Maps T gso prfax
R44956:44960 Maps T gss prfax
R44956:44960 Maps T gss prfax
R45006:45019 Coq.Bool.Bool <> orb_true_intro thm
R45006:45019 Coq.Bool.Bool <> orb_true_intro thm
R45032:45039 Maps T gsspec prfax
R45032:45039 Maps T gsspec prfax
R45057:45064 Maps T elt_eq defax
R45057:45064 Maps T elt_eq defax
prf 45154:45167 Tree_Properties exists_for_all
R45197:45199 Coq.Init.Logic <> :type_scope:x_'='_x not
R45186:45192 Maps Tree_Properties exists_ def
R45196:45196 Maps <> f var
R45194:45194 Maps <> m var
R45200:45203 Coq.Init.Datatypes <> negb def
R45206:45212 Maps Tree_Properties for_all def
R45228:45231 Coq.Init.Datatypes <> negb def
R45234:45234 Maps <> f var
R45238:45238 Maps <> a var
R45236:45236 Maps <> x var
R45214:45214 Maps <> m var
R45268:45274 Maps Tree_Properties exists_ def
R45277:45283 Maps Tree_Properties for_all def
R45296:45306 Maps T fold_spec prfax
R45296:45306 Maps T fold_spec prfax
R45296:45306 Maps T fold_spec prfax
R45296:45306 Maps T fold_spec prfax
R45331:45334 Coq.Init.Datatypes <> negb def
R45336:45339 Coq.Init.Datatypes <> true constr
R45319:45323 Coq.Init.Datatypes <> false constr
R45319:45323 Coq.Init.Datatypes <> false constr
R45331:45334 Coq.Init.Datatypes <> negb def
R45336:45339 Coq.Init.Datatypes <> true constr
R45355:45364 Maps T elements defax
R45369:45372 Coq.Init.Datatypes <> true constr
R45355:45364 Maps T elements defax
R45369:45372 Coq.Init.Datatypes <> true constr
R45477:45479 Coq.Init.Datatypes <> snd def
R45469:45471 Coq.Init.Datatypes <> fst def
R45477:45479 Coq.Init.Datatypes <> snd def
R45469:45471 Coq.Init.Datatypes <> fst def
R45477:45479 Coq.Init.Datatypes <> snd def
R45469:45471 Coq.Init.Datatypes <> fst def
prf 45512:45525 Tree_Properties for_all_exists
R45555:45557 Coq.Init.Logic <> :type_scope:x_'='_x not
R45544:45550 Maps Tree_Properties for_all def
R45554:45554 Maps <> f var
R45552:45552 Maps <> m var
R45558:45561 Coq.Init.Datatypes <> negb def
R45564:45570 Maps Tree_Properties exists_ def
R45586:45589 Coq.Init.Datatypes <> negb def
R45592:45592 Maps <> f var
R45596:45596 Maps <> a var
R45594:45594 Maps <> x var
R45572:45572 Maps <> m var
R45626:45632 Maps Tree_Properties exists_ def
R45635:45641 Maps Tree_Properties for_all def
R45654:45664 Maps T fold_spec prfax
R45654:45664 Maps T fold_spec prfax
R45654:45664 Maps T fold_spec prfax
R45654:45664 Maps T fold_spec prfax
R45688:45691 Coq.Init.Datatypes <> negb def
R45693:45697 Coq.Init.Datatypes <> false constr
R45677:45680 Coq.Init.Datatypes <> true constr
R45677:45680 Coq.Init.Datatypes <> true constr
R45688:45691 Coq.Init.Datatypes <> negb def
R45693:45697 Coq.Init.Datatypes <> false constr
R45713:45722 Maps T elements defax
R45727:45731 Coq.Init.Datatypes <> false constr
R45713:45722 Maps T elements defax
R45727:45731 Coq.Init.Datatypes <> false constr
R45836:45838 Coq.Init.Datatypes <> snd def
R45828:45830 Coq.Init.Datatypes <> fst def
R45836:45838 Coq.Init.Datatypes <> snd def
R45828:45830 Coq.Init.Datatypes <> fst def
R45836:45838 Coq.Init.Datatypes <> snd def
R45828:45830 Coq.Init.Datatypes <> fst def
prf 45870:45882 Tree_Properties for_all_false
R45920:45925 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45973:45973 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R45912:45914 Coq.Init.Logic <> :type_scope:x_'='_x not
R45901:45907 Maps Tree_Properties for_all def
R45911:45911 Maps <> f var
R45909:45909 Maps <> m var
R45915:45919 Coq.Init.Datatypes <> false constr
R45926:45932 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45936:45937 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R45956:45959 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R45947:45949 Coq.Init.Logic <> :type_scope:x_'='_x not
R45938:45942 Maps T get defax
R45946:45946 Maps <> m var
R45944:45944 Maps <> x var
R45950:45953 Coq.Init.Datatypes <> Some constr
R45955:45955 Maps <> a var
R45965:45967 Coq.Init.Logic <> :type_scope:x_'='_x not
R45960:45960 Maps <> f var
R45964:45964 Maps <> a var
R45962:45962 Maps <> x var
R45968:45972 Coq.Init.Datatypes <> false constr
R46001:46014 Maps Tree_Properties for_all_exists thm
R46001:46014 Maps Tree_Properties for_all_exists thm
R46028:46041 Coq.Bool.Bool <> negb_false_iff thm
R46028:46041 Coq.Bool.Bool <> negb_false_iff thm
R46052:46065 Maps Tree_Properties exists_correct thm
R46052:46065 Maps Tree_Properties exists_correct thm
R46146:46158 Coq.Bool.Bool <> negb_true_iff thm
R46146:46158 Coq.Bool.Bool <> negb_true_iff thm
prf 46204:46215 Tree_Properties exists_false
R46253:46258 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46306:46306 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46245:46247 Coq.Init.Logic <> :type_scope:x_'='_x not
R46234:46240 Maps Tree_Properties exists_ def
R46244:46244 Maps <> f var
R46242:46242 Maps <> m var
R46248:46252 Coq.Init.Datatypes <> false constr
R46298:46300 Coq.Init.Logic <> :type_scope:x_'='_x not
R46293:46293 Maps <> f var
R46297:46297 Maps <> a var
R46295:46295 Maps <> x var
R46301:46305 Coq.Init.Datatypes <> false constr
R46280:46282 Coq.Init.Logic <> :type_scope:x_'='_x not
R46271:46275 Maps T get defax
R46279:46279 Maps <> m var
R46277:46277 Maps <> x var
R46283:46286 Coq.Init.Datatypes <> Some constr
R46288:46288 Maps <> a var
R46334:46347 Maps Tree_Properties exists_for_all thm
R46334:46347 Maps Tree_Properties exists_for_all thm
R46361:46374 Coq.Bool.Bool <> negb_false_iff thm
R46361:46374 Coq.Bool.Bool <> negb_false_iff thm
R46385:46399 Maps Tree_Properties for_all_correct thm
R46385:46399 Maps Tree_Properties for_all_correct thm
R46442:46454 Coq.Bool.Bool <> negb_true_iff thm
R46442:46454 Coq.Bool.Bool <> negb_true_iff thm
R46497:46509 Maps Tree_Properties.FORALL_EXISTS <> sec
sec 46546:46561 Tree_Properties BOOLEAN_EQUALITY
var 46574:46574 Tree_Properties.BOOLEAN_EQUALITY A
var 46592:46595 Tree_Properties.BOOLEAN_EQUALITY beqA
R46608:46611 Coq.Init.Datatypes <> bool ind
R46603:46603 Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
R46598:46598 Maps <> Tree_Properties.BOOLEAN_EQUALITY.A var
prf 46623:46631 Tree_Properties beq_false
R46676:46682 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R46668:46670 Coq.Init.Logic <> :type_scope:x_'='_x not
R46652:46656 Maps T beq defax
R46666:46667 Maps <> m2 var
R46663:46664 Maps <> m1 var
R46658:46661 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R46671:46675 Coq.Init.Datatypes <> false constr
R46683:46689 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46691:46692 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R46711:46715 Maps T get defax
R46719:46720 Maps <> m2 var
R46717:46717 Maps <> x var
R46699:46703 Maps T get defax
R46707:46708 Maps <> m1 var
R46705:46705 Maps <> x var
R46741:46744 Coq.Init.Datatypes <> None constr
R46747:46750 Coq.Init.Datatypes <> None constr
R46755:46759 Coq.Init.Logic <> False ind
R46775:46778 Coq.Init.Datatypes <> Some constr
R46784:46787 Coq.Init.Datatypes <> Some constr
R46805:46807 Coq.Init.Logic <> :type_scope:x_'='_x not
R46795:46798 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R46808:46812 Coq.Init.Datatypes <> false constr
R46836:46839 Coq.Init.Logic <> True ind
R46954:46958 Maps T get defax
R46960:46960 Maps <> x var
R46970:46973 Coq.Init.Datatypes <> None constr
R46978:46982 Coq.Init.Datatypes <> false constr
R46986:46989 Coq.Init.Datatypes <> Some constr
R46997:47000 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47002:47003 Maps <> a1 var
R46954:46958 Maps T get defax
R46960:46960 Maps <> x var
R46970:46973 Coq.Init.Datatypes <> None constr
R46978:46982 Coq.Init.Datatypes <> false constr
R46986:46989 Coq.Init.Datatypes <> Some constr
R46997:47000 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47002:47003 Maps <> a1 var
R47045:47049 Maps T get defax
R47051:47051 Maps <> x var
R47061:47064 Coq.Init.Datatypes <> None constr
R47069:47073 Coq.Init.Datatypes <> false constr
R47077:47080 Coq.Init.Datatypes <> Some constr
R47088:47091 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47096:47097 Maps <> a2 var
R47045:47049 Maps T get defax
R47051:47051 Maps <> x var
R47061:47064 Coq.Init.Datatypes <> None constr
R47069:47073 Coq.Init.Datatypes <> false constr
R47077:47080 Coq.Init.Datatypes <> Some constr
R47088:47091 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47096:47097 Maps <> a2 var
R47117:47123 Maps Tree_Properties for_all def
R47151:47157 Maps Tree_Properties for_all def
R47117:47123 Maps Tree_Properties for_all def
R47151:47157 Maps Tree_Properties for_all def
R47208:47210 Coq.Init.Logic <> :type_scope:x_'='_x not
R47192:47196 Maps T beq defax
R47198:47201 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47211:47214 Coq.Init.Datatypes <> true constr
R47208:47210 Coq.Init.Logic <> :type_scope:x_'='_x not
R47192:47196 Maps T beq defax
R47198:47201 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47211:47214 Coq.Init.Datatypes <> true constr
R47243:47257 Maps Tree_Properties for_all_correct thm
R47243:47257 Maps Tree_Properties for_all_correct thm
R47273:47285 Maps T beq_correct prfax
R47273:47285 Maps T beq_correct prfax
R47311:47315 Maps T get defax
R47311:47315 Maps T get defax
R47390:47394 Maps T get defax
R47390:47394 Maps T get defax
R47429:47433 Maps T get defax
R47429:47433 Maps T get defax
R47540:47552 Maps Tree_Properties for_all_false thm
R47540:47552 Maps Tree_Properties for_all_false thm
R47644:47648 Maps T get defax
R47644:47648 Maps T get defax
R47676:47688 Maps Tree_Properties for_all_false thm
R47676:47688 Maps Tree_Properties for_all_false thm
R47780:47784 Maps T get defax
R47780:47784 Maps T get defax
R47867:47871 Maps T beq defax
R47873:47876 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47867:47871 Maps T beq defax
R47873:47876 Maps <> Tree_Properties.BOOLEAN_EQUALITY.beqA var
R47909:47921 Maps T beq_correct prfax
R47909:47921 Maps T beq_correct prfax
R47960:47964 Maps T get defax
R47983:47987 Maps T get defax
R47960:47964 Maps T get defax
R47983:47987 Maps T get defax
R47983:47987 Maps T get defax
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R48027:48042 Maps Tree_Properties.BOOLEAN_EQUALITY <> sec
sec 48097:48116 Tree_Properties EXTENSIONAL_EQUALITY
var 48129:48129 Tree_Properties.EXTENSIONAL_EQUALITY A
var 48147:48149 Tree_Properties.EXTENSIONAL_EQUALITY eqA
R48157:48157 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R48152:48152 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
var 48179:48183 Tree_Properties.EXTENSIONAL_EQUALITY eqAeq
R48186:48196 Coq.Classes.RelationClasses <> Equivalence class
R48198:48200 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
def 48215:48219 Tree_Properties Equal
R48229:48231 Maps T t defax
R48233:48233 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R48276:48280 Maps T get defax
R48284:48285 Maps <> m2 var
R48282:48282 Maps <> x var
R48264:48268 Maps T get defax
R48272:48273 Maps <> m1 var
R48270:48270 Maps <> x var
R48310:48313 Coq.Init.Datatypes <> None constr
R48316:48319 Coq.Init.Datatypes <> None constr
R48324:48327 Coq.Init.Logic <> True ind
R48347:48350 Coq.Init.Datatypes <> Some constr
R48356:48359 Coq.Init.Datatypes <> Some constr
R48369:48373 Coq.Classes.Equivalence <> :equiv_scope:x_'==='_x not
R48403:48407 Coq.Init.Logic <> False ind
prf 48433:48442 Tree_Properties Equal_refl
R48455:48459 Maps Tree_Properties Equal def
R48463:48463 Maps <> m var
R48461:48461 Maps <> m var
R48506:48510 Maps T get defax
R48506:48510 Maps T get defax
prf 48550:48558 Tree_Properties Equal_sym
R48590:48594 Maps Tree_Properties Equal def
R48599:48600 Maps <> m1 var
R48596:48597 Maps <> m2 var
R48575:48579 Maps Tree_Properties Equal def
R48584:48585 Maps <> m2 var
R48581:48582 Maps <> m1 var
R48661:48665 Maps T get defax
R48684:48688 Maps T get defax
R48661:48665 Maps T get defax
R48684:48688 Maps T get defax
R48684:48688 Maps T get defax
prf 48739:48749 Tree_Properties Equal_trans
R48799:48803 Maps Tree_Properties Equal def
R48808:48809 Maps <> m3 var
R48805:48806 Maps <> m1 var
R48784:48788 Maps Tree_Properties Equal def
R48793:48794 Maps <> m3 var
R48790:48791 Maps <> m2 var
R48769:48773 Maps Tree_Properties Equal def
R48778:48779 Maps <> m2 var
R48775:48776 Maps <> m1 var
R48879:48883 Maps T get defax
R48902:48906 Maps T get defax
R48938:48942 Maps T get defax
R48879:48883 Maps T get defax
R48902:48906 Maps T get defax
R48902:48906 Maps T get defax
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R48938:48942 Maps T get defax
R0:-1 Maps <> y var
R0:-1 Maps <> y var
inst 49011:49027 Tree_Properties Equal_Equivalence
R49031:49041 Coq.Classes.RelationClasses <> Equivalence class
R49043:49047 Maps Tree_Properties Equal def
R49133:49154 Coq.Classes.RelationClasses <> Equivalence_Transitive meth
R49095:49115 Coq.Classes.RelationClasses <> Equivalence_Symmetric meth
R49056:49076 Coq.Classes.RelationClasses <> Equivalence_Reflexive meth
R49081:49090 Maps Tree_Properties Equal_refl thm
R49120:49128 Maps Tree_Properties Equal_sym thm
R49159:49169 Maps Tree_Properties Equal_trans thm
var 49186:49191 Tree_Properties.EXTENSIONAL_EQUALITY eqAdec
R49194:49198 Coq.Classes.EquivDec <> EqDec class
R49202:49204 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.eqA var
R49200:49200 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
def 49227:49235 Tree_Properties Equal_dec
R49245:49247 Maps T t defax
R49249:49249 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R49245:49247 Maps T t defax
R49249:49249 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R49254:49255 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R49265:49271 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R49281:49282 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R49258:49262 Coq.Classes.Equivalence <> :equiv_scope:x_'==='_x not
R49256:49257 Maps <> m1 var
R49263:49264 Maps <> m2 var
R49274:49278 Coq.Classes.Equivalence <> :equiv_scope:x_'=/='_x not
R49272:49273 Maps <> m1 var
R49279:49280 Maps <> m2 var
R49245:49247 Maps T t defax
R49249:49249 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R49245:49247 Maps T t defax
R49249:49249 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R49295:49299 Maps T beq defax
R49343:49344 Maps <> m2 var
R49340:49341 Maps <> m1 var
R49315:49326 Coqlib <> proj_sumbool def
R49331:49334 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R49329:49330 Maps <> a1 var
R49335:49336 Maps <> a2 var
R49355:49358 Coq.Init.Datatypes <> true constr
R49363:49366 Coq.Init.Specif <> left constr
R49374:49378 Coq.Init.Datatypes <> false constr
R49383:49387 Coq.Init.Specif <> right constr
R49471:49483 Maps T beq_correct prfax
R49471:49483 Maps T beq_correct prfax
R49537:49541 Maps T get defax
R49560:49564 Maps T get defax
R49537:49541 Maps T get defax
R49560:49564 Maps T get defax
R49560:49564 Maps T get defax
R49597:49613 Coqlib <> proj_sumbool_true thm
R49597:49613 Coqlib <> proj_sumbool_true thm
R49706:49708 Coq.Init.Logic <> :type_scope:x_'='_x not
R49656:49660 Maps T beq defax
R49676:49687 Coqlib <> proj_sumbool def
R49692:49695 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R49690:49691 Maps <> a1 var
R49696:49697 Maps <> a2 var
R49709:49712 Coq.Init.Datatypes <> true constr
R49706:49708 Coq.Init.Logic <> :type_scope:x_'='_x not
R49656:49660 Maps T beq defax
R49676:49687 Coqlib <> proj_sumbool def
R49692:49695 Coq.Classes.EquivDec <> :equiv_scope:x_'=='_x not
R49690:49691 Maps <> a1 var
R49696:49697 Maps <> a2 var
R49709:49712 Coq.Init.Datatypes <> true constr
R49724:49736 Maps T beq_correct prfax
R49724:49736 Maps T beq_correct prfax
R49781:49785 Maps T get defax
R49804:49808 Maps T get defax
R49781:49785 Maps T get defax
R49804:49808 Maps T get defax
R49804:49808 Maps T get defax
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R0:-1 Maps <> y var
R49845:49864 Coqlib <> proj_sumbool_is_true thm
R49845:49864 Coqlib <> proj_sumbool_is_true thm
R49882:49886 Coq.Classes.Equivalence <> equiv def
R49889:49898 Coq.Classes.RelationClasses <> complement def
inst 49934:49944 Tree_Properties Equal_EqDec
R49948:49952 Coq.Classes.EquivDec <> EqDec class
R49962:49966 Maps Tree_Properties Equal def
R49955:49957 Maps T t defax
R49959:49959 Maps <> Tree_Properties.EXTENSIONAL_EQUALITY.A var
R49971:49979 Maps Tree_Properties Equal_dec def
R49987:50006 Maps Tree_Properties.EXTENSIONAL_EQUALITY <> sec
R50014:50028 Maps Tree_Properties <> mod
R50059:50073 Maps Tree_Properties <> modtype
R50075:50079 Maps PTree <> modtype
mod 50039:50054 <> PTree_Properties
R50132:50140 Maps PTree get def
not 50120 <> ::x_'!'_x
R50183:50190 Maps PMap get def
not 50170 <> ::x_'!!'_x
