DIGEST 79ffcf9d110e5612ac8a66ae40621247
FValues
R1174:1179 Coqlib <> <> lib
R1197:1199 AST <> <> lib
R1217:1224 Integers <> <> lib
R1242:1247 Floats <> <> lib
def 1262:1266 <> block
R1278:1285 Coq.Numbers.BinNums <> positive ind
def 1299:1306 <> eq_block
R1311:1313 Coqlib <> peq def
ind 1602:1604 <> val
constr 1619:1624 <> Vundef
constr 1635:1638 <> Vint
constr 1656:1660 <> Vlong
constr 1680:1685 <> Vfloat
constr 1705:1711 <> Vsingle
constr 1733:1736 <> Vptr
R1627:1629 Values <> val ind
R1648:1650 Values <> val ind
R1641:1643 Integers <> int syndef
R1672:1674 Values <> val ind
R1663:1667 Integers <> int64 syndef
R1697:1699 Values <> val ind
R1688:1692 Floats <> float def
R1725:1727 Values <> val ind
R1714:1720 Floats <> float32 def
R1755:1757 Values <> val ind
R1748:1750 Integers <> int syndef
R1739:1743 Values <> block def
def 1772:1776 <> Vzero
R1779:1781 Values <> val ind
R1786:1789 Values <> Vint constr
R1791:1798 Integers Int zero def
def 1812:1815 <> Vone
R1818:1820 Values <> val ind
R1825:1828 Values <> Vint constr
R1830:1836 Integers Int one def
def 1850:1854 <> Vmone
R1857:1859 Values <> val ind
R1864:1867 Values <> Vint constr
R1869:1876 Integers Int mone def
def 1891:1895 <> Vtrue
R1898:1900 Values <> val ind
R1905:1908 Values <> Vint constr
R1910:1916 Integers Int one def
def 1930:1935 <> Vfalse
R1938:1940 Values <> val ind
R1945:1948 Values <> Vint constr
R1950:1957 Integers Int zero def
mod 2217:2219 <> Val
def 2234:2235 Val eq
R2243:2245 Values Val val ind
R2249:2249 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2253:2257 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2262:2262 Coq.Init.Specif <> :type_scope:'{'_x_'}'_'+'_'{'_x_'}' not
R2251:2251 Coq.Init.Logic <> :type_scope:x_'='_x not
R2250:2250 Values <> x var
R2252:2252 Values <> y var
R2259:2260 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R2258:2258 Values <> x var
R2261:2261 Values <> y var
R2300:2309 Integers Int eq_dec thm
R2300:2309 Integers Int eq_dec thm
R2320:2331 Integers Int64 eq_dec thm
R2320:2331 Integers Int64 eq_dec thm
R2342:2353 Floats Float eq_dec def
R2342:2353 Floats Float eq_dec def
R2364:2377 Floats Float32 eq_dec def
R2364:2377 Floats Float32 eq_dec def
R2388:2397 Integers Int eq_dec thm
R2388:2397 Integers Int eq_dec thm
R2408:2415 Values Val eq_block def
R2408:2415 Values Val eq_block def
R2441:2442 Values Val eq def
def 2457:2464 Val has_type
R2470:2472 Values Val val ind
R2479:2481 AST <> typ ind
R2505:2505 Values <> t var
R2502:2502 Values <> v var
R2516:2521 Values Val Vundef constr
R2529:2532 Coq.Init.Logic <> True ind
R2538:2541 Values Val Vint constr
R2546:2549 AST <> Tint constr
R2554:2557 Coq.Init.Logic <> True ind
R2563:2567 Values Val Vlong constr
R2572:2576 AST <> Tlong constr
R2581:2584 Coq.Init.Logic <> True ind
R2590:2595 Values Val Vfloat constr
R2600:2605 AST <> Tfloat constr
R2610:2613 Coq.Init.Logic <> True ind
R2619:2625 Values Val Vsingle constr
R2630:2636 AST <> Tsingle constr
R2641:2644 Coq.Init.Logic <> True ind
R2650:2653 Values Val Vptr constr
R2660:2663 AST <> Tint constr
R2668:2671 Coq.Init.Logic <> True ind
R2678:2681 Values Val Vint constr
R2687:2690 Values Val Vptr constr
R2698:2704 Values Val Vsingle constr
R2710:2715 AST <> Tany32 constr
R2720:2723 Coq.Init.Logic <> True ind
R2720:2723 Coq.Init.Logic <> True ind
R2720:2723 Coq.Init.Logic <> True ind
R2732:2737 AST <> Tany64 constr
R2742:2745 Coq.Init.Logic <> True ind
R2759:2763 Coq.Init.Logic <> False ind
def 2782:2794 Val has_type_list
R2801:2804 Coq.Init.Datatypes <> list ind
R2806:2808 Values Val val ind
R2816:2819 Coq.Init.Datatypes <> list ind
R2821:2823 AST <> typ ind
R2860:2861 Values <> tl var
R2856:2857 Values <> vl var
R2872:2874 Coq.Init.Datatypes <> nil constr
R2877:2879 Coq.Init.Datatypes <> nil constr
R2884:2887 Coq.Init.Logic <> True ind
R2895:2898 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2905:2908 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R2929:2932 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R2915:2922 Values Val has_type def
R2933:2945 Values <> has_type_list def
R2965:2969 Coq.Init.Logic <> False ind
def 2990:3000 Val has_opttype
R3006:3008 Values Val val ind
R3016:3021 Coq.Init.Datatypes <> option ind
R3023:3025 AST <> typ ind
R3046:3047 Values <> ot var
R3058:3061 Coq.Init.Datatypes <> None constr
R3067:3069 Coq.Init.Logic <> :type_scope:x_'='_x not
R3066:3066 Values <> v var
R3070:3075 Values Val Vundef constr
R3081:3084 Coq.Init.Datatypes <> Some constr
R3091:3098 Values Val has_type def
R3100:3100 Values <> v var
prf 3118:3128 Val has_subtype
R3197:3204 Values Val has_type def
R3208:3210 Values <> ty2 var
R3206:3206 Values <> v var
R3179:3186 Values Val has_type def
R3190:3192 Values <> ty1 var
R3188:3188 Values <> v var
R3168:3170 Coq.Init.Logic <> :type_scope:x_'='_x not
R3153:3159 AST <> subtype def
R3165:3167 Values <> ty2 var
R3161:3163 Values <> ty1 var
R3171:3174 Coq.Init.Datatypes <> true constr
R3316:3323 Values Val has_type def
prf 3361:3376 Val has_subtype_list
R3462:3474 Values Val has_type_list def
R3479:3482 Values <> tyl2 var
R3476:3477 Values <> vl var
R3437:3449 Values Val has_type_list def
R3454:3457 Values <> tyl1 var
R3451:3452 Values <> vl var
R3426:3428 Coq.Init.Logic <> :type_scope:x_'='_x not
R3404:3415 AST <> subtype_list def
R3422:3425 Values <> tyl2 var
R3417:3420 Values <> tyl1 var
R3429:3432 Coq.Init.Datatypes <> true constr
R3656:3666 Values Val has_subtype thm
R3656:3666 Values Val has_subtype thm
ind 3889:3899 Val bool_of_val
constr 3929:3943 Val bool_of_val_int
constr 4014:4028 Val bool_of_val_ptr
R3909:3912 Coq.Init.Datatypes <> bool ind
R3902:3904 Values Val val ind
R3962:3972 Values <> bool_of_val ind
R3984:3987 Coq.Init.Datatypes <> negb def
R3990:3995 Integers Int eq def
R3999:4006 Integers Int zero def
R3997:3997 Values <> n var
R3975:3978 Values Val Vint constr
R3980:3980 Values <> n var
R4051:4061 Values <> bool_of_val ind
R4076:4079 Coq.Init.Datatypes <> true constr
R4064:4067 Values Val Vptr constr
R4071:4073 Values <> ofs var
R4069:4069 Values <> b var
def 4124:4126 Val neg
R4132:4134 Values Val val ind
R4139:4141 Values Val val ind
R4154:4154 Values <> v var
R4165:4168 Values Val Vint constr
R4175:4178 Values Val Vint constr
R4181:4187 Integers Int neg def
R4201:4206 Values Val Vundef constr
def 4227:4230 Val negf
R4236:4238 Values Val val ind
R4243:4245 Values Val val ind
R4258:4258 Values <> v var
R4269:4274 Values Val Vfloat constr
R4281:4286 Values Val Vfloat constr
R4289:4297 Floats Float neg def
R4311:4316 Values Val Vundef constr
def 4337:4340 Val absf
R4346:4348 Values Val val ind
R4353:4355 Values Val val ind
R4368:4368 Values <> v var
R4379:4384 Values Val Vfloat constr
R4391:4396 Values Val Vfloat constr
R4399:4407 Floats Float abs def
R4421:4426 Values Val Vundef constr
def 4447:4451 Val negfs
R4457:4459 Values Val val ind
R4464:4466 Values Val val ind
R4479:4479 Values <> v var
R4490:4496 Values Val Vsingle constr
R4503:4509 Values Val Vsingle constr
R4512:4522 Floats Float32 neg def
R4536:4541 Values Val Vundef constr
def 4562:4566 Val absfs
R4572:4574 Values Val val ind
R4579:4581 Values Val val ind
R4594:4594 Values <> v var
R4605:4611 Values Val Vsingle constr
R4618:4624 Values Val Vsingle constr
R4627:4637 Floats Float32 abs def
R4651:4656 Values Val Vundef constr
def 4677:4685 Val maketotal
R4692:4697 Coq.Init.Datatypes <> option ind
R4699:4701 Values Val val ind
R4706:4708 Values Val val ind
R4721:4722 Values <> ov var
R4729:4732 Coq.Init.Datatypes <> Some constr
R4743:4746 Coq.Init.Datatypes <> None constr
R4751:4756 Values Val Vundef constr
def 4775:4784 Val intoffloat
R4790:4792 Values Val val ind
R4797:4802 Coq.Init.Datatypes <> option ind
R4804:4806 Values Val val ind
R4819:4819 Values <> v var
R4830:4835 Values Val Vfloat constr
R4842:4851 Coqlib <> option_map def
R4859:4870 Floats Float to_int def
R4853:4856 Values Val Vint constr
R4884:4887 Coq.Init.Datatypes <> None constr
def 4908:4918 Val intuoffloat
R4924:4926 Values Val val ind
R4931:4936 Coq.Init.Datatypes <> option ind
R4938:4940 Values Val val ind
R4953:4953 Values <> v var
R4964:4969 Values Val Vfloat constr
R4976:4985 Coqlib <> option_map def
R4993:5005 Floats Float to_intu def
R4987:4990 Values Val Vint constr
R5019:5022 Coq.Init.Datatypes <> None constr
def 5043:5052 Val floatofint
R5058:5060 Values Val val ind
R5065:5070 Coq.Init.Datatypes <> option ind
R5072:5074 Values Val val ind
R5087:5087 Values <> v var
R5098:5101 Values Val Vint constr
R5108:5111 Coq.Init.Datatypes <> Some constr
R5114:5119 Values Val Vfloat constr
R5122:5133 Floats Float of_int def
R5148:5151 Coq.Init.Datatypes <> None constr
def 5172:5182 Val floatofintu
R5188:5190 Values Val val ind
R5195:5200 Coq.Init.Datatypes <> option ind
R5202:5204 Values Val val ind
R5217:5217 Values <> v var
R5228:5231 Values Val Vint constr
R5238:5241 Coq.Init.Datatypes <> Some constr
R5244:5249 Values Val Vfloat constr
R5252:5264 Floats Float of_intu def
R5279:5282 Coq.Init.Datatypes <> None constr
def 5303:5313 Val intofsingle
R5319:5321 Values Val val ind
R5326:5331 Coq.Init.Datatypes <> option ind
R5333:5335 Values Val val ind
R5348:5348 Values <> v var
R5359:5365 Values Val Vsingle constr
R5372:5381 Coqlib <> option_map def
R5389:5402 Floats Float32 to_int def
R5383:5386 Values Val Vint constr
R5416:5419 Coq.Init.Datatypes <> None constr
def 5440:5451 Val intuofsingle
R5457:5459 Values Val val ind
R5464:5469 Coq.Init.Datatypes <> option ind
R5471:5473 Values Val val ind
R5486:5486 Values <> v var
R5497:5503 Values Val Vsingle constr
R5510:5519 Coqlib <> option_map def
R5527:5541 Floats Float32 to_intu def
R5521:5524 Values Val Vint constr
R5555:5558 Coq.Init.Datatypes <> None constr
def 5579:5589 Val singleofint
R5595:5597 Values Val val ind
R5602:5607 Coq.Init.Datatypes <> option ind
R5609:5611 Values Val val ind
R5624:5624 Values <> v var
R5635:5638 Values Val Vint constr
R5645:5648 Coq.Init.Datatypes <> Some constr
R5651:5657 Values Val Vsingle constr
R5660:5673 Floats Float32 of_int def
R5688:5691 Coq.Init.Datatypes <> None constr
def 5712:5723 Val singleofintu
R5729:5731 Values Val val ind
R5736:5741 Coq.Init.Datatypes <> option ind
R5743:5745 Values Val val ind
R5758:5758 Values <> v var
R5769:5772 Values Val Vint constr
R5779:5782 Coq.Init.Datatypes <> Some constr
R5785:5791 Values Val Vsingle constr
R5794:5808 Floats Float32 of_intu def
R5823:5826 Coq.Init.Datatypes <> None constr
def 5847:5852 Val negint
R5858:5860 Values Val val ind
R5865:5867 Values Val val ind
R5880:5880 Values <> v var
R5891:5894 Values Val Vint constr
R5901:5904 Values Val Vint constr
R5907:5913 Integers Int neg def
R5927:5932 Values Val Vundef constr
def 5953:5958 Val notint
R5964:5966 Values Val val ind
R5971:5973 Values Val val ind
R5986:5986 Values <> v var
R5997:6000 Values Val Vint constr
R6007:6010 Values Val Vint constr
R6013:6019 Integers Int not def
R6033:6038 Values Val Vundef constr
def 6059:6065 Val of_bool
R6071:6074 Coq.Init.Datatypes <> bool ind
R6078:6080 Values Val val ind
R6088:6088 Values <> b var
R6106:6111 Values Val Vfalse def
R6095:6099 Values Val Vtrue def
def 6126:6132 Val boolval
R6138:6140 Values Val val ind
R6145:6147 Values Val val ind
R6160:6160 Values <> v var
R6171:6174 Values Val Vint constr
R6181:6187 Values Val of_bool def
R6190:6193 Coq.Init.Datatypes <> negb def
R6196:6201 Integers Int eq def
R6205:6212 Integers Int zero def
R6220:6223 Values Val Vptr constr
R6234:6238 Values Val Vtrue def
R6249:6254 Values Val Vundef constr
def 6275:6281 Val notbool
R6287:6289 Values Val val ind
R6294:6296 Values Val val ind
R6309:6309 Values <> v var
R6320:6323 Values Val Vint constr
R6330:6336 Values Val of_bool def
R6339:6344 Integers Int eq def
R6348:6355 Integers Int zero def
R6362:6365 Values Val Vptr constr
R6376:6381 Values Val Vfalse def
R6392:6397 Values Val Vundef constr
def 6418:6425 Val zero_ext
R6435:6435 Coq.Numbers.BinNums <> Z ind
R6442:6444 Values Val val ind
R6449:6451 Values Val val ind
R6464:6464 Values <> v var
R6475:6478 Values Val Vint constr
R6485:6488 Values Val Vint constr
R6490:6501 Integers Int zero_ext def
R6503:6507 Values <> nbits var
R6521:6526 Values Val Vundef constr
def 6547:6554 Val sign_ext
R6564:6564 Coq.Numbers.BinNums <> Z ind
R6571:6573 Values Val val ind
R6578:6580 Values Val val ind
R6593:6593 Values <> v var
R6604:6607 Values Val Vint constr
R6614:6617 Values Val Vint constr
R6619:6630 Integers Int sign_ext def
R6632:6636 Values <> nbits var
R6650:6655 Values Val Vundef constr
def 6676:6688 Val singleoffloat
R6694:6696 Values Val val ind
R6701:6703 Values Val val ind
R6716:6716 Values <> v var
R6727:6732 Values Val Vfloat constr
R6739:6745 Values Val Vsingle constr
R6748:6762 Floats Float to_single def
R6776:6781 Values Val Vundef constr
def 6802:6814 Val floatofsingle
R6820:6822 Values Val val ind
R6827:6829 Values Val val ind
R6842:6842 Values <> v var
R6853:6859 Values Val Vsingle constr
R6866:6871 Values Val Vfloat constr
R6874:6888 Floats Float of_single def
R6902:6907 Values Val Vundef constr
def 6928:6930 Val add
R6940:6942 Values Val val ind
R6946:6948 Values Val val ind
R6965:6966 Values <> v2 var
R6961:6962 Values <> v1 var
R6977:6980 Values Val Vint constr
R6986:6989 Values Val Vint constr
R6997:7000 Values Val Vint constr
R7002:7008 Integers Int add def
R7021:7024 Values Val Vptr constr
R7035:7038 Values Val Vint constr
R7046:7049 Values Val Vptr constr
R7055:7061 Integers Int add def
R7076:7079 Values Val Vint constr
R7085:7088 Values Val Vptr constr
R7101:7104 Values Val Vptr constr
R7110:7116 Integers Int add def
R7139:7144 Values Val Vundef constr
def 7165:7167 Val sub
R7177:7179 Values Val val ind
R7183:7185 Values Val val ind
R7202:7203 Values <> v2 var
R7198:7199 Values <> v1 var
R7214:7217 Values Val Vint constr
R7223:7226 Values Val Vint constr
R7234:7237 Values Val Vint constr
R7239:7245 Integers Int sub def
R7258:7261 Values Val Vptr constr
R7272:7275 Values Val Vint constr
R7283:7286 Values Val Vptr constr
R7292:7298 Integers Int sub def
R7313:7316 Values Val Vptr constr
R7327:7330 Values Val Vptr constr
R7352:7359 Values Val eq_block def
R7401:7406 Values Val Vundef constr
R7372:7375 Values Val Vint constr
R7377:7383 Integers Int sub def
R7420:7425 Values Val Vundef constr
def 7446:7448 Val mul
R7458:7460 Values Val val ind
R7464:7466 Values Val val ind
R7483:7484 Values <> v2 var
R7479:7480 Values <> v1 var
R7495:7498 Values Val Vint constr
R7504:7507 Values Val Vint constr
R7515:7518 Values Val Vint constr
R7520:7526 Integers Int mul def
R7547:7552 Values Val Vundef constr
def 7573:7577 Val mulhs
R7587:7589 Values Val val ind
R7593:7595 Values Val val ind
R7612:7613 Values <> v2 var
R7608:7609 Values <> v1 var
R7624:7627 Values Val Vint constr
R7633:7636 Values Val Vint constr
R7644:7647 Values Val Vint constr
R7649:7657 Integers Int mulhs def
R7678:7683 Values Val Vundef constr
def 7704:7708 Val mulhu
R7718:7720 Values Val val ind
R7724:7726 Values Val val ind
R7743:7744 Values <> v2 var
R7739:7740 Values <> v1 var
R7755:7758 Values Val Vint constr
R7764:7767 Values Val Vint constr
R7775:7778 Values Val Vint constr
R7780:7788 Integers Int mulhu def
R7809:7814 Values Val Vundef constr
def 7835:7838 Val divs
R7848:7850 Values Val val ind
R7854:7859 Coq.Init.Datatypes <> option ind
R7861:7863 Values Val val ind
R7880:7881 Values <> v2 var
R7876:7877 Values <> v1 var
R7892:7895 Values Val Vint constr
R7901:7904 Values Val Vint constr
R7939:7948 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R7921:7926 Integers Int eq def
R7931:7938 Integers Int zero def
R7984:7987 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R7949:7954 Integers Int eq def
R7960:7967 Integers Int repr def
R7969:7982 Integers Int min_signed def
R7988:7993 Integers Int eq def
R7998:8005 Integers Int mone def
R8034:8037 Coq.Init.Datatypes <> Some constr
R8039:8042 Values Val Vint constr
R8044:8051 Integers Int divs def
R8018:8021 Coq.Init.Datatypes <> None constr
R8073:8076 Coq.Init.Datatypes <> None constr
def 8097:8100 Val mods
R8110:8112 Values Val val ind
R8116:8121 Coq.Init.Datatypes <> option ind
R8123:8125 Values Val val ind
R8142:8143 Values <> v2 var
R8138:8139 Values <> v1 var
R8154:8157 Values Val Vint constr
R8163:8166 Values Val Vint constr
R8201:8210 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R8183:8188 Integers Int eq def
R8193:8200 Integers Int zero def
R8246:8249 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R8211:8216 Integers Int eq def
R8222:8229 Integers Int repr def
R8231:8244 Integers Int min_signed def
R8250:8255 Integers Int eq def
R8260:8267 Integers Int mone def
R8296:8299 Coq.Init.Datatypes <> Some constr
R8301:8304 Values Val Vint constr
R8306:8313 Integers Int mods def
R8280:8283 Coq.Init.Datatypes <> None constr
R8335:8338 Coq.Init.Datatypes <> None constr
def 8359:8362 Val divu
R8372:8374 Values Val val ind
R8378:8383 Coq.Init.Datatypes <> option ind
R8385:8387 Values Val val ind
R8404:8405 Values <> v2 var
R8400:8401 Values <> v1 var
R8416:8419 Values Val Vint constr
R8425:8428 Values Val Vint constr
R8445:8450 Integers Int eq def
R8455:8462 Integers Int zero def
R8479:8482 Coq.Init.Datatypes <> Some constr
R8484:8487 Values Val Vint constr
R8489:8496 Integers Int divu def
R8469:8472 Coq.Init.Datatypes <> None constr
R8518:8521 Coq.Init.Datatypes <> None constr
def 8542:8545 Val modu
R8555:8557 Values Val val ind
R8561:8566 Coq.Init.Datatypes <> option ind
R8568:8570 Values Val val ind
R8587:8588 Values <> v2 var
R8583:8584 Values <> v1 var
R8599:8602 Values Val Vint constr
R8608:8611 Values Val Vint constr
R8628:8633 Integers Int eq def
R8638:8645 Integers Int zero def
R8662:8665 Coq.Init.Datatypes <> Some constr
R8667:8670 Values Val Vint constr
R8672:8679 Integers Int modu def
R8652:8655 Coq.Init.Datatypes <> None constr
R8701:8704 Coq.Init.Datatypes <> None constr
def 8725:8733 Val add_carry
R8747:8749 Values Val val ind
R8753:8755 Values Val val ind
R8776:8778 Values <> cin var
R8772:8773 Values <> v2 var
R8768:8769 Values <> v1 var
R8789:8792 Values Val Vint constr
R8798:8801 Values Val Vint constr
R8807:8810 Values Val Vint constr
R8817:8820 Values Val Vint constr
R8822:8834 Integers Int add_carry def
R8860:8865 Values Val Vundef constr
def 8886:8897 Val sub_overflow
R8907:8909 Values Val val ind
R8914:8916 Values Val val ind
R8933:8934 Values <> v2 var
R8929:8930 Values <> v1 var
R8945:8948 Values Val Vint constr
R8954:8957 Values Val Vint constr
R8965:8968 Values Val Vint constr
R8970:8985 Integers Int sub_overflow def
R8993:9000 Integers Int zero def
R9015:9020 Values Val Vundef constr
def 9041:9048 Val negative
R9054:9056 Values Val val ind
R9061:9063 Values Val val ind
R9076:9076 Values <> v var
R9087:9090 Values Val Vint constr
R9097:9100 Values Val Vint constr
R9103:9114 Integers Int negative def
R9128:9133 Values Val Vundef constr
def 9154:9156 Val and
R9166:9168 Values Val val ind
R9172:9174 Values Val val ind
R9191:9192 Values <> v2 var
R9187:9188 Values <> v1 var
R9203:9206 Values Val Vint constr
R9212:9215 Values Val Vint constr
R9223:9226 Values Val Vint constr
R9228:9234 Integers Int and def
R9255:9260 Values Val Vundef constr
def 9281:9282 Val or
R9292:9294 Values Val val ind
R9298:9300 Values Val val ind
R9317:9318 Values <> v2 var
R9313:9314 Values <> v1 var
R9329:9332 Values Val Vint constr
R9338:9341 Values Val Vint constr
R9349:9352 Values Val Vint constr
R9354:9359 Integers Int or def
R9380:9385 Values Val Vundef constr
def 9406:9408 Val xor
R9418:9420 Values Val val ind
R9424:9426 Values Val val ind
R9443:9444 Values <> v2 var
R9439:9440 Values <> v1 var
R9455:9458 Values Val Vint constr
R9464:9467 Values Val Vint constr
R9475:9478 Values Val Vint constr
R9480:9486 Integers Int xor def
R9507:9512 Values Val Vundef constr
def 9533:9535 Val shl
R9545:9547 Values Val val ind
R9551:9553 Values Val val ind
R9570:9571 Values <> v2 var
R9566:9567 Values <> v1 var
R9582:9585 Values Val Vint constr
R9591:9594 Values Val Vint constr
R9610:9616 Integers Int ltu def
R9621:9633 Integers Int iwordsize def
R9675:9680 Values Val Vundef constr
R9645:9648 Values Val Vint constr
R9650:9656 Integers Int shl def
R9694:9699 Values Val Vundef constr
def 9720:9722 Val shr
R9732:9734 Values Val val ind
R9738:9740 Values Val val ind
R9757:9758 Values <> v2 var
R9753:9754 Values <> v1 var
R9769:9772 Values Val Vint constr
R9778:9781 Values Val Vint constr
R9797:9803 Integers Int ltu def
R9808:9820 Integers Int iwordsize def
R9862:9867 Values Val Vundef constr
R9832:9835 Values Val Vint constr
R9837:9843 Integers Int shr def
R9881:9886 Values Val Vundef constr
def 9907:9915 Val shr_carry
R9925:9927 Values Val val ind
R9931:9933 Values Val val ind
R9950:9951 Values <> v2 var
R9946:9947 Values <> v1 var
R9962:9965 Values Val Vint constr
R9971:9974 Values Val Vint constr
R9990:9996 Integers Int ltu def
R10001:10013 Integers Int iwordsize def
R10061:10066 Values Val Vundef constr
R10025:10028 Values Val Vint constr
R10030:10042 Integers Int shr_carry def
R10080:10085 Values Val Vundef constr
def 10106:10109 Val shrx
R10119:10121 Values Val val ind
R10125:10130 Coq.Init.Datatypes <> option ind
R10132:10134 Values Val val ind
R10151:10152 Values <> v2 var
R10147:10148 Values <> v1 var
R10163:10166 Values Val Vint constr
R10172:10175 Values Val Vint constr
R10191:10197 Integers Int ltu def
R10203:10210 Integers Int repr def
R10263:10266 Coq.Init.Datatypes <> None constr
R10226:10229 Coq.Init.Datatypes <> Some constr
R10231:10234 Values Val Vint constr
R10236:10243 Integers Int shrx def
R10280:10283 Coq.Init.Datatypes <> None constr
def 10304:10307 Val shru
R10317:10319 Values Val val ind
R10323:10325 Values Val val ind
R10342:10343 Values <> v2 var
R10338:10339 Values <> v1 var
R10354:10357 Values Val Vint constr
R10363:10366 Values Val Vint constr
R10382:10388 Integers Int ltu def
R10393:10405 Integers Int iwordsize def
R10448:10453 Values Val Vundef constr
R10417:10420 Values Val Vint constr
R10422:10429 Integers Int shru def
R10467:10472 Values Val Vundef constr
def 10493:10496 Val rolm
R10502:10504 Values Val val ind
R10521:10523 Integers <> int syndef
R10527:10529 Values Val val ind
R10542:10542 Values <> v var
R10553:10556 Values Val Vint constr
R10563:10566 Values Val Vint constr
R10568:10575 Integers Int rolm def
R10586:10589 Values <> mask var
R10579:10584 Values <> amount var
R10601:10606 Values Val Vundef constr
def 10627:10629 Val ror
R10639:10641 Values Val val ind
R10645:10647 Values Val val ind
R10664:10665 Values <> v2 var
R10660:10661 Values <> v1 var
R10676:10679 Values Val Vint constr
R10685:10688 Values Val Vint constr
R10704:10710 Integers Int ltu def
R10715:10727 Integers Int iwordsize def
R10769:10774 Values Val Vundef constr
R10739:10742 Values Val Vint constr
R10744:10750 Integers Int ror def
R10788:10793 Values Val Vundef constr
def 10814:10817 Val addf
R10827:10829 Values Val val ind
R10833:10835 Values Val val ind
R10852:10853 Values <> v2 var
R10848:10849 Values <> v1 var
R10864:10869 Values Val Vfloat constr
R10875:10880 Values Val Vfloat constr
R10888:10893 Values Val Vfloat constr
R10895:10903 Floats Float add def
R10924:10929 Values Val Vundef constr
def 10950:10953 Val subf
R10963:10965 Values Val val ind
R10969:10971 Values Val val ind
R10988:10989 Values <> v2 var
R10984:10985 Values <> v1 var
R11000:11005 Values Val Vfloat constr
R11011:11016 Values Val Vfloat constr
R11024:11029 Values Val Vfloat constr
R11031:11039 Floats Float sub def
R11060:11065 Values Val Vundef constr
def 11086:11089 Val mulf
R11099:11101 Values Val val ind
R11105:11107 Values Val val ind
R11124:11125 Values <> v2 var
R11120:11121 Values <> v1 var
R11136:11141 Values Val Vfloat constr
R11147:11152 Values Val Vfloat constr
R11160:11165 Values Val Vfloat constr
R11167:11175 Floats Float mul def
R11196:11201 Values Val Vundef constr
def 11222:11225 Val divf
R11235:11237 Values Val val ind
R11241:11243 Values Val val ind
R11260:11261 Values <> v2 var
R11256:11257 Values <> v1 var
R11272:11277 Values Val Vfloat constr
R11283:11288 Values Val Vfloat constr
R11296:11301 Values Val Vfloat constr
R11303:11311 Floats Float div def
R11332:11337 Values Val Vundef constr
def 11358:11369 Val floatofwords
R11379:11381 Values Val val ind
R11386:11388 Values Val val ind
R11405:11406 Values <> v2 var
R11401:11402 Values <> v1 var
R11417:11420 Values Val Vint constr
R11426:11429 Values Val Vint constr
R11437:11442 Values Val Vfloat constr
R11445:11460 Floats Float from_words def
R11481:11486 Values Val Vundef constr
def 11507:11511 Val addfs
R11521:11523 Values Val val ind
R11527:11529 Values Val val ind
R11546:11547 Values <> v2 var
R11542:11543 Values <> v1 var
R11558:11564 Values Val Vsingle constr
R11570:11576 Values Val Vsingle constr
R11584:11590 Values Val Vsingle constr
R11592:11602 Floats Float32 add def
R11623:11628 Values Val Vundef constr
def 11649:11653 Val subfs
R11663:11665 Values Val val ind
R11669:11671 Values Val val ind
R11688:11689 Values <> v2 var
R11684:11685 Values <> v1 var
R11700:11706 Values Val Vsingle constr
R11712:11718 Values Val Vsingle constr
R11726:11732 Values Val Vsingle constr
R11734:11744 Floats Float32 sub def
R11765:11770 Values Val Vundef constr
def 11791:11795 Val mulfs
R11805:11807 Values Val val ind
R11811:11813 Values Val val ind
R11830:11831 Values <> v2 var
R11826:11827 Values <> v1 var
R11842:11848 Values Val Vsingle constr
R11854:11860 Values Val Vsingle constr
R11868:11874 Values Val Vsingle constr
R11876:11886 Floats Float32 mul def
R11907:11912 Values Val Vundef constr
def 11933:11937 Val divfs
R11947:11949 Values Val val ind
R11953:11955 Values Val val ind
R11972:11973 Values <> v2 var
R11968:11969 Values <> v1 var
R11984:11990 Values Val Vsingle constr
R11996:12002 Values Val Vsingle constr
R12010:12016 Values Val Vsingle constr
R12018:12028 Floats Float32 div def
R12049:12054 Values Val Vundef constr
def 12113:12123 Val longofwords
R12133:12135 Values Val val ind
R12140:12142 Values Val val ind
R12159:12160 Values <> v2 var
R12155:12156 Values <> v1 var
R12171:12174 Values Val Vint constr
R12180:12183 Values Val Vint constr
R12191:12195 Values Val Vlong constr
R12198:12210 Integers Int64 ofwords def
R12231:12236 Values Val Vundef constr
def 12257:12262 Val loword
R12268:12270 Values Val val ind
R12275:12277 Values Val val ind
R12290:12290 Values <> v var
R12301:12305 Values Val Vlong constr
R12313:12316 Values Val Vint constr
R12319:12330 Integers Int64 loword def
R12344:12349 Values Val Vundef constr
def 12370:12375 Val hiword
R12381:12383 Values Val val ind
R12388:12390 Values Val val ind
R12403:12403 Values <> v var
R12414:12418 Values Val Vlong constr
R12426:12429 Values Val Vint constr
R12432:12443 Integers Int64 hiword def
R12457:12462 Values Val Vundef constr
def 12483:12486 Val negl
R12492:12494 Values Val val ind
R12499:12501 Values Val val ind
R12514:12514 Values <> v var
R12525:12529 Values Val Vlong constr
R12536:12540 Values Val Vlong constr
R12543:12551 Integers Int64 neg def
R12565:12570 Values Val Vundef constr
def 12591:12594 Val notl
R12600:12602 Values Val val ind
R12607:12609 Values Val val ind
R12622:12622 Values <> v var
R12633:12637 Values Val Vlong constr
R12644:12648 Values Val Vlong constr
R12651:12659 Integers Int64 not def
R12673:12678 Values Val Vundef constr
def 12699:12707 Val longofint
R12713:12715 Values Val val ind
R12720:12722 Values Val val ind
R12735:12735 Values <> v var
R12746:12749 Values Val Vint constr
R12756:12760 Values Val Vlong constr
R12763:12772 Integers Int64 repr def
R12775:12784 Integers Int signed def
R12799:12804 Values Val Vundef constr
def 12825:12834 Val longofintu
R12840:12842 Values Val val ind
R12847:12849 Values Val val ind
R12862:12862 Values <> v var
R12873:12876 Values Val Vint constr
R12883:12887 Values Val Vlong constr
R12890:12899 Integers Int64 repr def
R12902:12913 Integers Int unsigned def
R12928:12933 Values Val Vundef constr
def 12954:12964 Val longoffloat
R12970:12972 Values Val val ind
R12977:12982 Coq.Init.Datatypes <> option ind
R12984:12986 Values Val val ind
R12999:12999 Values <> v var
R13010:13015 Values Val Vfloat constr
R13022:13031 Coqlib <> option_map def
R13040:13052 Floats Float to_long def
R13033:13037 Values Val Vlong constr
R13066:13069 Coq.Init.Datatypes <> None constr
def 13090:13101 Val longuoffloat
R13107:13109 Values Val val ind
R13114:13119 Coq.Init.Datatypes <> option ind
R13121:13123 Values Val val ind
R13136:13136 Values <> v var
R13147:13152 Values Val Vfloat constr
R13159:13168 Coqlib <> option_map def
R13177:13190 Floats Float to_longu def
R13170:13174 Values Val Vlong constr
R13204:13207 Coq.Init.Datatypes <> None constr
def 13228:13239 Val longofsingle
R13245:13247 Values Val val ind
R13252:13257 Coq.Init.Datatypes <> option ind
R13259:13261 Values Val val ind
R13274:13274 Values <> v var
R13285:13291 Values Val Vsingle constr
R13298:13307 Coqlib <> option_map def
R13316:13330 Floats Float32 to_long def
R13309:13313 Values Val Vlong constr
R13344:13347 Coq.Init.Datatypes <> None constr
def 13368:13380 Val longuofsingle
R13386:13388 Values Val val ind
R13393:13398 Coq.Init.Datatypes <> option ind
R13400:13402 Values Val val ind
R13415:13415 Values <> v var
R13426:13432 Values Val Vsingle constr
R13439:13448 Coqlib <> option_map def
R13457:13472 Floats Float32 to_longu def
R13450:13454 Values Val Vlong constr
R13486:13489 Coq.Init.Datatypes <> None constr
def 13510:13520 Val floatoflong
R13526:13528 Values Val val ind
R13533:13538 Coq.Init.Datatypes <> option ind
R13540:13542 Values Val val ind
R13555:13555 Values <> v var
R13566:13570 Values Val Vlong constr
R13577:13580 Coq.Init.Datatypes <> Some constr
R13583:13588 Values Val Vfloat constr
R13591:13603 Floats Float of_long def
R13618:13621 Coq.Init.Datatypes <> None constr
def 13642:13653 Val floatoflongu
R13659:13661 Values Val val ind
R13666:13671 Coq.Init.Datatypes <> option ind
R13673:13675 Values Val val ind
R13688:13688 Values <> v var
R13699:13703 Values Val Vlong constr
R13710:13713 Coq.Init.Datatypes <> Some constr
R13716:13721 Values Val Vfloat constr
R13724:13737 Floats Float of_longu def
R13752:13755 Coq.Init.Datatypes <> None constr
def 13776:13787 Val singleoflong
R13793:13795 Values Val val ind
R13800:13805 Coq.Init.Datatypes <> option ind
R13807:13809 Values Val val ind
R13822:13822 Values <> v var
R13833:13837 Values Val Vlong constr
R13844:13847 Coq.Init.Datatypes <> Some constr
R13850:13856 Values Val Vsingle constr
R13859:13873 Floats Float32 of_long def
R13888:13891 Coq.Init.Datatypes <> None constr
def 13912:13924 Val singleoflongu
R13930:13932 Values Val val ind
R13937:13942 Coq.Init.Datatypes <> option ind
R13944:13946 Values Val val ind
R13959:13959 Values <> v var
R13970:13974 Values Val Vlong constr
R13981:13984 Coq.Init.Datatypes <> Some constr
R13987:13993 Values Val Vsingle constr
R13996:14011 Floats Float32 of_longu def
R14026:14029 Coq.Init.Datatypes <> None constr
def 14050:14053 Val addl
R14063:14065 Values Val val ind
R14069:14071 Values Val val ind
R14088:14089 Values <> v2 var
R14084:14085 Values <> v1 var
R14100:14104 Values Val Vlong constr
R14110:14114 Values Val Vlong constr
R14122:14126 Values Val Vlong constr
R14128:14136 Integers Int64 add def
R14157:14162 Values Val Vundef constr
def 14183:14186 Val subl
R14196:14198 Values Val val ind
R14202:14204 Values Val val ind
R14221:14222 Values <> v2 var
R14217:14218 Values <> v1 var
R14233:14237 Values Val Vlong constr
R14243:14247 Values Val Vlong constr
R14255:14259 Values Val Vlong constr
R14261:14269 Integers Int64 sub def
R14290:14295 Values Val Vundef constr
def 14316:14319 Val mull
R14329:14331 Values Val val ind
R14335:14337 Values Val val ind
R14354:14355 Values <> v2 var
R14350:14351 Values <> v1 var
R14366:14370 Values Val Vlong constr
R14376:14380 Values Val Vlong constr
R14388:14392 Values Val Vlong constr
R14394:14402 Integers Int64 mul def
R14423:14428 Values Val Vundef constr
def 14449:14453 Val mull'
R14463:14465 Values Val val ind
R14469:14471 Values Val val ind
R14488:14489 Values <> v2 var
R14484:14485 Values <> v1 var
R14500:14503 Values Val Vint constr
R14509:14512 Values Val Vint constr
R14520:14524 Values Val Vlong constr
R14526:14535 Integers Int64 mul' def
R14556:14561 Values Val Vundef constr
def 14582:14586 Val divls
R14596:14598 Values Val val ind
R14602:14607 Coq.Init.Datatypes <> option ind
R14609:14611 Values Val val ind
R14628:14629 Values <> v2 var
R14624:14625 Values <> v1 var
R14640:14644 Values Val Vlong constr
R14650:14654 Values Val Vlong constr
R14693:14702 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R14671:14678 Integers Int64 eq def
R14683:14692 Integers Int64 zero def
R14744:14747 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R14703:14710 Integers Int64 eq def
R14716:14725 Integers Int64 repr def
R14727:14742 Integers Int64 min_signed def
R14748:14755 Integers Int64 eq def
R14760:14769 Integers Int64 mone def
R14798:14801 Coq.Init.Datatypes <> Some constr
R14803:14807 Values Val Vlong constr
R14809:14818 Integers Int64 divs def
R14782:14785 Coq.Init.Datatypes <> None constr
R14840:14843 Coq.Init.Datatypes <> None constr
def 14864:14868 Val modls
R14878:14880 Values Val val ind
R14884:14889 Coq.Init.Datatypes <> option ind
R14891:14893 Values Val val ind
R14910:14911 Values <> v2 var
R14906:14907 Values <> v1 var
R14922:14926 Values Val Vlong constr
R14932:14936 Values Val Vlong constr
R14975:14984 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R14953:14960 Integers Int64 eq def
R14965:14974 Integers Int64 zero def
R15026:15029 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R14985:14992 Integers Int64 eq def
R14998:15007 Integers Int64 repr def
R15009:15024 Integers Int64 min_signed def
R15030:15037 Integers Int64 eq def
R15042:15051 Integers Int64 mone def
R15080:15083 Coq.Init.Datatypes <> Some constr
R15085:15089 Values Val Vlong constr
R15091:15100 Integers Int64 mods def
R15064:15067 Coq.Init.Datatypes <> None constr
R15122:15125 Coq.Init.Datatypes <> None constr
def 15146:15150 Val divlu
R15160:15162 Values Val val ind
R15166:15171 Coq.Init.Datatypes <> option ind
R15173:15175 Values Val val ind
R15192:15193 Values <> v2 var
R15188:15189 Values <> v1 var
R15204:15208 Values Val Vlong constr
R15214:15218 Values Val Vlong constr
R15235:15242 Integers Int64 eq def
R15247:15256 Integers Int64 zero def
R15273:15276 Coq.Init.Datatypes <> Some constr
R15278:15282 Values Val Vlong constr
R15284:15293 Integers Int64 divu def
R15263:15266 Coq.Init.Datatypes <> None constr
R15315:15318 Coq.Init.Datatypes <> None constr
def 15339:15343 Val modlu
R15353:15355 Values Val val ind
R15359:15364 Coq.Init.Datatypes <> option ind
R15366:15368 Values Val val ind
R15385:15386 Values <> v2 var
R15381:15382 Values <> v1 var
R15397:15401 Values Val Vlong constr
R15407:15411 Values Val Vlong constr
R15428:15435 Integers Int64 eq def
R15440:15449 Integers Int64 zero def
R15466:15469 Coq.Init.Datatypes <> Some constr
R15471:15475 Values Val Vlong constr
R15477:15486 Integers Int64 modu def
R15456:15459 Coq.Init.Datatypes <> None constr
R15508:15511 Coq.Init.Datatypes <> None constr
def 15532:15535 Val andl
R15545:15547 Values Val val ind
R15551:15553 Values Val val ind
R15570:15571 Values <> v2 var
R15566:15567 Values <> v1 var
R15582:15586 Values Val Vlong constr
R15592:15596 Values Val Vlong constr
R15604:15608 Values Val Vlong constr
R15610:15618 Integers Int64 and def
R15639:15644 Values Val Vundef constr
def 15665:15667 Val orl
R15677:15679 Values Val val ind
R15683:15685 Values Val val ind
R15702:15703 Values <> v2 var
R15698:15699 Values <> v1 var
R15714:15718 Values Val Vlong constr
R15724:15728 Values Val Vlong constr
R15736:15740 Values Val Vlong constr
R15742:15749 Integers Int64 or def
R15770:15775 Values Val Vundef constr
def 15796:15799 Val xorl
R15809:15811 Values Val val ind
R15815:15817 Values Val val ind
R15834:15835 Values <> v2 var
R15830:15831 Values <> v1 var
R15846:15850 Values Val Vlong constr
R15856:15860 Values Val Vlong constr
R15868:15872 Values Val Vlong constr
R15874:15882 Integers Int64 xor def
R15903:15908 Values Val Vundef constr
def 15929:15932 Val shll
R15942:15944 Values Val val ind
R15948:15950 Values Val val ind
R15967:15968 Values <> v2 var
R15963:15964 Values <> v1 var
R15979:15983 Values Val Vlong constr
R15989:15992 Values Val Vint constr
R16008:16014 Integers Int ltu def
R16019:16034 Integers Int64 iwordsize' def
R16080:16085 Values Val Vundef constr
R16046:16050 Values Val Vlong constr
R16052:16061 Integers Int64 shl' def
R16099:16104 Values Val Vundef constr
def 16125:16128 Val shrl
R16138:16140 Values Val val ind
R16144:16146 Values Val val ind
R16163:16164 Values <> v2 var
R16159:16160 Values <> v1 var
R16175:16179 Values Val Vlong constr
R16185:16188 Values Val Vint constr
R16204:16210 Integers Int ltu def
R16215:16230 Integers Int64 iwordsize' def
R16276:16281 Values Val Vundef constr
R16242:16246 Values Val Vlong constr
R16248:16257 Integers Int64 shr' def
R16295:16300 Values Val Vundef constr
def 16321:16325 Val shrlu
R16335:16337 Values Val val ind
R16341:16343 Values Val val ind
R16360:16361 Values <> v2 var
R16356:16357 Values <> v1 var
R16372:16376 Values Val Vlong constr
R16382:16385 Values Val Vint constr
R16401:16407 Integers Int ltu def
R16412:16427 Integers Int64 iwordsize' def
R16474:16479 Values Val Vundef constr
R16439:16443 Values Val Vlong constr
R16445:16455 Integers Int64 shru' def
R16493:16498 Values Val Vundef constr
sec 16536:16546 Val COMPARISONS
var 16559:16567 Val.COMPARISONS valid_ptr
R16584:16587 Coq.Init.Datatypes <> bool ind
R16579:16579 Coq.Numbers.BinNums <> Z ind
R16570:16574 Values Val block def
var 16594:16607 Val.COMPARISONS weak_valid_ptr
R16613:16617 Values Val block def
R16626:16626 Coq.Numbers.BinNums <> Z ind
R16647:16650 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R16632:16640 Values <> Val.COMPARISONS.valid_ptr var
R16644:16646 Values <> ofs var
R16642:16642 Values <> b var
R16651:16659 Values <> Val.COMPARISONS.valid_ptr var
R16667:16669 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R16664:16666 Values <> ofs var
R16661:16661 Values <> b var
def 16686:16693 Val cmp_bool
R16699:16708 Integers <> comparison ind
R16719:16721 Values Val val ind
R16725:16730 Coq.Init.Datatypes <> option ind
R16732:16735 Coq.Init.Datatypes <> bool ind
R16752:16753 Values <> v2 var
R16748:16749 Values <> v1 var
R16764:16767 Values Val Vint constr
R16773:16776 Values Val Vint constr
R16784:16787 Coq.Init.Datatypes <> Some constr
R16790:16796 Integers Int cmp def
R16798:16798 Values <> c var
R16819:16822 Coq.Init.Datatypes <> None constr
def 16843:16862 Val cmp_different_blocks
R16868:16877 Integers <> comparison ind
R16881:16886 Coq.Init.Datatypes <> option ind
R16888:16891 Coq.Init.Datatypes <> bool ind
R16904:16904 Values <> c var
R16915:16917 Integers <> Ceq constr
R16922:16925 Coq.Init.Datatypes <> Some constr
R16927:16931 Coq.Init.Datatypes <> false constr
R16937:16939 Integers <> Cne constr
R16944:16947 Coq.Init.Datatypes <> Some constr
R16949:16952 Coq.Init.Datatypes <> true constr
R16965:16968 Coq.Init.Datatypes <> None constr
def 16989:16997 Val cmpu_bool
R17003:17012 Integers <> comparison ind
R17023:17025 Values Val val ind
R17029:17034 Coq.Init.Datatypes <> option ind
R17036:17039 Coq.Init.Datatypes <> bool ind
R17056:17057 Values <> v2 var
R17052:17053 Values <> v1 var
R17068:17071 Values Val Vint constr
R17077:17080 Values Val Vint constr
R17094:17097 Coq.Init.Datatypes <> Some constr
R17100:17107 Integers Int cmpu def
R17109:17109 Values <> c var
R17122:17125 Values Val Vint constr
R17131:17134 Values Val Vptr constr
R17156:17161 Integers Int eq def
R17166:17173 Integers Int zero def
R17208:17211 Coq.Init.Datatypes <> None constr
R17180:17199 Values Val cmp_different_blocks def
R17201:17201 Values <> c var
R17217:17220 Values Val Vptr constr
R17231:17234 Values Val Vptr constr
R17256:17263 Values Val eq_block def
R17490:17504 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R17458:17466 Values <> Val.COMPARISONS.valid_ptr var
R17472:17483 Integers Int unsigned def
R17505:17513 Values <> Val.COMPARISONS.valid_ptr var
R17519:17530 Integers Int unsigned def
R17587:17590 Coq.Init.Datatypes <> None constr
R17551:17570 Values Val cmp_different_blocks def
R17572:17572 Values <> c var
R17324:17338 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R17287:17300 Values <> Val.COMPARISONS.weak_valid_ptr var
R17306:17317 Integers Int unsigned def
R17339:17352 Values <> Val.COMPARISONS.weak_valid_ptr var
R17358:17369 Integers Int unsigned def
R17431:17434 Coq.Init.Datatypes <> None constr
R17390:17393 Coq.Init.Datatypes <> Some constr
R17396:17403 Integers Int cmpu def
R17405:17405 Values <> c var
R17596:17599 Values Val Vptr constr
R17610:17613 Values Val Vint constr
R17630:17635 Integers Int eq def
R17640:17647 Integers Int zero def
R17682:17685 Coq.Init.Datatypes <> None constr
R17654:17673 Values Val cmp_different_blocks def
R17675:17675 Values <> c var
R17699:17702 Coq.Init.Datatypes <> None constr
def 17723:17731 Val cmpf_bool
R17737:17746 Integers <> comparison ind
R17757:17759 Values Val val ind
R17763:17768 Coq.Init.Datatypes <> option ind
R17770:17773 Coq.Init.Datatypes <> bool ind
R17790:17791 Values <> v2 var
R17786:17787 Values <> v1 var
R17802:17807 Values Val Vfloat constr
R17813:17818 Values Val Vfloat constr
R17826:17829 Coq.Init.Datatypes <> Some constr
R17832:17840 Floats Float cmp def
R17842:17842 Values <> c var
R17863:17866 Coq.Init.Datatypes <> None constr
def 17887:17896 Val cmpfs_bool
R17902:17911 Integers <> comparison ind
R17922:17924 Values Val val ind
R17928:17933 Coq.Init.Datatypes <> option ind
R17935:17938 Coq.Init.Datatypes <> bool ind
R17955:17956 Values <> v2 var
R17951:17952 Values <> v1 var
R17967:17973 Values Val Vsingle constr
R17979:17985 Values Val Vsingle constr
R17993:17996 Coq.Init.Datatypes <> Some constr
R17999:18009 Floats Float32 cmp def
R18011:18011 Values <> c var
R18032:18035 Coq.Init.Datatypes <> None constr
def 18056:18064 Val cmpl_bool
R18070:18079 Integers <> comparison ind
R18090:18092 Values Val val ind
R18096:18101 Coq.Init.Datatypes <> option ind
R18103:18106 Coq.Init.Datatypes <> bool ind
R18123:18124 Values <> v2 var
R18119:18120 Values <> v1 var
R18135:18139 Values Val Vlong constr
R18145:18149 Values Val Vlong constr
R18157:18160 Coq.Init.Datatypes <> Some constr
R18163:18171 Integers Int64 cmp def
R18173:18173 Values <> c var
R18194:18197 Coq.Init.Datatypes <> None constr
def 18218:18227 Val cmplu_bool
R18233:18242 Integers <> comparison ind
R18253:18255 Values Val val ind
R18259:18264 Coq.Init.Datatypes <> option ind
R18266:18269 Coq.Init.Datatypes <> bool ind
R18286:18287 Values <> v2 var
R18282:18283 Values <> v1 var
R18298:18302 Values Val Vlong constr
R18308:18312 Values Val Vlong constr
R18320:18323 Coq.Init.Datatypes <> Some constr
R18326:18335 Integers Int64 cmpu def
R18337:18337 Values <> c var
R18358:18361 Coq.Init.Datatypes <> None constr
def 18382:18391 Val of_optbool
R18398:18403 Coq.Init.Datatypes <> option ind
R18405:18408 Coq.Init.Datatypes <> bool ind
R18412:18414 Values Val val ind
R18427:18428 Values <> ob var
R18435:18438 Coq.Init.Datatypes <> Some constr
R18440:18443 Coq.Init.Datatypes <> true constr
R18448:18452 Values Val Vtrue def
R18456:18459 Coq.Init.Datatypes <> Some constr
R18461:18465 Coq.Init.Datatypes <> false constr
R18470:18475 Values Val Vfalse def
R18479:18482 Coq.Init.Datatypes <> None constr
R18487:18492 Values Val Vundef constr
def 18511:18513 Val cmp
R18519:18528 Integers <> comparison ind
R18539:18541 Values Val val ind
R18545:18547 Values Val val ind
R18554:18563 Values Val of_optbool def
R18566:18573 Values Val cmp_bool def
R18580:18581 Values <> v2 var
R18577:18578 Values <> v1 var
R18575:18575 Values <> c var
def 18597:18600 Val cmpu
R18606:18615 Integers <> comparison ind
R18626:18628 Values Val val ind
R18632:18634 Values Val val ind
R18641:18650 Values Val of_optbool def
R18653:18661 Values Val cmpu_bool def
R18668:18669 Values <> v2 var
R18665:18666 Values <> v1 var
R18663:18663 Values <> c var
def 18685:18688 Val cmpf
R18694:18703 Integers <> comparison ind
R18714:18716 Values Val val ind
R18720:18722 Values Val val ind
R18729:18738 Values Val of_optbool def
R18741:18749 Values Val cmpf_bool def
R18756:18757 Values <> v2 var
R18753:18754 Values <> v1 var
R18751:18751 Values <> c var
def 18773:18777 Val cmpfs
R18783:18792 Integers <> comparison ind
R18803:18805 Values Val val ind
R18809:18811 Values Val val ind
R18818:18827 Values Val of_optbool def
R18830:18839 Values Val cmpfs_bool def
R18846:18847 Values <> v2 var
R18843:18844 Values <> v1 var
R18841:18841 Values <> c var
def 18863:18866 Val cmpl
R18872:18881 Integers <> comparison ind
R18892:18894 Values Val val ind
R18898:18903 Coq.Init.Datatypes <> option ind
R18905:18907 Values Val val ind
R18914:18923 Coqlib <> option_map def
R18934:18942 Values Val cmpl_bool def
R18949:18950 Values <> v2 var
R18946:18947 Values <> v1 var
R18944:18944 Values <> c var
R18925:18931 Values Val of_bool def
def 18966:18970 Val cmplu
R18976:18985 Integers <> comparison ind
R18996:18998 Values Val val ind
R19002:19007 Coq.Init.Datatypes <> option ind
R19009:19011 Values Val val ind
R19018:19027 Coqlib <> option_map def
R19038:19047 Values Val cmplu_bool def
R19054:19055 Values <> v2 var
R19051:19052 Values <> v1 var
R19049:19049 Values <> c var
R19029:19035 Values Val of_bool def
def 19071:19083 Val maskzero_bool
R19089:19091 Values Val val ind
R19101:19103 Integers <> int syndef
R19107:19112 Coq.Init.Datatypes <> option ind
R19114:19117 Coq.Init.Datatypes <> bool ind
R19130:19130 Values <> v var
R19141:19144 Values Val Vint constr
R19151:19154 Coq.Init.Datatypes <> Some constr
R19157:19162 Integers Int eq def
R19181:19188 Integers Int zero def
R19165:19171 Integers Int and def
R19175:19178 Values <> mask var
R19200:19203 Coq.Init.Datatypes <> None constr
R19217:19227 Values Val.COMPARISONS <> sec
def 19773:19783 Val load_result
R19793:19804 AST <> memory_chunk ind
R19811:19813 Values Val val ind
R19834:19834 Values <> v var
R19827:19831 Values <> chunk var
R19845:19855 AST <> Mint8signed constr
R19858:19861 Values Val Vint constr
R19868:19871 Values Val Vint constr
R19874:19885 Integers Int sign_ext def
R19896:19908 AST <> Mint8unsigned constr
R19911:19914 Values Val Vint constr
R19921:19924 Values Val Vint constr
R19927:19938 Integers Int zero_ext def
R19949:19960 AST <> Mint16signed constr
R19963:19966 Values Val Vint constr
R19973:19976 Values Val Vint constr
R19979:19990 Integers Int sign_ext def
R20002:20015 AST <> Mint16unsigned constr
R20018:20021 Values Val Vint constr
R20028:20031 Values Val Vint constr
R20034:20045 Integers Int zero_ext def
R20057:20062 AST <> Mint32 constr
R20065:20068 Values Val Vint constr
R20075:20078 Values Val Vint constr
R20086:20091 AST <> Mint32 constr
R20094:20097 Values Val Vptr constr
R20108:20111 Values Val Vptr constr
R20123:20128 AST <> Mint64 constr
R20131:20135 Values Val Vlong constr
R20142:20146 Values Val Vlong constr
R20154:20161 AST <> Mfloat32 constr
R20164:20170 Values Val Vsingle constr
R20177:20183 Values Val Vsingle constr
R20191:20198 AST <> Mfloat64 constr
R20201:20206 Values Val Vfloat constr
R20213:20218 Values Val Vfloat constr
R20226:20231 AST <> Many32 constr
R20235:20238 Values Val Vint constr
R20244:20247 Values Val Vptr constr
R20255:20261 Values Val Vsingle constr
R20269:20269 Values <> v var
R20269:20269 Values <> v var
R20269:20269 Values <> v var
R20275:20280 AST <> Many64 constr
R20288:20288 Values <> v var
R20302:20307 Values Val Vundef constr
prf 20323:20338 Val load_result_type
R20359:20366 Values Val has_type def
R20391:20403 AST <> type_of_chunk def
R20405:20409 Values <> chunk var
R20369:20379 Values Val load_result def
R20387:20387 Values <> v var
R20381:20385 Values <> chunk var
prf 20483:20498 Val load_result_same
R20565:20567 Coq.Init.Logic <> :type_scope:x_'='_x not
R20533:20543 Values Val load_result def
R20564:20564 Values <> v var
R20546:20558 AST <> chunk_of_type def
R20560:20561 Values <> ty var
R20568:20568 Values <> v var
R20516:20523 Values Val has_type def
R20527:20528 Values <> ty var
R20525:20525 Values <> v var
R20587:20594 Values Val has_type def
prf 20712:20728 Val cast8unsigned_and
R20755:20757 Coq.Init.Logic <> :type_scope:x_'='_x not
R20743:20750 Values Val zero_ext def
R20754:20754 Values <> x var
R20758:20760 Values Val and def
R20765:20768 Values Val Vint constr
R20770:20777 Integers Int repr def
R20762:20762 Values <> x var
R20854:20856 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20847:20851 Coq.ZArith.Zpower <> two_p def
R20854:20856 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R20847:20851 Coq.ZArith.Zpower <> two_p def
R20867:20882 Integers Int zero_ext_and thm
R20867:20882 Integers Int zero_ext_and thm
prf 20907:20924 Val cast16unsigned_and
R20952:20954 Coq.Init.Logic <> :type_scope:x_'='_x not
R20939:20946 Values Val zero_ext def
R20951:20951 Values <> x var
R20955:20957 Values Val and def
R20962:20965 Values Val Vint constr
R20967:20974 Integers Int repr def
R20959:20959 Values <> x var
R21056:21058 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R21048:21052 Coq.ZArith.Zpower <> two_p def
R21056:21058 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R21048:21052 Coq.ZArith.Zpower <> two_p def
R21069:21084 Integers Int zero_ext_and thm
R21069:21084 Integers Int zero_ext_and thm
prf 21108:21126 Val bool_of_val_of_bool
R21178:21180 Coq.Init.Logic <> :type_scope:x_'='_x not
R21176:21177 Values <> b1 var
R21181:21182 Values <> b2 var
R21145:21155 Values Val bool_of_val ind
R21170:21171 Values <> b2 var
R21158:21164 Values Val of_bool def
R21166:21167 Values <> b1 var
prf 21254:21275 Val bool_of_val_of_optbool
R21328:21330 Coq.Init.Logic <> :type_scope:x_'='_x not
R21326:21327 Values <> ob var
R21331:21334 Coq.Init.Datatypes <> Some constr
R21336:21336 Values <> b var
R21293:21303 Values Val bool_of_val ind
R21321:21321 Values <> b var
R21306:21315 Values Val of_optbool def
R21317:21318 Values <> ob var
prf 21445:21458 Val notbool_negb_1
R21489:21491 Coq.Init.Logic <> :type_scope:x_'='_x not
R21473:21479 Values Val of_bool def
R21482:21485 Coq.Init.Datatypes <> negb def
R21487:21487 Values <> b var
R21492:21498 Values Val notbool def
R21501:21507 Values Val of_bool def
R21509:21509 Values <> b var
prf 21561:21574 Val notbool_negb_2
R21598:21600 Coq.Init.Logic <> :type_scope:x_'='_x not
R21589:21595 Values Val of_bool def
R21597:21597 Values <> b var
R21601:21607 Values Val notbool def
R21610:21616 Values Val of_bool def
R21619:21622 Coq.Init.Datatypes <> negb def
R21624:21624 Values <> b var
prf 21677:21690 Val notbool_negb_3
R21737:21739 Coq.Init.Logic <> :type_scope:x_'='_x not
R21706:21715 Values Val of_optbool def
R21718:21727 Coqlib <> option_map def
R21734:21735 Values <> ob var
R21729:21732 Coq.Init.Datatypes <> negb def
R21740:21746 Values Val notbool def
R21749:21758 Values Val of_optbool def
R21760:21761 Values <> ob var
prf 21825:21837 Val notbool_idem2
R21879:21881 Coq.Init.Logic <> :type_scope:x_'='_x not
R21852:21858 Values Val notbool def
R21860:21866 Values Val notbool def
R21868:21874 Values Val of_bool def
R21876:21876 Values <> b var
R21882:21888 Values Val of_bool def
R21890:21890 Values <> b var
prf 21941:21953 Val notbool_idem3
R21995:21997 Coq.Init.Logic <> :type_scope:x_'='_x not
R21968:21974 Values Val notbool def
R21976:21982 Values Val notbool def
R21984:21990 Values Val notbool def
R21992:21992 Values <> x var
R21998:22004 Values Val notbool def
R22006:22006 Values <> x var
R22052:22057 Integers Int eq def
R22061:22068 Integers Int zero def
R22052:22057 Integers Int eq def
R22061:22068 Integers Int zero def
prf 22099:22111 Val notbool_idem4
R22160:22162 Coq.Init.Logic <> :type_scope:x_'='_x not
R22127:22133 Values Val notbool def
R22136:22142 Values Val notbool def
R22145:22154 Values Val of_optbool def
R22156:22157 Values <> ob var
R22163:22172 Values Val of_optbool def
R22174:22175 Values <> ob var
prf 22238:22247 Val add_commut
R22269:22271 Coq.Init.Logic <> :type_scope:x_'='_x not
R22262:22264 Values Val add def
R22268:22268 Values <> y var
R22266:22266 Values <> x var
R22272:22274 Values Val add def
R22278:22278 Values <> x var
R22276:22276 Values <> y var
R22342:22355 Integers Int add_commut thm
R22342:22355 Integers Int add_commut thm
prf 22372:22380 Val add_assoc
R22412:22414 Coq.Init.Logic <> :type_scope:x_'='_x not
R22397:22399 Values Val add def
R22411:22411 Values <> z var
R22402:22404 Values Val add def
R22408:22408 Values <> y var
R22406:22406 Values <> x var
R22415:22417 Values Val add def
R22422:22424 Values Val add def
R22428:22428 Values <> z var
R22426:22426 Values <> y var
R22419:22419 Values <> x var
R22500:22512 Integers Int add_assoc thm
R22500:22512 Integers Int add_assoc thm
R22531:22543 Integers Int add_assoc thm
R22531:22543 Integers Int add_assoc thm
R22574:22587 Integers Int add_commut thm
R22574:22587 Integers Int add_commut thm
R22607:22620 Integers Int add_commut thm
R22607:22620 Integers Int add_commut thm
R22634:22646 Integers Int add_assoc thm
R22634:22646 Integers Int add_assoc thm
R22665:22678 Integers Int add_commut thm
R22665:22678 Integers Int add_commut thm
R22698:22710 Integers Int add_assoc thm
R22698:22710 Integers Int add_assoc thm
prf 22733:22742 Val add_permut
R22774:22776 Coq.Init.Logic <> :type_scope:x_'='_x not
R22759:22761 Values Val add def
R22766:22768 Values Val add def
R22772:22772 Values <> z var
R22770:22770 Values <> y var
R22763:22763 Values <> x var
R22777:22779 Values Val add def
R22784:22786 Values Val add def
R22790:22790 Values <> z var
R22788:22788 Values <> x var
R22781:22781 Values <> y var
R22820:22829 Values Val add_commut thm
R22820:22829 Values Val add_commut thm
R22848:22856 Values Val add_assoc thm
R22848:22856 Values Val add_assoc thm
R22865:22874 Values Val add_commut thm
R22865:22874 Values Val add_commut thm
prf 22891:22902 Val add_permut_4
R22946:22948 Coq.Init.Logic <> :type_scope:x_'='_x not
R22923:22925 Values Val add def
R22938:22940 Values Val add def
R22944:22944 Values <> t var
R22942:22942 Values <> z var
R22928:22930 Values Val add def
R22934:22934 Values <> y var
R22932:22932 Values <> x var
R22949:22951 Values Val add def
R22964:22966 Values Val add def
R22970:22970 Values <> t var
R22968:22968 Values <> y var
R22954:22956 Values Val add def
R22960:22960 Values <> z var
R22958:22958 Values <> x var
R22999:23008 Values Val add_permut thm
R22999:23008 Values Val add_permut thm
R23019:23027 Values Val add_assoc thm
R23019:23027 Values Val add_assoc thm
R23041:23050 Values Val add_permut thm
R23041:23050 Values Val add_permut thm
R23069:23077 Values Val add_assoc thm
R23069:23077 Values Val add_assoc thm
prf 23095:23102 Val neg_zero
R23114:23116 Coq.Init.Logic <> :type_scope:x_'='_x not
R23105:23107 Values Val neg def
R23109:23113 Values Val Vzero def
R23117:23121 Values Val Vzero def
prf 23160:23172 Val neg_add_distr
R23199:23201 Coq.Init.Logic <> :type_scope:x_'='_x not
R23187:23189 Values Val neg def
R23191:23193 Values Val add def
R23197:23197 Values <> y var
R23195:23195 Values <> x var
R23202:23204 Values Val add def
R23215:23217 Values Val neg def
R23219:23219 Values <> y var
R23207:23209 Values Val neg def
R23211:23211 Values <> x var
R23282:23298 Integers Int neg_add_distr thm
R23282:23298 Integers Int neg_add_distr thm
prf 23315:23324 Val sub_zero_r
R23348:23350 Coq.Init.Logic <> :type_scope:x_'='_x not
R23337:23339 Values Val sub def
R23347:23347 Values <> x var
R23341:23345 Values Val Vzero def
R23351:23353 Values Val neg def
R23355:23355 Values <> x var
prf 23407:23417 Val sub_add_opp
R23446:23448 Coq.Init.Logic <> :type_scope:x_'='_x not
R23432:23434 Values Val sub def
R23439:23442 Values Val Vint constr
R23444:23444 Values <> y var
R23436:23436 Values <> x var
R23449:23451 Values Val add def
R23456:23459 Values Val Vint constr
R23462:23468 Integers Int neg def
R23470:23470 Values <> y var
R23453:23453 Values <> x var
R23526:23540 Integers Int sub_add_opp thm
R23526:23540 Integers Int sub_add_opp thm
R23526:23540 Integers Int sub_add_opp thm
prf 23563:23573 Val sub_opp_add
R23612:23614 Coq.Init.Logic <> :type_scope:x_'='_x not
R23588:23590 Values Val sub def
R23595:23598 Values Val Vint constr
R23601:23607 Integers Int neg def
R23609:23609 Values <> y var
R23592:23592 Values <> x var
R23615:23617 Values Val add def
R23622:23625 Values Val Vint constr
R23627:23627 Values <> y var
R23619:23619 Values <> x var
R23655:23657 Values Val sub def
R23660:23662 Values Val add def
R23693:23707 Integers Int sub_add_opp thm
R23718:23735 Integers Int neg_involutive thm
R23693:23707 Integers Int sub_add_opp thm
R23693:23707 Integers Int sub_add_opp thm
R23718:23735 Integers Int neg_involutive thm
R23718:23735 Integers Int neg_involutive thm
prf 23758:23766 Val sub_add_l
R23811:23813 Coq.Init.Logic <> :type_scope:x_'='_x not
R23787:23789 Values Val sub def
R23809:23810 Values <> v2 var
R23792:23794 Values Val add def
R23800:23803 Values Val Vint constr
R23805:23805 Values <> i var
R23796:23797 Values <> v1 var
R23814:23816 Values Val add def
R23831:23834 Values Val Vint constr
R23836:23836 Values <> i var
R23819:23821 Values Val sub def
R23826:23827 Values <> v2 var
R23823:23824 Values <> v1 var
R23906:23918 Integers Int sub_add_l thm
R23906:23918 Integers Int sub_add_l thm
R23937:23949 Integers Int sub_add_l thm
R23937:23949 Integers Int sub_add_l thm
R23966:23973 Values Val eq_block def
R23966:23973 Values Val eq_block def
R23997:24009 Integers Int sub_add_l thm
R23997:24009 Integers Int sub_add_l thm
prf 24045:24053 Val sub_add_r
R24098:24100 Coq.Init.Logic <> :type_scope:x_'='_x not
R24074:24076 Values Val sub def
R24082:24084 Values Val add def
R24090:24093 Values Val Vint constr
R24095:24095 Values <> i var
R24086:24087 Values <> v2 var
R24078:24079 Values <> v1 var
R24101:24103 Values Val add def
R24118:24121 Values Val Vint constr
R24124:24130 Integers Int neg def
R24132:24132 Values <> i var
R24106:24108 Values Val sub def
R24113:24114 Values <> v2 var
R24110:24111 Values <> v1 var
R24203:24215 Integers Int sub_add_r thm
R24203:24215 Integers Int sub_add_r thm
R24241:24255 Integers Int sub_add_opp thm
R24241:24255 Integers Int sub_add_opp thm
R24241:24255 Integers Int sub_add_opp thm
R24241:24255 Integers Int sub_add_opp thm
R24283:24295 Integers Int add_assoc thm
R24283:24295 Integers Int add_assoc thm
R24283:24295 Integers Int add_assoc thm
R24283:24295 Integers Int add_assoc thm
R24311:24324 Integers Int add_commut thm
R24311:24324 Integers Int add_commut thm
R24351:24365 Integers Int sub_add_opp thm
R24351:24365 Integers Int sub_add_opp thm
R24351:24365 Integers Int sub_add_opp thm
R24351:24365 Integers Int sub_add_opp thm
R24379:24391 Integers Int add_assoc thm
R24379:24391 Integers Int add_assoc thm
R24407:24423 Integers Int neg_add_distr thm
R24407:24423 Integers Int neg_add_distr thm
R24434:24441 Values Val eq_block def
R24434:24441 Values Val eq_block def
R24489:24503 Integers Int sub_add_opp thm
R24489:24503 Integers Int sub_add_opp thm
R24489:24503 Integers Int sub_add_opp thm
R24489:24503 Integers Int sub_add_opp thm
R24514:24526 Integers Int add_assoc thm
R24514:24526 Integers Int add_assoc thm
R24544:24560 Integers Int neg_add_distr thm
R24544:24560 Integers Int neg_add_distr thm
prf 24592:24601 Val mul_commut
R24623:24625 Coq.Init.Logic <> :type_scope:x_'='_x not
R24616:24618 Values Val mul def
R24622:24622 Values <> y var
R24620:24620 Values <> x var
R24626:24628 Values Val mul def
R24632:24632 Values <> x var
R24630:24630 Values <> y var
R24694:24707 Integers Int mul_commut thm
R24694:24707 Integers Int mul_commut thm
prf 24724:24732 Val mul_assoc
R24764:24766 Coq.Init.Logic <> :type_scope:x_'='_x not
R24749:24751 Values Val mul def
R24763:24763 Values <> z var
R24754:24756 Values Val mul def
R24760:24760 Values <> y var
R24758:24758 Values <> x var
R24767:24769 Values Val mul def
R24774:24776 Values Val mul def
R24780:24780 Values <> z var
R24778:24778 Values <> y var
R24771:24771 Values <> x var
R24857:24869 Integers Int mul_assoc thm
R24857:24869 Integers Int mul_assoc thm
prf 24886:24900 Val mul_add_distr_l
R24934:24936 Coq.Init.Logic <> :type_scope:x_'='_x not
R24919:24921 Values Val mul def
R24933:24933 Values <> z var
R24924:24926 Values Val add def
R24930:24930 Values <> y var
R24928:24928 Values <> x var
R24937:24939 Values Val add def
R24952:24954 Values Val mul def
R24958:24958 Values <> z var
R24956:24956 Values <> y var
R24942:24944 Values Val mul def
R24948:24948 Values <> z var
R24946:24946 Values <> x var
R25035:25053 Integers Int mul_add_distr_l thm
R25035:25053 Integers Int mul_add_distr_l thm
prf 25071:25085 Val mul_add_distr_r
R25119:25121 Coq.Init.Logic <> :type_scope:x_'='_x not
R25104:25106 Values Val mul def
R25111:25113 Values Val add def
R25117:25117 Values <> z var
R25115:25115 Values <> y var
R25108:25108 Values <> x var
R25122:25124 Values Val add def
R25137:25139 Values Val mul def
R25143:25143 Values <> z var
R25141:25141 Values <> x var
R25127:25129 Values Val mul def
R25133:25133 Values <> y var
R25131:25131 Values <> x var
R25220:25238 Integers Int mul_add_distr_r thm
R25220:25238 Integers Int mul_add_distr_r thm
prf 25255:25262 Val mul_pow2
R25333:25335 Coq.Init.Logic <> :type_scope:x_'='_x not
R25319:25321 Values Val mul def
R25326:25329 Values Val Vint constr
R25331:25331 Values <> n var
R25323:25323 Values <> x var
R25336:25338 Values Val shl def
R25343:25346 Values Val Vint constr
R25348:25351 Values <> logn var
R25340:25340 Values <> x var
R25301:25303 Coq.Init.Logic <> :type_scope:x_'='_x not
R25286:25298 Integers Int is_power2 def
R25300:25300 Values <> n var
R25304:25307 Coq.Init.Datatypes <> Some constr
R25309:25312 Values <> logn var
R25414:25426 Integers Int zwordsize def
R25414:25426 Integers Int zwordsize def
R25440:25458 Integers Int is_power2_range thm
R25440:25458 Integers Int is_power2_range thm
R25481:25492 Integers Int mul_pow2 thm
R25481:25492 Integers Int mul_pow2 thm
prf 25517:25525 Val mods_divs
R25567:25573 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25575:25576 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25594:25597 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25585:25587 Coq.Init.Logic <> :type_scope:x_'='_x not
R25577:25580 Values Val divs def
R25584:25584 Values <> y var
R25582:25582 Values <> x var
R25588:25591 Coq.Init.Datatypes <> Some constr
R25593:25593 Values <> v var
R25599:25601 Coq.Init.Logic <> :type_scope:x_'='_x not
R25598:25598 Values <> z var
R25602:25604 Values Val sub def
R25609:25611 Values Val mul def
R25615:25615 Values <> y var
R25613:25613 Values <> v var
R25606:25606 Values <> x var
R25554:25556 Coq.Init.Logic <> :type_scope:x_'='_x not
R25546:25549 Values Val mods def
R25553:25553 Values <> y var
R25551:25551 Values <> x var
R25557:25560 Coq.Init.Datatypes <> Some constr
R25562:25562 Values <> z var
R25720:25731 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R25702:25707 Integers Int eq def
R25712:25719 Integers Int zero def
R25766:25769 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R25732:25737 Integers Int eq def
R25742:25749 Integers Int repr def
R25751:25764 Integers Int min_signed def
R25770:25775 Integers Int eq def
R25780:25787 Integers Int mone def
R25720:25731 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R25702:25707 Integers Int eq def
R25712:25719 Integers Int zero def
R25766:25769 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R25732:25737 Integers Int eq def
R25742:25749 Integers Int repr def
R25751:25764 Integers Int min_signed def
R25770:25775 Integers Int eq def
R25780:25787 Integers Int mone def
R25808:25811 Values Val Vint constr
R25814:25821 Integers Int divs def
R25808:25811 Values Val Vint constr
R25814:25821 Integers Int divs def
R25862:25874 Integers Int mods_divs thm
R25862:25874 Integers Int mods_divs thm
prf 25897:25905 Val modu_divu
R25947:25953 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25955:25956 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R25974:25977 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R25965:25967 Coq.Init.Logic <> :type_scope:x_'='_x not
R25957:25960 Values Val divu def
R25964:25964 Values <> y var
R25962:25962 Values <> x var
R25968:25971 Coq.Init.Datatypes <> Some constr
R25973:25973 Values <> v var
R25979:25981 Coq.Init.Logic <> :type_scope:x_'='_x not
R25978:25978 Values <> z var
R25982:25984 Values Val sub def
R25989:25991 Values Val mul def
R25995:25995 Values <> y var
R25993:25993 Values <> v var
R25986:25986 Values <> x var
R25934:25936 Coq.Init.Logic <> :type_scope:x_'='_x not
R25926:25929 Values Val modu def
R25933:25933 Values <> y var
R25931:25931 Values <> x var
R25937:25940 Coq.Init.Datatypes <> Some constr
R25942:25942 Values <> z var
R26082:26087 Integers Int eq def
R26092:26099 Integers Int zero def
R26082:26087 Integers Int eq def
R26092:26099 Integers Int zero def
R26127:26130 Values Val Vint constr
R26133:26140 Integers Int divu def
R26127:26130 Values Val Vint constr
R26133:26140 Integers Int divu def
R26181:26193 Integers Int modu_divu thm
R26181:26193 Integers Int modu_divu thm
R26216:26226 Integers Int eq_spec thm
R26231:26238 Integers Int zero def
R26216:26226 Integers Int eq_spec thm
R26231:26238 Integers Int zero def
prf 26277:26285 Val divs_pow2
R26429:26431 Coq.Init.Logic <> :type_scope:x_'='_x not
R26411:26414 Values Val shrx def
R26419:26422 Values Val Vint constr
R26424:26427 Values <> logn var
R26416:26416 Values <> x var
R26432:26435 Coq.Init.Datatypes <> Some constr
R26437:26437 Values <> y var
R26396:26398 Coq.Init.Logic <> :type_scope:x_'='_x not
R26381:26384 Values Val divs def
R26389:26392 Values Val Vint constr
R26394:26394 Values <> n var
R26386:26386 Values <> x var
R26399:26402 Coq.Init.Datatypes <> Some constr
R26404:26404 Values <> y var
R26368:26370 Coq.Init.Logic <> :type_scope:x_'='_x not
R26342:26348 Integers Int ltu def
R26356:26363 Integers Int repr def
R26350:26353 Values <> logn var
R26371:26374 Coq.Init.Datatypes <> true constr
R26326:26328 Coq.Init.Logic <> :type_scope:x_'='_x not
R26311:26323 Integers Int is_power2 def
R26325:26325 Values <> n var
R26329:26332 Coq.Init.Datatypes <> Some constr
R26334:26337 Values <> logn var
R26519:26531 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R26502:26507 Integers Int eq def
R26511:26518 Integers Int zero def
R26566:26569 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R26532:26537 Integers Int eq def
R26542:26549 Integers Int repr def
R26551:26564 Integers Int min_signed def
R26570:26575 Integers Int eq def
R26579:26586 Integers Int mone def
R26519:26531 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R26502:26507 Integers Int eq def
R26511:26518 Integers Int zero def
R26566:26569 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R26532:26537 Integers Int eq def
R26542:26549 Integers Int repr def
R26551:26564 Integers Int min_signed def
R26570:26575 Integers Int eq def
R26579:26586 Integers Int mone def
R26649:26661 Integers Int divs_pow2 thm
R26649:26661 Integers Int divs_pow2 thm
prf 26684:26692 Val divu_pow2
R26799:26801 Coq.Init.Logic <> :type_scope:x_'='_x not
R26781:26784 Values Val shru def
R26789:26792 Values Val Vint constr
R26794:26797 Values <> logn var
R26786:26786 Values <> x var
R26802:26802 Values <> y var
R26766:26768 Coq.Init.Logic <> :type_scope:x_'='_x not
R26751:26754 Values Val divu def
R26759:26762 Values Val Vint constr
R26764:26764 Values <> n var
R26756:26756 Values <> x var
R26769:26772 Coq.Init.Datatypes <> Some constr
R26774:26774 Values <> y var
R26733:26735 Coq.Init.Logic <> :type_scope:x_'='_x not
R26718:26730 Integers Int is_power2 def
R26732:26732 Values <> n var
R26736:26739 Coq.Init.Datatypes <> Some constr
R26741:26744 Values <> logn var
R26867:26872 Integers Int eq def
R26876:26883 Integers Int zero def
R26867:26872 Integers Int eq def
R26876:26883 Integers Int zero def
R26917:26935 Integers Int is_power2_range thm
R26917:26935 Integers Int is_power2_range thm
R26970:26982 Integers Int divu_pow2 thm
R26970:26982 Integers Int divu_pow2 thm
prf 27005:27013 Val modu_pow2
R27134:27136 Coq.Init.Logic <> :type_scope:x_'='_x not
R27102:27104 Values Val and def
R27109:27112 Values Val Vint constr
R27115:27121 Integers Int sub def
R27125:27131 Integers Int one def
R27123:27123 Values <> n var
R27106:27106 Values <> x var
R27137:27137 Values <> y var
R27087:27089 Coq.Init.Logic <> :type_scope:x_'='_x not
R27072:27075 Values Val modu def
R27080:27083 Values Val Vint constr
R27085:27085 Values <> n var
R27077:27077 Values <> x var
R27090:27093 Coq.Init.Datatypes <> Some constr
R27095:27095 Values <> y var
R27054:27056 Coq.Init.Logic <> :type_scope:x_'='_x not
R27039:27051 Integers Int is_power2 def
R27053:27053 Values <> n var
R27057:27060 Coq.Init.Datatypes <> Some constr
R27062:27065 Values <> logn var
R27202:27207 Integers Int eq def
R27211:27218 Integers Int zero def
R27202:27207 Integers Int eq def
R27211:27218 Integers Int zero def
R27264:27275 Integers Int modu_and thm
R27264:27275 Integers Int modu_and thm
prf 27299:27308 Val and_commut
R27330:27332 Coq.Init.Logic <> :type_scope:x_'='_x not
R27323:27325 Values Val and def
R27329:27329 Values <> y var
R27327:27327 Values <> x var
R27333:27335 Values Val and def
R27339:27339 Values <> x var
R27337:27337 Values <> y var
R27401:27414 Integers Int and_commut thm
R27401:27414 Integers Int and_commut thm
prf 27431:27439 Val and_assoc
R27471:27473 Coq.Init.Logic <> :type_scope:x_'='_x not
R27456:27458 Values Val and def
R27470:27470 Values <> z var
R27461:27463 Values Val and def
R27467:27467 Values <> y var
R27465:27465 Values <> x var
R27474:27476 Values Val and def
R27481:27483 Values Val and def
R27487:27487 Values <> z var
R27485:27485 Values <> y var
R27478:27478 Values <> x var
R27564:27576 Integers Int and_assoc thm
R27564:27576 Integers Int and_assoc thm
prf 27593:27601 Val or_commut
R27622:27624 Coq.Init.Logic <> :type_scope:x_'='_x not
R27616:27617 Values Val or def
R27621:27621 Values <> y var
R27619:27619 Values <> x var
R27625:27626 Values Val or def
R27630:27630 Values <> x var
R27628:27628 Values <> y var
R27692:27704 Integers Int or_commut thm
R27692:27704 Integers Int or_commut thm
prf 27721:27728 Val or_assoc
R27758:27760 Coq.Init.Logic <> :type_scope:x_'='_x not
R27745:27746 Values Val or def
R27757:27757 Values <> z var
R27749:27750 Values Val or def
R27754:27754 Values <> y var
R27752:27752 Values <> x var
R27761:27762 Values Val or def
R27767:27768 Values Val or def
R27772:27772 Values <> z var
R27770:27770 Values <> y var
R27764:27764 Values <> x var
R27849:27860 Integers Int or_assoc thm
R27849:27860 Integers Int or_assoc thm
prf 27877:27886 Val xor_commut
R27908:27910 Coq.Init.Logic <> :type_scope:x_'='_x not
R27901:27903 Values Val xor def
R27907:27907 Values <> y var
R27905:27905 Values <> x var
R27911:27913 Values Val xor def
R27917:27917 Values <> x var
R27915:27915 Values <> y var
R27979:27992 Integers Int xor_commut thm
R27979:27992 Integers Int xor_commut thm
prf 28009:28017 Val xor_assoc
R28049:28051 Coq.Init.Logic <> :type_scope:x_'='_x not
R28034:28036 Values Val xor def
R28048:28048 Values <> z var
R28039:28041 Values Val xor def
R28045:28045 Values <> y var
R28043:28043 Values <> x var
R28052:28054 Values Val xor def
R28059:28061 Values Val xor def
R28065:28065 Values <> z var
R28063:28063 Values <> y var
R28056:28056 Values <> x var
R28142:28154 Integers Int xor_assoc thm
R28142:28154 Integers Int xor_assoc thm
prf 28171:28177 Val not_xor
R28198:28200 Coq.Init.Logic <> :type_scope:x_'='_x not
R28190:28195 Values Val notint def
R28197:28197 Values <> x var
R28201:28203 Values Val xor def
R28208:28211 Values Val Vint constr
R28213:28220 Integers Int mone def
R28205:28205 Values <> x var
prf 28273:28279 Val shl_mul
R28312:28314 Coq.Init.Logic <> :type_scope:x_'='_x not
R28294:28296 Values Val mul def
R28301:28303 Values Val shl def
R28310:28310 Values <> y var
R28305:28308 Values Val Vone def
R28298:28298 Values <> x var
R28315:28317 Values Val shl def
R28321:28321 Values <> y var
R28319:28319 Values <> x var
R28379:28385 Integers Int ltu def
R28390:28402 Integers Int iwordsize def
R28379:28385 Integers Int ltu def
R28390:28402 Integers Int iwordsize def
R28437:28447 Integers Int shl_mul thm
R28437:28447 Integers Int shl_mul thm
prf 28464:28471 Val shl_rolm
R28540:28542 Coq.Init.Logic <> :type_scope:x_'='_x not
R28526:28528 Values Val shl def
R28533:28536 Values Val Vint constr
R28538:28538 Values <> n var
R28530:28530 Values <> x var
R28543:28546 Values Val rolm def
R28553:28559 Integers Int shl def
R28570:28570 Values <> n var
R28561:28568 Integers Int mone def
R28550:28550 Values <> n var
R28548:28548 Values <> x var
R28513:28515 Coq.Init.Logic <> :type_scope:x_'='_x not
R28490:28496 Integers Int ltu def
R28500:28512 Integers Int iwordsize def
R28498:28498 Values <> n var
R28516:28519 Coq.Init.Datatypes <> true constr
R28642:28653 Integers Int shl_rolm thm
R28642:28653 Integers Int shl_rolm thm
prf 28679:28687 Val shru_rolm
R28757:28759 Coq.Init.Logic <> :type_scope:x_'='_x not
R28742:28745 Values Val shru def
R28750:28753 Values Val Vint constr
R28755:28755 Values <> n var
R28747:28747 Values <> x var
R28760:28763 Values Val rolm def
R28794:28801 Integers Int shru def
R28812:28812 Values <> n var
R28803:28810 Integers Int mone def
R28768:28774 Integers Int sub def
R28790:28790 Values <> n var
R28776:28788 Integers Int iwordsize def
R28765:28765 Values <> x var
R28729:28731 Coq.Init.Logic <> :type_scope:x_'='_x not
R28706:28712 Integers Int ltu def
R28716:28728 Integers Int iwordsize def
R28714:28714 Values <> n var
R28732:28735 Coq.Init.Datatypes <> true constr
R28884:28896 Integers Int shru_rolm thm
R28884:28896 Integers Int shru_rolm thm
prf 28922:28931 Val shrx_carry
R29004:29006 Coq.Init.Logic <> :type_scope:x_'='_x not
R28975:28977 Values Val add def
R28990:28998 Values Val shr_carry def
R29002:29002 Values <> y var
R29000:29000 Values <> x var
R28980:28982 Values Val shr def
R28986:28986 Values <> y var
R28984:28984 Values <> x var
R29007:29007 Values <> z var
R28960:28962 Coq.Init.Logic <> :type_scope:x_'='_x not
R28952:28955 Values Val shrx def
R28959:28959 Values <> y var
R28957:28957 Values <> x var
R28963:28966 Coq.Init.Datatypes <> Some constr
R28968:28968 Values <> z var
R29083:29089 Integers Int ltu def
R29095:29102 Integers Int repr def
R29083:29089 Integers Int ltu def
R29095:29102 Integers Int repr def
R29134:29144 Integers Int ltu_inv thm
R29162:29173 Integers Int unsigned def
R29176:29183 Integers Int repr def
R29162:29173 Integers Int unsigned def
R29176:29183 Integers Int repr def
R29241:29243 Coq.Init.Logic <> :type_scope:x_'='_x not
R29217:29223 Integers Int ltu def
R29228:29240 Integers Int iwordsize def
R29244:29247 Coq.Init.Datatypes <> true constr
R29241:29243 Coq.Init.Logic <> :type_scope:x_'='_x not
R29217:29223 Integers Int ltu def
R29228:29240 Integers Int iwordsize def
R29244:29247 Coq.Init.Datatypes <> true constr
R29263:29269 Integers Int ltu def
R29278:29285 Coqlib <> zlt_true thm
R29278:29285 Coqlib <> zlt_true thm
R29296:29307 Integers Int unsigned def
R29309:29321 Integers Int iwordsize def
R29296:29307 Integers Int unsigned def
R29309:29321 Integers Int iwordsize def
R29384:29397 Integers Int shrx_carry thm
R29384:29397 Integers Int shrx_carry thm
prf 29420:29427 Val shrx_shr
R29471:29477 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29479:29480 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29481:29487 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29489:29494 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R29505:29508 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29496:29498 Coq.Init.Logic <> :type_scope:x_'='_x not
R29495:29495 Values <> x var
R29499:29502 Values Val Vint constr
R29504:29504 Values <> p var
R29519:29526 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R29510:29512 Coq.Init.Logic <> :type_scope:x_'='_x not
R29509:29509 Values <> y var
R29513:29516 Values Val Vint constr
R29518:29518 Values <> q var
R29528:29530 Coq.Init.Logic <> :type_scope:x_'='_x not
R29527:29527 Values <> z var
R29531:29533 Values Val shr def
R29622:29625 Values Val Vint constr
R29627:29627 Values <> q var
R29539:29544 Integers Int lt def
R29548:29555 Integers Int zero def
R29546:29546 Values <> p var
R29618:29618 Values <> x var
R29562:29564 Values Val add def
R29569:29572 Values Val Vint constr
R29575:29581 Integers Int sub def
R29603:29609 Integers Int one def
R29584:29590 Integers Int shl def
R29600:29600 Values <> q var
R29592:29598 Integers Int one def
R29566:29566 Values <> x var
R29456:29458 Coq.Init.Logic <> :type_scope:x_'='_x not
R29448:29451 Values Val shrx def
R29455:29455 Values <> y var
R29453:29453 Values <> x var
R29459:29462 Coq.Init.Datatypes <> Some constr
R29464:29464 Values <> z var
R29704:29710 Integers Int ltu def
R29716:29723 Integers Int repr def
R29704:29710 Integers Int ltu def
R29716:29723 Integers Int repr def
R29755:29765 Integers Int ltu_inv thm
R29783:29794 Integers Int unsigned def
R29797:29804 Integers Int repr def
R29783:29794 Integers Int unsigned def
R29797:29804 Integers Int repr def
R29862:29864 Coq.Init.Logic <> :type_scope:x_'='_x not
R29838:29844 Integers Int ltu def
R29849:29861 Integers Int iwordsize def
R29865:29868 Coq.Init.Datatypes <> true constr
R29862:29864 Coq.Init.Logic <> :type_scope:x_'='_x not
R29838:29844 Integers Int ltu def
R29849:29861 Integers Int iwordsize def
R29865:29868 Coq.Init.Datatypes <> true constr
R29884:29890 Integers Int ltu def
R29899:29906 Coqlib <> zlt_true thm
R29899:29906 Coqlib <> zlt_true thm
R29917:29928 Integers Int unsigned def
R29930:29942 Integers Int iwordsize def
R29917:29928 Integers Int unsigned def
R29930:29942 Integers Int iwordsize def
R0:-1 Values <> y var
R30007:30018 Integers Int shrx_shr thm
R30007:30018 Integers Int shrx_shr thm
R30037:30042 Integers Int lt def
R30046:30053 Integers Int zero def
R30037:30042 Integers Int lt def
R30046:30053 Integers Int zero def
prf 30096:30102 Val or_rolm
R30157:30159 Coq.Init.Logic <> :type_scope:x_'='_x not
R30127:30128 Values Val or def
R30145:30148 Values Val rolm def
R30154:30155 Values <> m2 var
R30152:30152 Values <> n var
R30150:30150 Values <> x var
R30131:30134 Values Val rolm def
R30140:30141 Values <> m1 var
R30138:30138 Values <> n var
R30136:30136 Values <> x var
R30160:30163 Values Val rolm def
R30170:30175 Integers Int or def
R30180:30181 Values <> m2 var
R30177:30178 Values <> m1 var
R30167:30167 Values <> n var
R30165:30165 Values <> x var
R30242:30252 Integers Int or_rolm thm
R30242:30252 Integers Int or_rolm thm
prf 30269:30277 Val rolm_rolm
R30331:30337 Coq.Init.Logic <> :type_scope:x_'='_x not
R30306:30309 Values Val rolm def
R30329:30330 Values <> m2 var
R30326:30327 Values <> n2 var
R30312:30315 Values Val rolm def
R30322:30323 Values <> m1 var
R30319:30320 Values <> n1 var
R30317:30317 Values <> x var
R30338:30341 Values Val rolm def
R30398:30404 Integers Int and def
R30422:30423 Values <> m2 var
R30407:30413 Integers Int rol def
R30418:30419 Values <> n2 var
R30415:30416 Values <> m1 var
R30346:30353 Integers Int modu def
R30371:30383 Integers Int iwordsize def
R30356:30362 Integers Int add def
R30367:30368 Values <> n2 var
R30364:30365 Values <> n1 var
R30343:30343 Values <> x var
R30487:30499 Integers Int rolm_rolm thm
R30487:30499 Integers Int rolm_rolm thm
R30508:30535 Integers <> int_wordsize_divides_modulus thm
R30508:30535 Integers <> int_wordsize_divides_modulus thm
prf 30552:30560 Val rolm_zero
R30596:30598 Coq.Init.Logic <> :type_scope:x_'='_x not
R30579:30582 Values Val rolm def
R30595:30595 Values <> m var
R30586:30593 Integers Int zero def
R30584:30584 Values <> x var
R30599:30601 Values Val and def
R30606:30609 Values Val Vint constr
R30611:30611 Values <> m var
R30603:30603 Values <> x var
R30670:30682 Integers Int rolm_zero thm
R30670:30682 Integers Int rolm_zero thm
prf 30699:30713 Val negate_cmp_bool
R30766:30768 Coq.Init.Logic <> :type_scope:x_'='_x not
R30732:30739 Values Val cmp_bool def
R30765:30765 Values <> y var
R30763:30763 Values <> x var
R30742:30758 Integers <> negate_comparison def
R30760:30760 Values <> c var
R30769:30778 Coqlib <> option_map def
R30786:30793 Values Val cmp_bool def
R30799:30799 Values <> y var
R30797:30797 Values <> x var
R30795:30795 Values <> c var
R30780:30783 Coq.Init.Datatypes <> negb def
R30857:30870 Integers Int negate_cmp thm
R30857:30870 Integers Int negate_cmp thm
prf 30893:30908 Val negate_cmpu_bool
R30984:30986 Coq.Init.Logic <> :type_scope:x_'='_x not
R30939:30947 Values Val cmpu_bool def
R30983:30983 Values <> y var
R30981:30981 Values <> x var
R30960:30976 Integers <> negate_comparison def
R30978:30978 Values <> c var
R30949:30957 Values <> valid_ptr var
R30987:30996 Coqlib <> option_map def
R31004:31012 Values Val cmpu_bool def
R31028:31028 Values <> y var
R31026:31026 Values <> x var
R31024:31024 Values <> c var
R31014:31022 Values <> valid_ptr var
R30998:31001 Coq.Init.Datatypes <> negb def
R31105:31107 Coq.Init.Logic <> :type_scope:x_'='_x not
R31063:31082 Values Val cmp_different_blocks def
R31085:31101 Integers <> negate_comparison def
R31103:31103 Values <> c var
R31108:31117 Coqlib <> option_map def
R31125:31144 Values Val cmp_different_blocks def
R31146:31146 Values <> c var
R31119:31122 Coq.Init.Datatypes <> negb def
R31105:31107 Coq.Init.Logic <> :type_scope:x_'='_x not
R31063:31082 Values Val cmp_different_blocks def
R31085:31101 Integers <> negate_comparison def
R31103:31103 Values <> c var
R31108:31117 Coqlib <> option_map def
R31125:31144 Values Val cmp_different_blocks def
R31146:31146 Values <> c var
R31119:31122 Coq.Init.Datatypes <> negb def
R31221:31235 Integers Int negate_cmpu thm
R31221:31235 Integers Int negate_cmpu thm
R31256:31261 Integers Int eq def
R31265:31272 Integers Int zero def
R31256:31261 Integers Int eq def
R31265:31272 Integers Int zero def
R31295:31300 Integers Int eq def
R31305:31312 Integers Int zero def
R31295:31300 Integers Int eq def
R31305:31312 Integers Int zero def
R31334:31341 Values Val eq_block def
R31334:31341 Values Val eq_block def
R31362:31362 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31427:31444 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31513:31513 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31391:31394 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R31376:31387 Integers Int unsigned def
R31422:31424 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R31408:31419 Integers Int unsigned def
R31475:31478 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R31459:31470 Integers Int unsigned def
R31508:31510 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R31493:31504 Integers Int unsigned def
R31362:31362 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31427:31444 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31513:31513 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31391:31394 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R31376:31387 Integers Int unsigned def
R31422:31424 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R31408:31419 Integers Int unsigned def
R31475:31478 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R31459:31470 Integers Int unsigned def
R31508:31510 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R31493:31504 Integers Int unsigned def
R31527:31541 Integers Int negate_cmpu thm
R31527:31541 Integers Int negate_cmpu thm
R31598:31601 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31583:31594 Integers Int unsigned def
R31616:31627 Integers Int unsigned def
R31598:31601 Coq.Init.Datatypes <> :bool_scope:x_'&&'_x not
R31583:31594 Integers Int unsigned def
R31616:31627 Integers Int unsigned def
prf 31653:31666 Val not_of_optbool
R31713:31715 Coq.Init.Logic <> :type_scope:x_'='_x not
R31682:31691 Values Val of_optbool def
R31694:31703 Coqlib <> option_map def
R31710:31711 Values <> ob var
R31705:31708 Coq.Init.Datatypes <> negb def
R31716:31722 Values Val notbool def
R31725:31734 Values Val of_optbool def
R31736:31737 Values <> ob var
prf 31802:31811 Val negate_cmp
R31861:31863 Coq.Init.Logic <> :type_scope:x_'='_x not
R31832:31834 Values Val cmp def
R31860:31860 Values <> y var
R31858:31858 Values <> x var
R31837:31853 Integers <> negate_comparison def
R31855:31855 Values <> c var
R31864:31870 Values Val notbool def
R31873:31875 Values Val cmp def
R31881:31881 Values <> y var
R31879:31879 Values <> x var
R31877:31877 Values <> c var
R31909:31911 Values Val cmp def
R31922:31936 Values Val negate_cmp_bool thm
R31922:31936 Values Val negate_cmp_bool thm
R31945:31958 Values Val not_of_optbool thm
R31945:31958 Values Val not_of_optbool thm
prf 31975:31985 Val negate_cmpu
R32056:32062 Coq.Init.Logic <> :type_scope:x_'='_x not
R32016:32019 Values Val cmpu def
R32055:32055 Values <> y var
R32053:32053 Values <> x var
R32032:32048 Integers <> negate_comparison def
R32050:32050 Values <> c var
R32021:32029 Values <> valid_ptr var
R32063:32069 Values Val notbool def
R32072:32075 Values Val cmpu def
R32091:32091 Values <> y var
R32089:32089 Values <> x var
R32087:32087 Values <> c var
R32077:32085 Values <> valid_ptr var
R32119:32122 Values Val cmpu def
R32133:32148 Values Val negate_cmpu_bool thm
R32133:32148 Values Val negate_cmpu_bool thm
R32157:32170 Values Val not_of_optbool thm
R32157:32170 Values Val not_of_optbool thm
prf 32187:32199 Val swap_cmp_bool
R32252:32254 Coq.Init.Logic <> :type_scope:x_'='_x not
R32220:32227 Values Val cmp_bool def
R32251:32251 Values <> y var
R32249:32249 Values <> x var
R32230:32244 Integers <> swap_comparison def
R32246:32246 Values <> c var
R32255:32262 Values Val cmp_bool def
R32268:32268 Values <> x var
R32266:32266 Values <> y var
R32264:32264 Values <> c var
R32325:32336 Integers Int swap_cmp thm
R32325:32336 Integers Int swap_cmp thm
prf 32359:32372 Val swap_cmpu_bool
R32446:32452 Coq.Init.Logic <> :type_scope:x_'='_x not
R32403:32411 Values Val cmpu_bool def
R32445:32445 Values <> y var
R32443:32443 Values <> x var
R32424:32438 Integers <> swap_comparison def
R32440:32440 Values <> c var
R32413:32421 Values <> valid_ptr var
R32453:32461 Values Val cmpu_bool def
R32477:32477 Values <> x var
R32475:32475 Values <> y var
R32473:32473 Values <> c var
R32463:32471 Values <> valid_ptr var
R32547:32549 Coq.Init.Logic <> :type_scope:x_'='_x not
R32507:32526 Values Val cmp_different_blocks def
R32529:32543 Integers <> swap_comparison def
R32545:32545 Values <> c var
R32550:32569 Values Val cmp_different_blocks def
R32571:32571 Values <> c var
R32547:32549 Coq.Init.Logic <> :type_scope:x_'='_x not
R32507:32526 Values Val cmp_different_blocks def
R32529:32543 Integers <> swap_comparison def
R32545:32545 Values <> c var
R32550:32569 Values Val cmp_different_blocks def
R32571:32571 Values <> c var
R32646:32658 Integers Int swap_cmpu thm
R32646:32658 Integers Int swap_cmpu thm
R32675:32680 Integers Int eq def
R32684:32691 Integers Int zero def
R32675:32680 Integers Int eq def
R32684:32691 Integers Int zero def
R32709:32714 Integers Int eq def
R32719:32726 Integers Int zero def
R32709:32714 Integers Int eq def
R32719:32726 Integers Int zero def
R32748:32755 Values Val eq_block def
R32748:32755 Values Val eq_block def
R32781:32791 Coqlib <> dec_eq_true thm
R32781:32791 Coqlib <> dec_eq_true thm
R32835:32838 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R32820:32831 Integers Int unsigned def
R32867:32869 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32853:32864 Integers Int unsigned def
R32917:32920 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R32901:32912 Integers Int unsigned def
R32950:32952 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32935:32946 Integers Int unsigned def
R32835:32838 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R32820:32831 Integers Int unsigned def
R32867:32869 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32853:32864 Integers Int unsigned def
R32917:32920 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R32901:32912 Integers Int unsigned def
R32950:32952 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32935:32946 Integers Int unsigned def
R32917:32920 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R32901:32912 Integers Int unsigned def
R32950:32952 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R32935:32946 Integers Int unsigned def
R32983:32995 Integers Int swap_cmpu thm
R32983:32995 Integers Int swap_cmpu thm
R33014:33025 Coqlib <> dec_eq_false thm
R33014:33025 Coqlib <> dec_eq_false thm
R33061:33072 Integers Int unsigned def
R33107:33118 Integers Int unsigned def
R33061:33072 Integers Int unsigned def
R33107:33118 Integers Int unsigned def
R33107:33118 Integers Int unsigned def
prf 33153:33166 Val negate_cmpf_eq
R33209:33211 Coq.Init.Logic <> :type_scope:x_'='_x not
R33185:33191 Values Val notbool def
R33194:33197 Values Val cmpf def
R33206:33207 Values <> v2 var
R33203:33204 Values <> v1 var
R33199:33201 Integers <> Cne constr
R33212:33215 Values Val cmpf def
R33224:33225 Values <> v2 var
R33221:33222 Values <> v1 var
R33217:33219 Integers <> Ceq constr
R33276:33279 Values Val cmpf def
R33282:33290 Values Val cmpf_bool def
R33304:33318 Floats Float cmp_ne_eq thm
R33304:33318 Floats Float cmp_ne_eq thm
R33331:33339 Floats Float cmp def
R33341:33343 Integers <> Ceq constr
R33331:33339 Floats Float cmp def
R33341:33343 Integers <> Ceq constr
prf 33372:33385 Val negate_cmpf_ne
R33428:33430 Coq.Init.Logic <> :type_scope:x_'='_x not
R33404:33410 Values Val notbool def
R33413:33416 Values Val cmpf def
R33425:33426 Values <> v2 var
R33422:33423 Values <> v1 var
R33418:33420 Integers <> Ceq constr
R33431:33434 Values Val cmpf def
R33443:33444 Values <> v2 var
R33440:33441 Values <> v1 var
R33436:33438 Integers <> Cne constr
R33495:33498 Values Val cmpf def
R33501:33509 Values Val cmpf_bool def
R33523:33537 Floats Float cmp_ne_eq thm
R33523:33537 Floats Float cmp_ne_eq thm
R33550:33558 Floats Float cmp def
R33560:33562 Integers <> Ceq constr
R33550:33558 Floats Float cmp def
R33560:33562 Integers <> Ceq constr
prf 33591:33597 Val cmpf_le
R33630:33632 Coq.Init.Logic <> :type_scope:x_'='_x not
R33616:33619 Values Val cmpf def
R33628:33629 Values <> v2 var
R33625:33626 Values <> v1 var
R33621:33623 Integers <> Cle constr
R33633:33634 Values Val or def
R33654:33657 Values Val cmpf def
R33666:33667 Values <> v2 var
R33663:33664 Values <> v1 var
R33659:33661 Integers <> Ceq constr
R33637:33640 Values Val cmpf def
R33649:33650 Values <> v2 var
R33646:33647 Values <> v1 var
R33642:33644 Integers <> Clt constr
R33719:33722 Values Val cmpf def
R33725:33733 Values Val cmpf_bool def
R33747:33764 Floats Float cmp_le_lt_eq thm
R33747:33764 Floats Float cmp_le_lt_eq thm
R33779:33787 Floats Float cmp def
R33789:33791 Integers <> Clt constr
R33810:33818 Floats Float cmp def
R33820:33822 Integers <> Ceq constr
R33779:33787 Floats Float cmp def
R33789:33791 Integers <> Clt constr
R33810:33818 Floats Float cmp def
R33820:33822 Integers <> Ceq constr
R33810:33818 Floats Float cmp def
R33820:33822 Integers <> Ceq constr
prf 33851:33857 Val cmpf_ge
R33890:33892 Coq.Init.Logic <> :type_scope:x_'='_x not
R33876:33879 Values Val cmpf def
R33888:33889 Values <> v2 var
R33885:33886 Values <> v1 var
R33881:33883 Integers <> Cge constr
R33893:33894 Values Val or def
R33914:33917 Values Val cmpf def
R33926:33927 Values <> v2 var
R33923:33924 Values <> v1 var
R33919:33921 Integers <> Ceq constr
R33897:33900 Values Val cmpf def
R33909:33910 Values <> v2 var
R33906:33907 Values <> v1 var
R33902:33904 Integers <> Cgt constr
R33979:33982 Values Val cmpf def
R33985:33993 Values Val cmpf_bool def
R34007:34024 Floats Float cmp_ge_gt_eq thm
R34007:34024 Floats Float cmp_ge_gt_eq thm
R34039:34047 Floats Float cmp def
R34049:34051 Integers <> Cgt constr
R34070:34078 Floats Float cmp def
R34080:34082 Integers <> Ceq constr
R34039:34047 Floats Float cmp def
R34049:34051 Integers <> Cgt constr
R34070:34078 Floats Float cmp def
R34080:34082 Integers <> Ceq constr
R34070:34078 Floats Float cmp def
R34080:34082 Integers <> Ceq constr
prf 34111:34126 Val cmp_ne_0_optbool
R34181:34183 Coq.Init.Logic <> :type_scope:x_'='_x not
R34142:34144 Values Val cmp def
R34167:34170 Values Val Vint constr
R34172:34179 Integers Int zero def
R34151:34160 Values Val of_optbool def
R34162:34163 Values <> ob var
R34146:34148 Integers <> Cne constr
R34184:34193 Values Val of_optbool def
R34195:34196 Values <> ob var
prf 34275:34290 Val cmp_eq_1_optbool
R34344:34346 Coq.Init.Logic <> :type_scope:x_'='_x not
R34306:34308 Values Val cmp def
R34331:34334 Values Val Vint constr
R34336:34342 Integers Int one def
R34315:34324 Values Val of_optbool def
R34326:34327 Values <> ob var
R34310:34312 Integers <> Ceq constr
R34347:34356 Values Val of_optbool def
R34358:34359 Values <> ob var
prf 34438:34453 Val cmp_eq_0_optbool
R34508:34510 Coq.Init.Logic <> :type_scope:x_'='_x not
R34469:34471 Values Val cmp def
R34494:34497 Values Val Vint constr
R34499:34506 Integers Int zero def
R34478:34487 Values Val of_optbool def
R34489:34490 Values <> ob var
R34473:34475 Integers <> Ceq constr
R34511:34520 Values Val of_optbool def
R34523:34532 Coqlib <> option_map def
R34539:34540 Values <> ob var
R34534:34537 Coq.Init.Datatypes <> negb def
prf 34620:34635 Val cmp_ne_1_optbool
R34689:34691 Coq.Init.Logic <> :type_scope:x_'='_x not
R34651:34653 Values Val cmp def
R34676:34679 Values Val Vint constr
R34681:34687 Integers Int one def
R34660:34669 Values Val of_optbool def
R34671:34672 Values <> ob var
R34655:34657 Integers <> Cne constr
R34692:34701 Values Val of_optbool def
R34704:34713 Coqlib <> option_map def
R34720:34721 Values <> ob var
R34715:34718 Coq.Init.Datatypes <> negb def
prf 34801:34817 Val cmpu_ne_0_optbool
R34895:34897 Coq.Init.Logic <> :type_scope:x_'='_x not
R34845:34848 Values Val cmpu def
R34881:34884 Values Val Vint constr
R34886:34893 Integers Int zero def
R34865:34874 Values Val of_optbool def
R34876:34877 Values <> ob var
R34860:34862 Integers <> Cne constr
R34850:34858 Values <> valid_ptr var
R34898:34907 Values Val of_optbool def
R34909:34910 Values <> ob var
prf 34989:35005 Val cmpu_eq_1_optbool
R35082:35084 Coq.Init.Logic <> :type_scope:x_'='_x not
R35033:35036 Values Val cmpu def
R35069:35072 Values Val Vint constr
R35074:35080 Integers Int one def
R35053:35062 Values Val of_optbool def
R35064:35065 Values <> ob var
R35048:35050 Integers <> Ceq constr
R35038:35046 Values <> valid_ptr var
R35085:35094 Values Val of_optbool def
R35096:35097 Values <> ob var
prf 35176:35192 Val cmpu_eq_0_optbool
R35270:35272 Coq.Init.Logic <> :type_scope:x_'='_x not
R35220:35223 Values Val cmpu def
R35256:35259 Values Val Vint constr
R35261:35268 Integers Int zero def
R35240:35249 Values Val of_optbool def
R35251:35252 Values <> ob var
R35235:35237 Integers <> Ceq constr
R35225:35233 Values <> valid_ptr var
R35273:35282 Values Val of_optbool def
R35285:35294 Coqlib <> option_map def
R35301:35302 Values <> ob var
R35296:35299 Coq.Init.Datatypes <> negb def
prf 35382:35398 Val cmpu_ne_1_optbool
R35475:35477 Coq.Init.Logic <> :type_scope:x_'='_x not
R35426:35429 Values Val cmpu def
R35462:35465 Values Val Vint constr
R35467:35473 Integers Int one def
R35446:35455 Values Val of_optbool def
R35457:35458 Values <> ob var
R35441:35443 Integers <> Cne constr
R35431:35439 Values <> valid_ptr var
R35478:35487 Values Val of_optbool def
R35490:35499 Coqlib <> option_map def
R35506:35507 Values <> ob var
R35501:35504 Coq.Init.Datatypes <> negb def
prf 35585:35596 Val zero_ext_and
R35659:35661 Coq.Init.Logic <> :type_scope:x_'='_x not
R35643:35654 Values Val zero_ext def
R35658:35658 Values <> v var
R35656:35656 Values <> n var
R35662:35668 Values Val and def
R35673:35676 Values Val Vint constr
R35679:35686 Integers Int repr def
R35696:35698 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R35689:35693 Coq.ZArith.Zpower <> two_p def
R35695:35695 Values <> n var
R35670:35670 Values <> v var
R35617:35619 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R35621:35623 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x_'<'_x not
R35620:35620 Values <> n var
R35620:35620 Values <> n var
R35624:35636 Integers Int zwordsize def
R35760:35775 Integers Int zero_ext_and thm
R35760:35775 Integers Int zero_ext_and thm
prf 35803:35814 Val rolm_lt_zero
R35851:35853 Coq.Init.Logic <> :type_scope:x_'='_x not
R35829:35832 Values Val rolm def
R35844:35850 Integers Int one def
R35836:35842 Integers Int one def
R35834:35834 Values <> v var
R35854:35856 Values Val cmp def
R35865:35868 Values Val Vint constr
R35870:35877 Integers Int zero def
R35862:35862 Values <> v var
R35858:35860 Integers <> Clt constr
R35905:35907 Values Val cmp def
R35910:35917 Values Val cmp_bool def
R35961:35964 Values Val Vint constr
R35967:35974 Integers Int shru def
R35979:35986 Integers Int repr def
R36002:36004 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R35989:36001 Integers Int zwordsize def
R35961:35964 Values Val Vint constr
R35967:35974 Integers Int shru def
R35979:35986 Integers Int repr def
R36002:36004 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R35989:36001 Integers Int zwordsize def
R36039:36051 Integers Int shru_rolm thm
R36039:36051 Integers Int shru_rolm thm
R36077:36092 Integers Int shru_lt_zero thm
R36077:36092 Integers Int shru_lt_zero thm
R36105:36110 Integers Int lt def
R36114:36121 Integers Int zero def
R36105:36110 Integers Int lt def
R36114:36121 Integers Int zero def
prf 36144:36155 Val rolm_ge_zero
R36215:36217 Coq.Init.Logic <> :type_scope:x_'='_x not
R36172:36174 Values Val xor def
R36202:36205 Values Val Vint constr
R36207:36213 Integers Int one def
R36177:36180 Values Val rolm def
R36192:36198 Integers Int one def
R36184:36190 Integers Int one def
R36182:36182 Values <> v var
R36218:36220 Values Val cmp def
R36229:36232 Values Val Vint constr
R36234:36241 Integers Int zero def
R36226:36226 Values <> v var
R36222:36224 Integers <> Cge constr
R36270:36281 Values Val rolm_lt_zero thm
R36270:36281 Values Val rolm_lt_zero thm
R36318:36320 Values Val cmp def
R36340:36345 Integers Int lt def
R36349:36356 Integers Int zero def
R36340:36345 Integers Int lt def
R36349:36356 Integers Int zero def
ind 36530:36536 Val lessdef
constr 36565:36576 Val lessdef_refl
constr 36605:36617 Val lessdef_undef
R36546:36548 Values Val val ind
R36539:36541 Values Val val ind
R36589:36595 Values <> lessdef ind
R36599:36599 Values <> v var
R36597:36597 Values <> v var
R36630:36636 Values <> lessdef ind
R36645:36645 Values <> v var
R36638:36643 Values Val Vundef constr
prf 36655:36666 Val lessdef_same
R36696:36702 Values Val lessdef ind
R36707:36708 Values <> v2 var
R36704:36705 Values <> v1 var
R36687:36689 Coq.Init.Logic <> :type_scope:x_'='_x not
R36685:36686 Values <> v1 var
R36690:36691 Values <> v2 var
prf 36763:36775 Val lessdef_trans
R36831:36837 Values Val lessdef ind
R36842:36843 Values <> v3 var
R36839:36840 Values <> v1 var
R36814:36820 Values Val lessdef ind
R36825:36826 Values <> v3 var
R36822:36823 Values <> v2 var
R36797:36803 Values Val lessdef ind
R36808:36809 Values <> v2 var
R36805:36806 Values <> v1 var
ind 36905:36916 Val lessdef_list
constr 36955:36970 Val lessdef_list_nil
constr 37004:37020 Val lessdef_list_cons
R36931:36934 Coq.Init.Datatypes <> list ind
R36936:36938 Values Val val ind
R36919:36922 Coq.Init.Datatypes <> list ind
R36924:36926 Values Val val ind
R36979:36990 Values <> lessdef_list ind
R36996:36998 Coq.Init.Datatypes <> nil constr
R36992:36994 Coq.Init.Datatypes <> nil constr
R37104:37115 Values <> lessdef_list ind
R37132:37135 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37130:37131 Values <> v2 var
R37136:37138 Values <> vl2 var
R37120:37123 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R37118:37119 Values <> v1 var
R37124:37126 Values <> vl1 var
R37074:37085 Values <> lessdef_list ind
R37091:37093 Values <> vl2 var
R37087:37089 Values <> vl1 var
R37057:37063 Values Val lessdef ind
R37068:37069 Values <> v2 var
R37065:37066 Values <> v1 var
R37156:37167 Values Val lessdef_refl constr
R37169:37181 Values Val lessdef_undef constr
R37183:37198 Values Val lessdef_list_nil constr
R37200:37216 Values Val lessdef_list_cons constr
prf 37226:37241 Val lessdef_list_inv
R37295:37298 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R37289:37291 Coq.Init.Logic <> :type_scope:x_'='_x not
R37286:37288 Values <> vl1 var
R37292:37294 Values <> vl2 var
R37299:37300 Coq.Lists.List <> In def
R37309:37311 Values <> vl1 var
R37302:37307 Values Val Vundef constr
R37262:37273 Values Val lessdef_list ind
R37279:37281 Values <> vl2 var
R37275:37277 Values <> vl1 var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
prf 37498:37516 Val load_result_lessdef
R37560:37566 Values Val lessdef ind
R37592:37602 Values Val load_result def
R37610:37611 Values <> v2 var
R37604:37608 Values <> chunk var
R37569:37579 Values Val load_result def
R37587:37588 Values <> v1 var
R37581:37585 Values <> chunk var
R37543:37549 Values Val lessdef ind
R37554:37555 Values <> v2 var
R37551:37552 Values <> v1 var
prf 37686:37701 Val zero_ext_lessdef
R37739:37745 Values Val lessdef ind
R37764:37771 Values Val zero_ext def
R37775:37776 Values <> v2 var
R37773:37773 Values <> n var
R37748:37755 Values Val zero_ext def
R37759:37760 Values <> v1 var
R37757:37757 Values <> n var
R37722:37728 Values Val lessdef ind
R37733:37734 Values <> v2 var
R37730:37731 Values <> v1 var
prf 37829:37844 Val sign_ext_lessdef
R37882:37888 Values Val lessdef ind
R37907:37914 Values Val sign_ext def
R37918:37919 Values <> v2 var
R37916:37916 Values <> n var
R37891:37898 Values Val sign_ext def
R37902:37903 Values <> v1 var
R37900:37900 Values <> n var
R37865:37871 Values Val lessdef ind
R37876:37877 Values <> v2 var
R37873:37874 Values <> v1 var
prf 37972:37992 Val singleoffloat_lessdef
R38028:38034 Values Val lessdef ind
R38056:38068 Values Val singleoffloat def
R38070:38071 Values <> v2 var
R38037:38049 Values Val singleoffloat def
R38051:38052 Values <> v1 var
R38011:38017 Values Val lessdef ind
R38022:38023 Values <> v2 var
R38019:38020 Values <> v1 var
prf 38124:38134 Val add_lessdef
R38199:38205 Values Val lessdef ind
R38220:38222 Values Val add def
R38228:38230 Values <> v2' var
R38224:38226 Values <> v1' var
R38208:38210 Values Val add def
R38215:38216 Values <> v2 var
R38212:38213 Values <> v1 var
R38181:38187 Values Val lessdef ind
R38192:38194 Values <> v2' var
R38189:38190 Values <> v2 var
R38163:38169 Values Val lessdef ind
R38174:38176 Values <> v1' var
R38171:38172 Values <> v1 var
prf 38324:38340 Val cmpu_bool_lessdef
R38575:38577 Coq.Init.Logic <> :type_scope:x_'='_x not
R38545:38553 Values Val cmpu_bool def
R38572:38574 Values <> v2' var
R38568:38570 Values <> v1' var
R38566:38566 Values <> c var
R38555:38564 Values <> valid_ptr' var
R38578:38581 Coq.Init.Datatypes <> Some constr
R38583:38583 Values <> b var
R38530:38532 Coq.Init.Logic <> :type_scope:x_'='_x not
R38503:38511 Values Val cmpu_bool def
R38528:38529 Values <> v2 var
R38525:38526 Values <> v1 var
R38523:38523 Values <> c var
R38513:38521 Values <> valid_ptr var
R38533:38536 Coq.Init.Datatypes <> Some constr
R38538:38538 Values <> b var
R38483:38489 Values Val lessdef ind
R38494:38496 Values <> v2' var
R38491:38492 Values <> v2 var
R38465:38471 Values Val lessdef ind
R38476:38478 Values <> v1' var
R38473:38474 Values <> v1 var
R38451:38453 Coq.Init.Logic <> :type_scope:x_'='_x not
R38435:38444 Values <> valid_ptr' var
R38448:38450 Values <> ofs var
R38446:38446 Values <> b var
R38454:38457 Coq.Init.Datatypes <> true constr
R38424:38426 Coq.Init.Logic <> :type_scope:x_'='_x not
R38409:38417 Values <> valid_ptr var
R38421:38423 Values <> ofs var
R38419:38419 Values <> b var
R38427:38430 Coq.Init.Datatypes <> true constr
R38739:38746 Values Val eq_block def
R38739:38746 Values Val eq_block def
R38897:38899 Coq.Init.Logic <> :type_scope:x_'='_x not
R38871:38874 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R38868:38870 Values <> ofs var
R38866:38866 Values <> b var
R38892:38894 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R38889:38891 Values <> ofs var
R38886:38886 Values <> b var
R38900:38903 Coq.Init.Datatypes <> true constr
R38820:38822 Coq.Init.Logic <> :type_scope:x_'='_x not
R38795:38798 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R38792:38794 Values <> ofs var
R38790:38790 Values <> b var
R38815:38817 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R38812:38814 Values <> ofs var
R38809:38809 Values <> b var
R38823:38826 Coq.Init.Datatypes <> true constr
R38897:38899 Coq.Init.Logic <> :type_scope:x_'='_x not
R38871:38874 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R38868:38870 Values <> ofs var
R38866:38866 Values <> b var
R38892:38894 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R38889:38891 Values <> ofs var
R38886:38886 Values <> b var
R38900:38903 Coq.Init.Datatypes <> true constr
R38820:38822 Coq.Init.Logic <> :type_scope:x_'='_x not
R38795:38798 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R38792:38794 Values <> ofs var
R38790:38790 Values <> b var
R38815:38817 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R38812:38814 Values <> ofs var
R38809:38809 Values <> b var
R38823:38826 Coq.Init.Datatypes <> true constr
R38939:38950 Coq.Bool.Bool <> orb_true_iff thm
R38939:38950 Coq.Bool.Bool <> orb_true_iff thm
R38939:38950 Coq.Bool.Bool <> orb_true_iff thm
R38939:38950 Coq.Bool.Bool <> orb_true_iff thm
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R0:-1 Values <> y var
R39006:39009 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R38991:39002 Integers Int unsigned def
R39038:39040 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39024:39035 Integers Int unsigned def
R39006:39009 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R38991:39002 Integers Int unsigned def
R39038:39040 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39024:39035 Integers Int unsigned def
R39112:39115 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R39096:39107 Integers Int unsigned def
R39145:39147 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39130:39141 Integers Int unsigned def
R39112:39115 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R39096:39107 Integers Int unsigned def
R39145:39147 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R39130:39141 Integers Int unsigned def
R39234:39245 Integers Int unsigned def
R39234:39245 Integers Int unsigned def
R39302:39313 Integers Int unsigned def
R39302:39313 Integers Int unsigned def
prf 39387:39404 Val of_optbool_lessdef
R39471:39477 Values Val lessdef ind
R39496:39505 Values Val of_optbool def
R39507:39509 Values <> ob' var
R39480:39489 Values Val of_optbool def
R39491:39492 Values <> ob var
R39455:39457 Coq.Init.Logic <> :type_scope:x_'='_x not
R39452:39454 Values <> ob' var
R39458:39461 Coq.Init.Datatypes <> Some constr
R39463:39463 Values <> b var
R39439:39441 Coq.Init.Logic <> :type_scope:x_'='_x not
R39437:39438 Values <> ob var
R39442:39445 Coq.Init.Datatypes <> Some constr
R39447:39447 Values <> b var
prf 39590:39608 Val longofwords_lessdef
R39673:39679 Values Val lessdef ind
R39702:39712 Values Val longofwords def
R39718:39720 Values <> v2' var
R39714:39716 Values <> v1' var
R39682:39692 Values Val longofwords def
R39697:39698 Values <> v2 var
R39694:39695 Values <> v1 var
R39655:39661 Values Val lessdef ind
R39666:39668 Values <> v2' var
R39663:39664 Values <> v2 var
R39637:39643 Values Val lessdef ind
R39648:39650 Values <> v1' var
R39645:39646 Values <> v1 var
R39748:39758 Values Val longofwords def
prf 39820:39833 Val loword_lessdef
R39867:39873 Values Val lessdef ind
R39887:39892 Values Val loword def
R39894:39895 Values <> v' var
R39876:39881 Values Val loword def
R39883:39883 Values <> v var
R39851:39857 Values Val lessdef ind
R39861:39862 Values <> v' var
R39859:39859 Values <> v var
prf 39942:39955 Val hiword_lessdef
R39989:39995 Values Val lessdef ind
R40009:40014 Values Val hiword def
R40016:40017 Values <> v' var
R39998:40003 Values Val hiword def
R40005:40005 Values <> v var
R39973:39979 Values Val lessdef ind
R39983:39984 Values <> v' var
R39981:39981 Values <> v var
R40062:40064 Values Val <> mod
def 40512:40517 <> meminj
R40538:40543 Coq.Init.Datatypes <> option ind
R40551:40553 Coq.Init.Datatypes <> :type_scope:x_'*'_x not
R40546:40550 Values <> block def
R40554:40554 Coq.Numbers.BinNums <> Z ind
R40529:40533 Values <> block def
ind 40806:40815 <> val_inject
constr 40857:40870 <> val_inject_int
constr 40925:40939 <> val_inject_long
constr 40996:41011 <> val_inject_float
constr 41070:41086 <> val_inject_single
constr 41147:41160 <> val_inject_ptr
constr 41333:41348 <> val_inject_undef
R40822:40827 Values <> meminj def
R40838:40840 Values <> val ind
R40831:40833 Values <> val ind
R40889:40898 Values <> val_inject ind
R40913:40916 Values <> Vint constr
R40918:40918 Values <> i var
R40904:40907 Values <> Vint constr
R40909:40909 Values <> i var
R40958:40967 Values <> val_inject ind
R40983:40987 Values <> Vlong constr
R40989:40989 Values <> i var
R40973:40977 Values <> Vlong constr
R40979:40979 Values <> i var
R41030:41039 Values <> val_inject ind
R41056:41061 Values <> Vfloat constr
R41063:41063 Values <> f var
R41045:41050 Values <> Vfloat constr
R41052:41052 Values <> f var
R41105:41114 Values <> val_inject ind
R41132:41138 Values <> Vsingle constr
R41140:41140 Values <> f var
R41120:41126 Values <> Vsingle constr
R41128:41128 Values <> f var
R41285:41294 Values <> val_inject ind
R41315:41318 Values <> Vptr constr
R41323:41326 Values <> ofs2 var
R41320:41321 Values <> b2 var
R41300:41303 Values <> Vptr constr
R41308:41311 Values <> ofs1 var
R41305:41306 Values <> b1 var
R41243:41245 Coq.Init.Logic <> :type_scope:x_'='_x not
R41239:41242 Values <> ofs2 var
R41246:41252 Integers Int add def
R41260:41267 Integers Int repr def
R41269:41273 Values <> delta var
R41254:41257 Values <> ofs1 var
R41210:41212 Coq.Init.Logic <> :type_scope:x_'='_x not
R41208:41209 Values <> b1 var
R41213:41216 Coq.Init.Datatypes <> Some constr
R41218:41218 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41221:41222 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41228:41228 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R41219:41220 Values <> b2 var
R41223:41227 Values <> delta var
R41367:41376 Values <> val_inject ind
R41388:41388 Values <> v var
R41381:41386 Values <> Vundef constr
R41410:41419 Values <> val_inject ind
ind 41433:41447 <> val_list_inject
constr 41498:41511 <> val_nil_inject
constr 41552:41566 <> val_cons_inject
R41454:41459 Values <> meminj def
R41475:41478 Coq.Init.Datatypes <> list ind
R41480:41482 Values <> val ind
R41463:41466 Coq.Init.Datatypes <> list ind
R41468:41470 Values <> val ind
R41521:41535 Values <> val_list_inject ind
R41544:41546 Coq.Init.Datatypes <> nil constr
R41540:41542 Coq.Init.Datatypes <> nil constr
R41654:41668 Values <> val_list_inject ind
R41686:41689 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41684:41685 Values <> v' var
R41690:41692 Values <> vl' var
R41675:41678 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R41674:41674 Values <> v var
R41679:41680 Values <> vl var
R41620:41634 Values <> val_list_inject ind
R41642:41644 Values <> vl' var
R41639:41640 Values <> vl var
R41598:41607 Values <> val_inject ind
R41614:41615 Values <> v' var
R41612:41612 Values <> v var
R41712:41725 Values <> val_nil_inject constr
R41727:41741 Values <> val_cons_inject constr
sec 41753:41763 <> VAL_INJ_OPS
var 41776:41776 VAL_INJ_OPS f
R41779:41784 Values <> meminj def
prf 41794:41815 <> val_load_result_inject
R41866:41875 Values <> val_inject ind
R41907:41921 Values Val load_result def
R41929:41930 Values <> v2 var
R41923:41927 Values <> chunk var
R41880:41894 Values Val load_result def
R41902:41903 Values <> v1 var
R41896:41900 Values <> chunk var
R41877:41877 Values <> VAL_INJ_OPS.f var
R41842:41851 Values <> val_inject ind
R41858:41859 Values <> v2 var
R41855:41856 Values <> v1 var
R41853:41853 Values <> VAL_INJ_OPS.f var
prf 42015:42028 <> val_add_inject
R42107:42116 Values <> val_inject ind
R42137:42143 Values Val add def
R42149:42151 Values <> v2' var
R42145:42147 Values <> v1' var
R42121:42127 Values Val add def
R42132:42133 Values <> v2 var
R42129:42130 Values <> v1 var
R42118:42118 Values <> VAL_INJ_OPS.f var
R42082:42091 Values <> val_inject ind
R42098:42100 Values <> v2' var
R42095:42096 Values <> v2 var
R42093:42093 Values <> VAL_INJ_OPS.f var
R42057:42066 Values <> val_inject ind
R42073:42075 Values <> v1' var
R42070:42071 Values <> v1 var
R42068:42068 Values <> VAL_INJ_OPS.f var
R42232:42244 Integers Int add_assoc thm
R42232:42244 Integers Int add_assoc thm
R42232:42244 Integers Int add_assoc thm
R42232:42244 Integers Int add_assoc thm
R42260:42273 Integers Int add_commut thm
R42260:42273 Integers Int add_commut thm
R42293:42305 Integers Int add_assoc thm
R42293:42305 Integers Int add_assoc thm
R42293:42305 Integers Int add_assoc thm
R42293:42305 Integers Int add_assoc thm
R42321:42334 Integers Int add_commut thm
R42321:42334 Integers Int add_commut thm
prf 42350:42363 <> val_sub_inject
R42442:42451 Values <> val_inject ind
R42472:42478 Values Val sub def
R42484:42486 Values <> v2' var
R42480:42482 Values <> v1' var
R42456:42462 Values Val sub def
R42467:42468 Values <> v2 var
R42464:42465 Values <> v1 var
R42453:42453 Values <> VAL_INJ_OPS.f var
R42417:42426 Values <> val_inject ind
R42433:42435 Values <> v2' var
R42430:42431 Values <> v2 var
R42428:42428 Values <> VAL_INJ_OPS.f var
R42392:42401 Values <> val_inject ind
R42408:42410 Values <> v1' var
R42405:42406 Values <> v1 var
R42403:42403 Values <> VAL_INJ_OPS.f var
R42566:42578 Integers Int sub_add_l thm
R42566:42578 Integers Int sub_add_l thm
R42599:42606 Values <> eq_block def
R42599:42606 Values <> eq_block def
R42661:42671 Coqlib <> dec_eq_true thm
R42661:42671 Coqlib <> dec_eq_true thm
R42685:42699 Integers Int sub_shifted thm
R42685:42699 Integers Int sub_shifted thm
prf 42720:42738 <> val_cmp_bool_inject
R42878:42880 Coq.Init.Logic <> :type_scope:x_'='_x not
R42856:42867 Values Val cmp_bool def
R42875:42877 Values <> v2' var
R42871:42873 Values <> v1' var
R42869:42869 Values <> c var
R42881:42884 Coq.Init.Datatypes <> Some constr
R42886:42886 Values <> b var
R42841:42843 Coq.Init.Logic <> :type_scope:x_'='_x not
R42821:42832 Values Val cmp_bool def
R42839:42840 Values <> v2 var
R42836:42837 Values <> v1 var
R42834:42834 Values <> c var
R42844:42847 Coq.Init.Datatypes <> Some constr
R42849:42849 Values <> b var
R42796:42805 Values <> val_inject ind
R42812:42814 Values <> v2' var
R42809:42810 Values <> v2 var
R42807:42807 Values <> VAL_INJ_OPS.f var
R42771:42780 Values <> val_inject ind
R42787:42789 Values <> v1' var
R42784:42785 Values <> v1 var
R42782:42782 Values <> VAL_INJ_OPS.f var
var 43012:43021 VAL_INJ_OPS valid_ptr1
var 43023:43032 VAL_INJ_OPS valid_ptr2
R43050:43053 Coq.Init.Datatypes <> bool ind
R43045:43045 Coq.Numbers.BinNums <> Z ind
R43036:43040 Values <> block def
var 43062:43076 VAL_INJ_OPS weak_valid_ptr1
R43103:43106 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R43087:43096 Values <> VAL_INJ_OPS.valid_ptr1 var
R43100:43102 Values <> ofs var
R43098:43098 Values <> b var
R43107:43116 Values <> VAL_INJ_OPS.valid_ptr1 var
R43124:43126 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43121:43123 Values <> ofs var
R43118:43118 Values <> b var
var 43135:43149 VAL_INJ_OPS weak_valid_ptr2
R43176:43179 Coq.Init.Datatypes <> :bool_scope:x_'||'_x not
R43160:43169 Values <> VAL_INJ_OPS.valid_ptr2 var
R43173:43175 Values <> ofs var
R43171:43171 Values <> b var
R43180:43189 Values <> VAL_INJ_OPS.valid_ptr2 var
R43197:43199 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R43194:43196 Values <> ofs var
R43191:43191 Values <> b var
var 43216:43228 VAL_INJ_OPS valid_ptr_inj
R43391:43393 Coq.Init.Logic <> :type_scope:x_'='_x not
R43332:43341 Values <> VAL_INJ_OPS.valid_ptr2 var
R43347:43358 Integers Int unsigned def
R43361:43367 Integers Int add def
R43374:43381 Integers Int repr def
R43383:43387 Values <> delta var
R43369:43371 Values <> ofs var
R43343:43344 Values <> b2 var
R43394:43397 Coq.Init.Datatypes <> true constr
R43319:43321 Coq.Init.Logic <> :type_scope:x_'='_x not
R43287:43296 Values <> VAL_INJ_OPS.valid_ptr1 var
R43302:43313 Integers Int unsigned def
R43315:43317 Values <> ofs var
R43298:43299 Values <> b1 var
R43322:43325 Coq.Init.Datatypes <> true constr
R43263:43265 Coq.Init.Logic <> :type_scope:x_'='_x not
R43259:43259 Values <> VAL_INJ_OPS.f var
R43261:43262 Values <> b1 var
R43266:43269 Coq.Init.Datatypes <> Some constr
R43270:43270 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43273:43274 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43280:43280 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43271:43272 Values <> b2 var
R43275:43279 Values <> delta var
var 43412:43429 VAL_INJ_OPS weak_valid_ptr_inj
R43602:43604 Coq.Init.Logic <> :type_scope:x_'='_x not
R43538:43552 Values <> VAL_INJ_OPS.weak_valid_ptr2 var
R43558:43569 Integers Int unsigned def
R43572:43578 Integers Int add def
R43585:43592 Integers Int repr def
R43594:43598 Values <> delta var
R43580:43582 Values <> ofs var
R43554:43555 Values <> b2 var
R43605:43608 Coq.Init.Datatypes <> true constr
R43525:43527 Coq.Init.Logic <> :type_scope:x_'='_x not
R43488:43502 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R43508:43519 Integers Int unsigned def
R43521:43523 Values <> ofs var
R43504:43505 Values <> b1 var
R43528:43531 Coq.Init.Datatypes <> true constr
R43464:43466 Coq.Init.Logic <> :type_scope:x_'='_x not
R43460:43460 Values <> VAL_INJ_OPS.f var
R43462:43463 Values <> b1 var
R43467:43470 Coq.Init.Datatypes <> Some constr
R43471:43471 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43474:43475 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43481:43481 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43472:43473 Values <> b2 var
R43476:43480 Values <> delta var
var 43623:43648 VAL_INJ_OPS weak_valid_ptr_no_overflow
R43758:43761 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R43810:43813 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<='_x not
R43778:43780 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R43762:43773 Integers Int unsigned def
R43775:43777 Values <> ofs var
R43781:43792 Integers Int unsigned def
R43795:43802 Integers Int repr def
R43804:43808 Values <> delta var
R43778:43780 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R43762:43773 Integers Int unsigned def
R43775:43777 Values <> ofs var
R43781:43792 Integers Int unsigned def
R43795:43802 Integers Int repr def
R43804:43808 Values <> delta var
R43814:43829 Integers Int max_unsigned def
R43744:43746 Coq.Init.Logic <> :type_scope:x_'='_x not
R43707:43721 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R43727:43738 Integers Int unsigned def
R43740:43742 Values <> ofs var
R43723:43724 Values <> b1 var
R43747:43750 Coq.Init.Datatypes <> true constr
R43683:43685 Coq.Init.Logic <> :type_scope:x_'='_x not
R43679:43679 Values <> VAL_INJ_OPS.f var
R43681:43682 Values <> b1 var
R43686:43689 Coq.Init.Datatypes <> Some constr
R43690:43690 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43693:43694 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43700:43700 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R43691:43692 Values <> b2 var
R43695:43699 Values <> delta var
var 43844:43867 VAL_INJ_OPS valid_different_ptrs_inj
R44098:44103 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R44091:44094 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R44088:44090 Values <> b1' var
R44095:44097 Values <> b2' var
R44149:44152 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R44104:44115 Integers Int unsigned def
R44118:44124 Integers Int add def
R44132:44139 Integers Int repr def
R44141:44146 Values <> delta1 var
R44126:44129 Values <> ofs1 var
R44153:44164 Integers Int unsigned def
R44167:44173 Integers Int add def
R44181:44188 Integers Int repr def
R44190:44195 Values <> delta2 var
R44175:44178 Values <> ofs2 var
R44061:44063 Coq.Init.Logic <> :type_scope:x_'='_x not
R44057:44057 Values <> VAL_INJ_OPS.f var
R44059:44060 Values <> b2 var
R44064:44067 Coq.Init.Datatypes <> Some constr
R44069:44069 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44073:44074 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44081:44081 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44070:44072 Values <> b2' var
R44075:44080 Values <> delta2 var
R44030:44032 Coq.Init.Logic <> :type_scope:x_'='_x not
R44026:44026 Values <> VAL_INJ_OPS.f var
R44028:44029 Values <> b1 var
R44033:44036 Coq.Init.Datatypes <> Some constr
R44038:44038 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44042:44043 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44050:44050 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R44039:44041 Values <> b1' var
R44044:44049 Values <> delta1 var
R44013:44015 Coq.Init.Logic <> :type_scope:x_'='_x not
R43980:43989 Values <> VAL_INJ_OPS.valid_ptr1 var
R43995:44006 Integers Int unsigned def
R44008:44011 Values <> ofs2 var
R43991:43992 Values <> b2 var
R44016:44019 Coq.Init.Datatypes <> true constr
R43967:43969 Coq.Init.Logic <> :type_scope:x_'='_x not
R43934:43943 Values <> VAL_INJ_OPS.valid_ptr1 var
R43949:43960 Integers Int unsigned def
R43962:43965 Values <> ofs1 var
R43945:43946 Values <> b1 var
R43970:43973 Coq.Init.Datatypes <> true constr
R43922:43925 Coq.Init.Logic <> :type_scope:x_'<>'_x not
R43920:43921 Values <> b1 var
R43926:43927 Values <> b2 var
prf 44207:44226 <> val_cmpu_bool_inject
R44390:44392 Coq.Init.Logic <> :type_scope:x_'='_x not
R44356:44368 Values Val cmpu_bool def
R44387:44389 Values <> v2' var
R44383:44385 Values <> v1' var
R44381:44381 Values <> c var
R44370:44379 Values <> VAL_INJ_OPS.valid_ptr2 var
R44393:44396 Coq.Init.Datatypes <> Some constr
R44398:44398 Values <> b var
R44341:44343 Coq.Init.Logic <> :type_scope:x_'='_x not
R44309:44321 Values Val cmpu_bool def
R44339:44340 Values <> v2 var
R44336:44337 Values <> v1 var
R44334:44334 Values <> c var
R44323:44332 Values <> VAL_INJ_OPS.valid_ptr1 var
R44344:44347 Coq.Init.Datatypes <> Some constr
R44349:44349 Values <> b var
R44284:44293 Values <> val_inject ind
R44300:44302 Values <> v2' var
R44297:44298 Values <> v2 var
R44295:44295 Values <> VAL_INJ_OPS.f var
R44259:44268 Values <> val_inject ind
R44275:44277 Values <> v1' var
R44272:44273 Values <> v1 var
R44270:44270 Values <> VAL_INJ_OPS.f var
R44423:44429 Integers Int add def
R44540:44554 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44560:44571 Integers Int unsigned def
R44540:44554 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44560:44571 Integers Int unsigned def
R44595:44609 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44615:44626 Integers Int unsigned def
R44595:44609 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44615:44626 Integers Int unsigned def
R44650:44664 Values <> VAL_INJ_OPS.weak_valid_ptr2 var
R44670:44681 Integers Int unsigned def
R44684:44690 Integers Int add def
R44698:44705 Integers Int repr def
R44650:44664 Values <> VAL_INJ_OPS.weak_valid_ptr2 var
R44670:44681 Integers Int unsigned def
R44684:44690 Integers Int add def
R44698:44705 Integers Int repr def
R44726:44740 Values <> VAL_INJ_OPS.weak_valid_ptr2 var
R44746:44757 Integers Int unsigned def
R44760:44766 Integers Int add def
R44774:44781 Integers Int repr def
R44726:44740 Values <> VAL_INJ_OPS.weak_valid_ptr2 var
R44746:44757 Integers Int unsigned def
R44760:44766 Integers Int add def
R44774:44781 Integers Int repr def
R44808:44815 Values <> eq_block def
R44808:44815 Values <> eq_block def
R44867:44877 Coqlib <> dec_eq_true thm
R44867:44877 Coqlib <> dec_eq_true thm
R44892:44906 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44912:44923 Integers Int unsigned def
R44892:44906 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44912:44923 Integers Int unsigned def
R44969:44983 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44989:45000 Integers Int unsigned def
R44969:44983 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R44989:45000 Integers Int unsigned def
R45046:45063 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45046:45063 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45046:45063 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45046:45063 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45118:45135 Integers Int translate_cmpu thm
R45118:45135 Integers Int translate_cmpu thm
R45157:45166 Values <> VAL_INJ_OPS.valid_ptr1 var
R45172:45183 Integers Int unsigned def
R45157:45166 Values <> VAL_INJ_OPS.valid_ptr1 var
R45172:45183 Integers Int unsigned def
R45229:45238 Values <> VAL_INJ_OPS.valid_ptr1 var
R45244:45255 Integers Int unsigned def
R45229:45238 Values <> VAL_INJ_OPS.valid_ptr1 var
R45244:45255 Integers Int unsigned def
R45301:45308 Values <> eq_block def
R45301:45308 Values <> eq_block def
R45416:45418 Coq.Init.Logic <> :type_scope:x_'='_x not
R45395:45409 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R45413:45415 Values <> ofs var
R45411:45411 Values <> b var
R45419:45422 Coq.Init.Datatypes <> true constr
R45384:45386 Coq.Init.Logic <> :type_scope:x_'='_x not
R45368:45377 Values <> VAL_INJ_OPS.valid_ptr1 var
R45381:45383 Values <> ofs var
R45379:45379 Values <> b var
R45387:45390 Coq.Init.Datatypes <> true constr
R45416:45418 Coq.Init.Logic <> :type_scope:x_'='_x not
R45395:45409 Values <> VAL_INJ_OPS.weak_valid_ptr1 var
R45413:45415 Values <> ofs var
R45411:45411 Values <> b var
R45419:45422 Coq.Init.Datatypes <> true constr
R45384:45386 Coq.Init.Logic <> :type_scope:x_'='_x not
R45368:45377 Values <> VAL_INJ_OPS.valid_ptr1 var
R45381:45383 Values <> ofs var
R45379:45379 Values <> b var
R45387:45390 Coq.Init.Datatypes <> true constr
R45445:45459 Values <> weak_valid_ptr1 vardef
R45493:45510 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45493:45510 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45493:45510 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45493:45510 Values <> VAL_INJ_OPS.weak_valid_ptr_inj var
R45563:45586 Values <> VAL_INJ_OPS.valid_different_ptrs_inj var
R45685:45696 Integers Int eq_false thm
R45685:45696 Integers Int eq_false thm
R45741:45752 Integers Int eq_false thm
R45741:45752 Integers Int eq_false thm
R45789:45801 Values <> VAL_INJ_OPS.valid_ptr_inj var
R45789:45801 Values <> VAL_INJ_OPS.valid_ptr_inj var
R45789:45801 Values <> VAL_INJ_OPS.valid_ptr_inj var
R45789:45801 Values <> VAL_INJ_OPS.valid_ptr_inj var
prf 45825:45846 <> val_longofwords_inject
R45921:45930 Values <> val_inject ind
R45959:45973 Values Val longofwords def
R45979:45981 Values <> v2' var
R45975:45977 Values <> v1' var
R45935:45949 Values Val longofwords def
R45954:45955 Values <> v2 var
R45951:45952 Values <> v1 var
R45932:45932 Values <> VAL_INJ_OPS.f var
R45898:45907 Values <> val_inject ind
R45914:45916 Values <> v2' var
R45911:45912 Values <> v2 var
R45909:45909 Values <> VAL_INJ_OPS.f var
R45875:45884 Values <> val_inject ind
R45891:45893 Values <> v1' var
R45888:45889 Values <> v1 var
R45886:45886 Values <> VAL_INJ_OPS.f var
R46009:46023 Values Val longofwords def
prf 46065:46081 <> val_loword_inject
R46120:46129 Values <> val_inject ind
R46149:46158 Values Val loword def
R46160:46161 Values <> v' var
R46134:46143 Values Val loword def
R46145:46145 Values <> v var
R46131:46131 Values <> VAL_INJ_OPS.f var
R46099:46108 Values <> val_inject ind
R46114:46115 Values <> v' var
R46112:46112 Values <> v var
R46110:46110 Values <> VAL_INJ_OPS.f var
R46189:46198 Values Val loword def
prf 46227:46243 <> val_hiword_inject
R46282:46291 Values <> val_inject ind
R46311:46320 Values Val hiword def
R46322:46323 Values <> v' var
R46296:46305 Values Val hiword def
R46307:46307 Values <> v var
R46293:46293 Values <> VAL_INJ_OPS.f var
R46261:46270 Values <> val_inject ind
R46276:46277 Values <> v' var
R46274:46274 Values <> v var
R46272:46272 Values <> VAL_INJ_OPS.f var
R46351:46360 Values Val hiword def
R46387:46397 Values VAL_INJ_OPS <> sec
def 46462:46472 <> inject_incr
R46482:46487 Values <> meminj def
R46551:46553 Coq.Init.Logic <> :type_scope:x_'='_x not
R46547:46548 Values <> f2 var
R46550:46550 Values <> b var
R46554:46557 Coq.Init.Datatypes <> Some constr
R46558:46558 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46561:46562 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46568:46568 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46559:46560 Values <> b' var
R46563:46567 Values <> delta var
R46525:46527 Coq.Init.Logic <> :type_scope:x_'='_x not
R46521:46522 Values <> f1 var
R46524:46524 Values <> b var
R46528:46531 Coq.Init.Datatypes <> Some constr
R46532:46532 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46535:46536 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46542:46542 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R46533:46534 Values <> b' var
R46537:46541 Values <> delta var
prf 46578:46593 <> inject_incr_refl
R46611:46621 Values <> inject_incr def
R46625:46625 Values <> f var
R46623:46623 Values <> f var
R46643:46653 Values <> inject_incr def
prf 46674:46690 <> inject_incr_trans
R46758:46768 Values <> inject_incr def
R46773:46774 Values <> f3 var
R46770:46771 Values <> f1 var
R46737:46747 Values <> inject_incr def
R46752:46753 Values <> f3 var
R46749:46750 Values <> f2 var
R46716:46726 Values <> inject_incr def
R46731:46732 Values <> f2 var
R46728:46729 Values <> f1 var
R46794:46804 Values <> inject_incr def
prf 46835:46849 <> val_inject_incr
R46922:46931 Values <> val_inject ind
R46938:46939 Values <> v' var
R46936:46936 Values <> v var
R46933:46934 Values <> f2 var
R46898:46907 Values <> val_inject ind
R46914:46915 Values <> v' var
R46912:46912 Values <> v var
R46909:46910 Values <> f1 var
R46875:46885 Values <> inject_incr def
R46890:46891 Values <> f2 var
R46887:46888 Values <> f1 var
prf 46986:47005 <> val_list_inject_incr
R47086:47100 Values <> val_list_inject ind
R47108:47110 Values <> vl' var
R47105:47106 Values <> vl var
R47102:47103 Values <> f2 var
R47055:47069 Values <> val_list_inject ind
R47077:47079 Values <> vl' var
R47074:47075 Values <> vl var
R47071:47072 Values <> f1 var
R47034:47044 Values <> inject_incr def
R47049:47050 Values <> f2 var
R47046:47047 Values <> f1 var
R47180:47194 Values <> val_inject_incr thm
R47180:47194 Values <> val_inject_incr thm
R47229:47244 Values <> inject_incr_refl thm
R47246:47260 Values <> val_inject_incr thm
R47262:47281 Values <> val_list_inject_incr thm
prf 47291:47308 <> val_inject_lessdef
R47344:47348 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47327:47337 Values Val lessdef ind
R47342:47343 Values <> v2 var
R47339:47340 Values <> v1 var
R47349:47358 Values <> val_inject ind
R47385:47386 Values <> v2 var
R47382:47383 Values <> v1 var
R47370:47373 Coq.Init.Datatypes <> Some constr
R47374:47374 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47376:47377 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47379:47379 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47375:47375 Values <> b var
R47478:47489 Integers Int add_zero thm
R47478:47489 Integers Int add_zero thm
R47530:47541 Integers Int add_zero thm
R47530:47541 Integers Int add_zero thm
prf 47562:47584 <> val_list_inject_lessdef
R47629:47633 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R47605:47620 Values Val lessdef_list ind
R47626:47628 Values <> vl2 var
R47622:47624 Values <> vl1 var
R47634:47648 Values <> val_list_inject ind
R47676:47678 Values <> vl2 var
R47672:47674 Values <> vl1 var
R47660:47663 Coq.Init.Datatypes <> Some constr
R47664:47664 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47666:47667 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47669:47669 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47665:47665 Values <> b var
R47745:47762 Values <> val_inject_lessdef thm
R47745:47762 Values <> val_inject_lessdef thm
R47811:47828 Values <> val_inject_lessdef thm
R47811:47828 Values <> val_inject_lessdef thm
def 47933:47941 <> inject_id
R47945:47950 Values <> meminj def
R47964:47967 Coq.Init.Datatypes <> Some constr
R47968:47968 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47970:47971 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47973:47973 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R47969:47969 Values <> b var
prf 47983:47995 <> val_inject_id
R48042:48046 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R48016:48025 Values <> val_inject ind
R48040:48041 Values <> v2 var
R48037:48038 Values <> v1 var
R48027:48035 Values <> inject_id def
R48047:48057 Values Val lessdef ind
R48062:48063 Values <> v2 var
R48059:48060 Values <> v1 var
R48123:48131 Values <> inject_id def
R48156:48167 Integers Int add_zero thm
R48156:48167 Integers Int add_zero thm
R48226:48234 Values <> inject_id def
R48258:48269 Integers Int add_zero thm
R48258:48269 Integers Int add_zero thm
def 48350:48363 <> compose_meminj
R48372:48377 Values <> meminj def
R48382:48387 Values <> meminj def
R48413:48413 Values <> f var
R48415:48415 Values <> b var
R48428:48431 Coq.Init.Datatypes <> None constr
R48436:48439 Coq.Init.Datatypes <> None constr
R48447:48450 Coq.Init.Datatypes <> Some constr
R48451:48451 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48454:48455 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48461:48461 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48480:48481 Values <> f' var
R48501:48504 Coq.Init.Datatypes <> None constr
R48509:48512 Coq.Init.Datatypes <> None constr
R48524:48527 Coq.Init.Datatypes <> Some constr
R48528:48528 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48532:48533 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48540:48540 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48545:48548 Coq.Init.Datatypes <> Some constr
R48549:48549 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48553:48554 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48569:48569 Coq.Init.Datatypes <> :core_scope:'('_x_','_x_','_'..'_','_x_')' not
R48560:48562 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
prf 48599:48616 <> val_inject_compose
R48692:48701 Values <> val_inject ind
R48728:48729 Values <> v3 var
R48725:48726 Values <> v1 var
R48704:48717 Values <> compose_meminj def
R48721:48722 Values <> f' var
R48719:48719 Values <> f var
R48667:48676 Values <> val_inject ind
R48684:48685 Values <> v3 var
R48681:48682 Values <> v2 var
R48678:48679 Values <> f' var
R48645:48654 Values <> val_inject ind
R48661:48662 Values <> v2 var
R48658:48659 Values <> v1 var
R48656:48656 Values <> f var
R48799:48812 Values <> compose_meminj def
R48857:48869 Integers Int add_assoc thm
R48857:48869 Integers Int add_assoc thm
R48886:48892 Integers Int add def
R48901:48916 Integers Int eqm_samerepr thm
R48901:48916 Integers Int eqm_samerepr thm
